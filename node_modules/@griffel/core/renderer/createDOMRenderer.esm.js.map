{"version":3,"file":"createDOMRenderer.esm.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { normalizeCSSBucketEntry } from '../runtime/utils/normalizeCSSBucketEntry';\nimport type { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\nimport { safeInsertRule } from './safeInsertRule';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * If specified, a renderer will insert created style tags after this element.\n   */\n  insertionPoint?: HTMLElement;\n\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n\n  /**\n   * @param a - media query\n   * @param b - media query\n   * @returns positive number if a > b or negative number if a < b\n   */\n  compareMediaQueries?: (a: string, b: string) => number;\n}\n\n/** @internal */\nexport const defaultCompareMediaQueries = (a: string, b: string) => (a < b ? -1 : a > b ? 1 : 0);\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  targetDocument: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const {\n    unstable_filterCSSRule,\n    insertionPoint,\n    styleElementAttributes,\n    compareMediaQueries = defaultCompareMediaQueries,\n  } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    stylesheets: {},\n    styleElementAttributes: Object.freeze(styleElementAttributes),\n    compareMediaQueries,\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      // eslint-disable-next-line guard-for-in\n      for (const styleBucketName in cssRules) {\n        const cssRulesForBucket = cssRules[styleBucketName as StyleBucketName]!;\n\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\n          const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);\n          const sheet = getStyleSheetForBucket(\n            styleBucketName as StyleBucketName,\n            targetDocument,\n            insertionPoint || null,\n            renderer,\n            metadata,\n          );\n\n          if (renderer.insertionCache[ruleCSS]) {\n            continue;\n          }\n\n          renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n            debugData.addCSSRule(ruleCSS);\n          }\n\n          if (unstable_filterCSSRule) {\n            if (unstable_filterCSSRule(ruleCSS)) {\n              safeInsertRule(sheet, ruleCSS);\n            }\n          } else {\n            safeInsertRule(sheet, ruleCSS);\n          }\n        }\n      }\n    },\n  };\n\n  if (targetDocument && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(targetDocument);\n  }\n\n  return renderer;\n}\n"],"names":["lastIndex","defaultCompareMediaQueries","a","b","createDOMRenderer","targetDocument","document","undefined","options","unstable_filterCSSRule","insertionPoint","styleElementAttributes","compareMediaQueries","renderer","insertionCache","stylesheets","Object","freeze","id","insertCSSRules","cssRules","styleBucketName","cssRulesForBucket","i","l","length","ruleCSS","metadata","normalizeCSSBucketEntry","sheet","getStyleSheetForBucket","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","safeInsertRule","injectDevTools"],"mappings":";;;;;;;AAMA,IAAIA,SAAS,GAAG,CAAC,CAAA;AAiCjB;AACO,MAAMC,0BAA0B,GAAGA,CAACC,CAAS,EAAEC,CAAS,KAAMD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAG,EAAE;;AAEhG;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAC/BC,cAAoC,GAAG,OAAOC,QAAQ,KAAK,WAAW,GAAGC,SAAS,GAAGD,QAAQ,EAC7FE,OAAiC,GAAG,EAAE,EACrB;EACjB,MAAM;IACJC,sBAAsB;IACtBC,cAAc;IACdC,sBAAsB;AACtBC,IAAAA,mBAAmB,GAAGX,0BAAAA;AACxB,GAAC,GAAGO,OAAO,CAAA;AACX,EAAA,MAAMK,QAAyB,GAAG;IAChCC,cAAc,EAAE,EAAE;IAClBC,WAAW,EAAE,EAAE;AACfJ,IAAAA,sBAAsB,EAAEK,MAAM,CAACC,MAAM,CAACN,sBAAsB,CAAC;IAC7DC,mBAAmB;AAEnBM,IAAAA,EAAE,EAAG,CAAA,CAAA,EAAGlB,SAAS,EAAG,CAAC,CAAA;IAErBmB,cAAcA,CAACC,QAAQ,EAAE;AACvB;AACA,MAAA,KAAK,MAAMC,eAAe,IAAID,QAAQ,EAAE;AACtC,QAAA,MAAME,iBAAiB,GAAGF,QAAQ,CAACC,eAAe,CAAqB,CAAA;;AAEvE;AACA,QAAA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGF,iBAAiB,CAACG,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;AACxD,UAAA,MAAM,CAACG,OAAO,EAAEC,QAAQ,CAAC,GAAGC,uBAAuB,CAACN,iBAAiB,CAACC,CAAC,CAAC,CAAC,CAAA;AACzE,UAAA,MAAMM,KAAK,GAAGC,sBAAsB,CAClCT,eAAe,EACfhB,cAAc,EACdK,cAAc,IAAI,IAAI,EACtBG,QAAQ,EACRc,QACF,CAAC,CAAA;AAED,UAAA,IAAId,QAAQ,CAACC,cAAc,CAACY,OAAO,CAAC,EAAE;AACpC,YAAA,SAAA;AACF,WAAA;AAEAb,UAAAA,QAAQ,CAACC,cAAc,CAACY,OAAO,CAAC,GAAGL,eAAkC,CAAA;UAErE,IAAIU,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIC,iBAAiB,EAAE;AAC9DC,YAAAA,SAAS,CAACC,UAAU,CAACV,OAAO,CAAC,CAAA;AAC/B,WAAA;AAEA,UAAA,IAAIjB,sBAAsB,EAAE;AAC1B,YAAA,IAAIA,sBAAsB,CAACiB,OAAO,CAAC,EAAE;AACnCW,cAAAA,cAAc,CAACR,KAAK,EAAEH,OAAO,CAAC,CAAA;AAChC,aAAA;AACF,WAAC,MAAM;AACLW,YAAAA,cAAc,CAACR,KAAK,EAAEH,OAAO,CAAC,CAAA;AAChC,WAAA;AACF,SAAA;AACF,OAAA;AACF,KAAA;GACD,CAAA;EAED,IAAIrB,cAAc,IAAI0B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIC,iBAAiB,EAAE;IAChFI,cAAc,CAACjC,cAAc,CAAC,CAAA;AAChC,GAAA;AAEA,EAAA,OAAOQ,QAAQ,CAAA;AACjB;;;;"}