{"version":3,"file":"resolveStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport type { GriffelAnimation, GriffelStyle } from '@griffel/style-types';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX, UNSUPPORTED_CSS_PROPERTIES } from '../constants';\nimport type { CSSClassesMap, CSSRulesByBucket, StyleBucketName, CSSBucketEntry } from '../types';\nimport type { CompileAtomicCSSOptions } from './compileAtomicCSSRule';\nimport { compileAtomicCSSRule } from './compileAtomicCSSRule';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { trimSelector } from './utils/trimSelector';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule';\nimport { warnAboutUnsupportedProperties } from './warnings/warnAboutUnsupportedProperties';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction createBucketEntry(cssRule: string, metadata: Record<string, unknown> | undefined): CSSBucketEntry {\n  if (metadata) {\n    return [cssRule, metadata];\n  }\n\n  return cssRule;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string | undefined,\n  rtlCSS: string | undefined,\n  media: string | undefined,\n) {\n  let metadata: Record<string, unknown> | undefined;\n  if (styleBucketName === 'm' && media) {\n    metadata = { m: media };\n  }\n\n  cssRulesByBucket[styleBucketName] ??= [];\n\n  if (ltrCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(ltrCSS, metadata));\n  }\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(rtlCSS, metadata));\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  selectors: string[] = [],\n  media = '',\n  layer = '',\n  support = '',\n  container = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      warnAboutUnsupportedProperties(property, styles[property as keyof GriffelStyle]);\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      const selector = trimSelector(selectors.join(''));\n\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selector, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        selector,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            container,\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            selector,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n            media,\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        selectors,\n        media,\n        layer,\n        support,\n        container,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const selector = trimSelector(selectors.join(''));\n\n      const key = hashPropertyKey(selector, container, media, support, property);\n      const className = hashClassName({\n        container,\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        selector,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            container,\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            selector,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as unknown as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support, container);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        container,\n        value: value as unknown as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors.concat(normalizeNestedProperty(property)),\n          media,\n          layer,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          combinedMediaQuery,\n          layer,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          combinedLayerQuery,\n          support,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          layer,\n          combinedSupportQuery,\n          container,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isContainerQuerySelector(property)) {\n        // TODO implement nested container queries if needed\n        // The only way to target multiple containers is to nest container queries\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/@container#nested_container_queries\n        const containerQuery = property.slice(10).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          layer,\n          support,\n          containerQuery,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        warnAboutUnresolvedRule(property, value);\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","createBucketEntry","cssRule","metadata","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","media","m","_a","push","resolveStyleRules","styles","selectors","layer","support","container","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","warnAboutUnsupportedProperties","value","selector","trimSelector","join","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileAtomicCSSRule","Object","assign","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","process","env","NODE_ENV","console","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","error","d","isObject","isNestedSelector","concat","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","isContainerQuerySelector","containerQuery","warnAboutUnresolvedRule"],"mappings":"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"}