{"version":3,"file":"resolveResetStyleRules.esm.js","sources":["../../../../packages/core/src/runtime/resolveResetStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport type { GriffelResetStyle, GriffelAnimation } from '@griffel/style-types';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { RESET_HASH_PREFIX } from '../constants';\nimport type { CSSRulesByBucket } from '../types';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isObject } from './utils/isObject';\nimport { hyphenateProperty } from './utils/hyphenateProperty';\nimport { normalizePseudoSelector } from './compileAtomicCSSRule';\nimport { compileResetCSSRules } from './compileResetCSSRules';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule';\n\n/**\n * @internal\n */\nfunction createStringFromStyles(styles: GriffelResetStyle) {\n  let ltrCSS = '';\n  let rtlCSS = '';\n\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    const value = styles[property as keyof GriffelResetStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      const { key: rtlProperty, value: rtlValue } = convertProperty(property, value);\n\n      ltrCSS += `${hyphenateProperty(property)}:${value};`;\n      rtlCSS += `${hyphenateProperty(rtlProperty)}:${rtlValue};`;\n\n      continue;\n    }\n\n    if (property === 'animationName' && typeof value === 'object') {\n      const values = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const ltrAnimationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of values) {\n        const ltrKeyframeRule = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeRule = compileKeyframeRule(convert(keyframeObject));\n\n        const ltrAnimationName = RESET_HASH_PREFIX + hashString(ltrKeyframeRule);\n        const rtlAnimationName = RESET_HASH_PREFIX + hashString(rtlKeyframeRule);\n\n        ltrAnimationNames.push(ltrAnimationName);\n        rtlAnimationNames.push(rtlAnimationName);\n\n        ltrCSS += compileKeyframesCSS(ltrAnimationName, ltrKeyframeRule).join('');\n\n        if (ltrAnimationName !== rtlAnimationName) {\n          rtlCSS += compileKeyframesCSS(rtlAnimationName, rtlKeyframeRule).join('');\n        }\n      }\n\n      ltrCSS += `animation-name:${ltrAnimationNames.join(',')};`;\n      rtlCSS += `animation-name:${rtlAnimationNames.join(',')};`;\n\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeResetStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const rtlProperty = rtlDefinitions[0].key;\n\n      ltrCSS += value.map(v => `${hyphenateProperty(property)}:${v};`).join('');\n      rtlCSS += rtlDefinitions.map(definition => `${hyphenateProperty(rtlProperty)}:${definition.value};`).join('');\n\n      continue;\n    }\n\n    if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        const nestedSelector = normalizePseudoSelector(property);\n        const [ltrNested, rtlNested] = createStringFromStyles(value);\n\n        ltrCSS += `${nestedSelector}{${ltrNested}}`;\n        rtlCSS += `${nestedSelector}{${rtlNested}}`;\n\n        continue;\n      }\n\n      if (\n        isMediaQuerySelector(property) ||\n        isLayerSelector(property) ||\n        isSupportQuerySelector(property) ||\n        isContainerQuerySelector(property)\n      ) {\n        const [ltrNested, rtlNested] = createStringFromStyles(value);\n\n        ltrCSS += `${property}{${ltrNested}}`;\n        rtlCSS += `${property}{${rtlNested}}`;\n\n        continue;\n      }\n    }\n\n    warnAboutUnresolvedRule(property, value as GriffelResetStyle);\n  }\n\n  return [ltrCSS, rtlCSS];\n}\n\n/**\n * @internal\n */\nexport function resolveResetStyleRules(\n  styles: GriffelResetStyle,\n): [string, string | null, CSSRulesByBucket | string[]] {\n  const [ltrRule, rtlRule] = createStringFromStyles(styles);\n\n  const ltrClassName = RESET_HASH_PREFIX + hashString(ltrRule);\n  const [ltrCSS, ltrCSSAtRules] = compileResetCSSRules(`.${ltrClassName}{${ltrRule}}`);\n\n  const hasAtRules = ltrCSSAtRules.length > 0;\n\n  if (ltrRule === rtlRule) {\n    return [ltrClassName, null, hasAtRules ? { r: ltrCSS, s: ltrCSSAtRules } : ltrCSS];\n  }\n\n  const rtlClassName = RESET_HASH_PREFIX + hashString(rtlRule);\n  const [rtlCSS, rtlCSSAtRules] = compileResetCSSRules(`.${rtlClassName}{${rtlRule}}`);\n\n  return [\n    ltrClassName,\n    rtlClassName,\n    hasAtRules ? { r: ltrCSS.concat(rtlCSS), s: ltrCSSAtRules.concat(rtlCSSAtRules) } : ltrCSS.concat(rtlCSS),\n  ];\n}\n"],"names":["createStringFromStyles","styles","ltrCSS","rtlCSS","property","value","key","rtlProperty","rtlValue","convertProperty","hyphenateProperty","values","Array","isArray","ltrAnimationNames","rtlAnimationNames","keyframeObject","ltrKeyframeRule","compileKeyframeRule","rtlKeyframeRule","convert","ltrAnimationName","RESET_HASH_PREFIX","hashString","rtlAnimationName","push","compileKeyframesCSS","join","length","process","env","NODE_ENV","console","warn","rtlDefinitions","map","v","rtlPropertyConsistent","some","error","definition","isObject","isNestedSelector","nestedSelector","normalizePseudoSelector","ltrNested","rtlNested","isMediaQuerySelector","isLayerSelector","isSupportQuerySelector","isContainerQuerySelector","warnAboutUnresolvedRule","resolveResetStyleRules","ltrRule","rtlRule","ltrClassName","ltrCSSAtRules","compileResetCSSRules","hasAtRules","r","s","rtlClassName","rtlCSSAtRules","concat"],"mappings":"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"}