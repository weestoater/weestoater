import { ForwardedRef, ReactElement } from "react";
import { DropdownBaseProps } from "../dropdown";
import { ListProps } from "../list";
import { InputLegacyProps as InputProps } from "../input-legacy";
import { SelectionProps, SelectionStrategy } from "../common-hooks";
export interface ComboBoxProps<Item = string, Selection extends SelectionStrategy = "default"> extends Omit<DropdownBaseProps, "triggerComponent" | "onBlur" | "onChange" | "onFocus">, Pick<InputProps, "onBlur" | "onChange" | "onFocus" | "onSelect">, Pick<ListProps<Item, Selection>, "ListItem" | "itemToString" | "source" | "width">, Pick<SelectionProps<Item, Selection>, "onSelectionChange" | "selectionStrategy"> {
    InputProps?: InputProps;
    ListProps?: Omit<ListProps<Item, Selection>, "ListItem" | "itemToString" | "source">;
    allowFreeText?: boolean;
    defaultValue?: string;
    getFilterRegex?: (inputValue: string) => RegExp;
    stringToItem?: (value?: string) => Item | null | undefined;
    value?: string;
}
export declare const ComboBox: <Item, Selection_1 extends SelectionStrategy = "default">(props: ComboBoxProps<Item, Selection_1> & {
    ref?: ForwardedRef<HTMLDivElement> | undefined;
}) => ReactElement<ComboBoxProps<Item, Selection_1>, string | import("react").JSXElementConstructor<any>>;
