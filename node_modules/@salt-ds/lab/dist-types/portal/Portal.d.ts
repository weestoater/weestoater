import { ReactNode } from "react";
export interface PortalProps {
    /**
     * The children to render into the `container`.
     */
    children?: ReactNode;
    /**
     * An HTML element, component instance, or function that returns either.
     * The `container` will have the portal children appended to it.
     *
     * By default, it uses the body of the top-level document object,
     * so it's simply `document.body` most of the time.
     */
    container?: Element | (() => Element | null) | null;
    /**
     * Disable the portal behavior.
     * The children stay within it's parent DOM hierarchy.
     */
    disablePortal?: boolean;
    /**
     * If this node does not exist on the document, it will be created for you.
     */
    id?: string;
}
/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */
export declare const Portal: import("react").ForwardRefExoticComponent<PortalProps & import("react").RefAttributes<HTMLElement>>;
