import { HTMLAttributes, ReactNode } from "react";
import { ButtonVariant } from "@salt-ds/core";
export declare type PartialRecord<K extends keyof any, T> = Partial<Record<K, T>>;
declare type ButtonBarOrderKey = "order" | "alignLeftOrder" | "stackOrder";
export declare type ButtonBarSortOrder = "asc" | "desc";
export declare const DefaultButtonsOrderByVariant: Record<ButtonVariant, Record<ButtonBarOrderKey, number>>;
export interface ButtonBarProps extends HTMLAttributes<HTMLDivElement> {
    /**
     * By default ButtonBar lays buttons from right to left horizontally ordering action buttons by order prop.
     * Use this prop to lay button from left to right instead.
     * Actions buttons will be ordered by alignLeftOrder prop.
     */
    alignLeft?: boolean;
    /**
     * A list of OrderButtons. Required to have some children.
     */
    children: ReactNode;
    /**
     * The className(s) of the component
     */
    className?: string;
    /**
     * By default ButtonBar aligns secondary buttons to the left while displayed horizontally
     * and to the right while aligned left or sorting ascending.
     * Use this prop to disable this behavior.
     */
    disableAutoAlignment?: boolean;
    /**
     * By default ButtonBar sorts buttons in descending order.
     * Use this prop to change that when the button bar is NOT stacked and aligned left.
     */
    sortAlignLeft?: ButtonBarSortOrder;
    /**
     * By default ButtonBar sorts buttons in descending order.
     * Use this prop to change that when the button bar is NOT stacked and NOT aligned left.
     */
    sortOrder?: ButtonBarSortOrder;
    /**
     * By default ButtonBar sorts buttons in descending order.
     * Use this prop to change that when the button bar is stacked.
     */
    sortStackOrder?: ButtonBarSortOrder;
    /**
     * When the viewport is equal to or smaller than the breakpoint the buttons will be stacked vertically.
     * Alternatively pass a screen width number in pixels.
     * Use `0` to disable this feature. Defaults to 'xs'.
     * Actions buttons will be ordered by stackOrder prop.
     */
    stackAtBreakpoint?: "xs" | "sm" | "md" | "lg" | "xl" | number;
}
export declare const ButtonBar: import("react").ForwardRefExoticComponent<ButtonBarProps & import("react").RefAttributes<HTMLDivElement>>;
export {};
