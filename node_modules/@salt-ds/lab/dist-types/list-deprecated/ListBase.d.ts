import { ForwardedRef, HTMLAttributes, ReactElement, Ref } from "react";
import { ListBaseProps } from "./ListProps";
export interface ListboxContextProps<Item> {
    borderless?: boolean;
    className?: string;
    disabled?: boolean;
    disableFocus?: boolean;
    getItemId?: (index: number) => string;
    getItemHeight?: (index?: number) => number;
    id?: string;
    itemToString?: (item: Item) => string;
    listRef?: Ref<any>;
    style?: any;
    onScroll?: (evt: any) => void;
}
export interface ListboxProps extends HTMLAttributes<HTMLDivElement> {
    onScroll?: (evt: any) => void;
}
export interface ListScrollHandles<Item> {
    scrollToIndex: (itemIndex: number) => void;
    scrollToItem: (item: Item) => void;
    scrollTo: (scrollOffset: number) => void;
}
export declare const ListBase: <Item>(p: ListBaseProps<Item> & {
    ref?: ForwardedRef<ListScrollHandles<Item>> | undefined;
}) => ReactElement<ListBaseProps<Item>, string | import("react").JSXElementConstructor<any>>;
