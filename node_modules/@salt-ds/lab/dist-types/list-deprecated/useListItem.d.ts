import { ListChildComponentProps } from "react-window";
import { ListItemProps } from "./ListItem";
import { ListItemBaseProps } from "./ListItemBase";
declare type UseItemHookReturnType<Item> = {
    /**
     * Item data
     */
    item: Item;
    /**
     * Utility function for converting item data to a string
     */
    itemToString: (item: Item) => string;
    /**
     * Properties applied to a basic list item component
     */
    itemProps: ListItemBaseProps;
};
export interface IndexedListItemProps<Item> extends ListItemProps<Item> {
    ariaProps?: {
        role?: string;
        "aria-disabled"?: string;
        "aria-checked"?: string;
        "aria-posinset"?: number;
        "aria-setsize"?: number;
    };
    index: number;
    itemHeight?: number | string;
}
export declare function useListItem<Item>(props: IndexedListItemProps<Item>): UseItemHookReturnType<Item>;
declare type VirtualizedListItemProps = Pick<ListChildComponentProps, "index" | "style" | "data">;
export declare const useVirtualizedListItem: (props: VirtualizedListItemProps) => UseItemHookReturnType<any>;
export {};
