import { KeyboardEvent } from "react";
import { OverflowItem } from "../responsive";
export declare type ExitEditModeHandler = (originalValue: string, editedValue: string, allowDeactivation: boolean, tabIndex: number) => void;
export interface Editable {
    editing: boolean;
    onEnterEditMode: () => void;
    onExitEditMode: ExitEditModeHandler;
    setEditing: (value: boolean) => void;
}
export interface EditableItemHookProps extends Partial<Editable> {
    highlightedIdx: number;
    indexPositions: OverflowItem[];
}
export interface EditableItemHookResult extends Editable {
    onKeyDown: (evt: KeyboardEvent) => void;
}
export declare const useEditableItem: ({ editing: editingProp, highlightedIdx, indexPositions, onEnterEditMode: onEnterEditModeProp, onExitEditMode: onExitEditModeProp, }: EditableItemHookProps) => EditableItemHookResult;
