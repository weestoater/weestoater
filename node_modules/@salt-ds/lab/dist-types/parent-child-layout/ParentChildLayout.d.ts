import { Breakpoints, FlexLayoutProps } from "@salt-ds/core";
import { ReactNode } from "react";
export declare type StackedViewElement = "parent" | "child";
export interface ParentChildLayoutProps extends FlexLayoutProps<"div"> {
    /**
     * Breakpoint at which the parent and child will stack.
     */
    collapseAtBreakpoint?: keyof Breakpoints;
    /**
     * Change element that is displayed when in staked view.
     */
    collapsedViewElement?: StackedViewElement;
    /**
     * Disable all animations.
     */
    disableAnimations?: boolean;
    /**
     * Position of the parent component within the layout.
     */
    parentPosition?: "left" | "right";
    /**
     * Parent component to be rendered
     */
    parent: ReactNode;
    /**
     * Child component to be rendered
     */
    child: ReactNode;
    onCollapseChange?: (isCollapsed: boolean) => void;
}
export declare const ParentChildLayout: import("react").ForwardRefExoticComponent<Omit<ParentChildLayoutProps, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
