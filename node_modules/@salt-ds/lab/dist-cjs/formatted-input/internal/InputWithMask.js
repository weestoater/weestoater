'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var React = require('react');

const baseName = "saltFormattedInput";
function getClippedMask(mask, value, textAlign) {
  if (mask) {
    if (textAlign === "right") {
      return mask.substring(
        0,
        value ? mask.length - value.length : mask.length
      );
    }
    return mask.substring(value ? value.length : 0);
  }
  return "";
}
const InputWithMask = React.forwardRef(
  function InputWithMask2({
    "aria-labelledby": ariaLabelledBy,
    className,
    mask = "",
    value,
    id: idProp,
    style,
    textAlign,
    ...other
  }, ref) {
    const id = core.useId(idProp);
    const spacerAndMask = [
      /* @__PURE__ */ jsxRuntime.jsx("i", {
        children: value
      }, value),
      getClippedMask(mask, value, textAlign)
    ];
    return /* @__PURE__ */ jsxRuntime.jsxs("div", {
      className: `${baseName}-inputWrapper`,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx("input", {
          className,
          ...other,
          "aria-label": mask,
          "aria-labelledby": [ariaLabelledBy, id].filter((label) => label != null).join(" "),
          id,
          ref,
          style,
          value
        }),
        /* @__PURE__ */ jsxRuntime.jsx("span", {
          "aria-hidden": "true",
          className: clsx.clsx(`${baseName}-mask`, className),
          style,
          children: textAlign !== "right" ? spacerAndMask : spacerAndMask.reverse()
        })
      ]
    });
  }
);

exports.InputWithMask = InputWithMask;
exports.baseName = baseName;
//# sourceMappingURL=InputWithMask.js.map
