'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@salt-ds/core');
require('../../form-field-context-legacy/FormFieldLegacyContext.js');
var useFormFieldLegacyProps = require('../../form-field-context-legacy/useFormFieldLegacyProps.js');

const refreshButtonWidth = {
  touch: 36,
  low: 28,
  medium: 24,
  high: 12
};
function useActivationIndicatorPosition(adornmentRef, refreshButtonVisible) {
  const formFieldProps = useFormFieldLegacyProps.useFormFieldLegacyProps();
  const { ref: formFieldRef } = formFieldProps;
  const density = core.useDensity();
  core.useIsomorphicLayoutEffect(() => {
    let offset;
    if (adornmentRef && adornmentRef.current !== null) {
      const marginAdjustment = density === "high" || density === "medium" ? 2 : 4;
      const secondaryButtonAdjustment = refreshButtonVisible ? 0 : refreshButtonWidth[density];
      offset = adornmentRef.current.getBoundingClientRect().width - marginAdjustment - secondaryButtonAdjustment;
    }
    if (formFieldRef && formFieldRef.current && offset) {
      const activationIndicator = formFieldRef.current.getElementsByClassName(
        "saltFormActivationIndicator-icon"
      );
      if (activationIndicator.length > 0) {
        activationIndicator[0].style.transform = `translateX(-${offset}px)`;
      }
    }
  });
}

exports.useActivationIndicatorPosition = useActivationIndicatorPosition;
//# sourceMappingURL=useActivationIndicatorPosition.js.map
