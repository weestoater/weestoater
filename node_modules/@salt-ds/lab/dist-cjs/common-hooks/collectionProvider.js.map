{"version":3,"file":"collectionProvider.js","sources":["../src/common-hooks/collectionProvider.tsx"],"sourcesContent":["import { cloneElement, createContext, ReactElement, useContext } from \"react\";\nimport { CollectionHookResult } from \"./collectionTypes\";\n\nexport interface collectionContext<T> {\n  collection: CollectionHookResult<T>;\n}\n\nexport const CollectionContext = createContext<\n  CollectionHookResult<any> | undefined\n>(undefined);\n\ninterface ContextProviderProps<Item> {\n  children: ReactElement;\n  collectionHook: CollectionHookResult<Item>;\n}\n\nexport function CollectionProvider<Item>({\n  children,\n  collectionHook,\n  ...props\n}: ContextProviderProps<Item>) {\n  return (\n    <CollectionContext.Provider value={collectionHook}>\n      {Object.keys(props).length > 0 ? cloneElement(children, props) : children}\n    </CollectionContext.Provider>\n  );\n}\n\nexport function useCollection<Item>(): CollectionHookResult<Item> | undefined {\n  const collection = useContext(CollectionContext);\n  if (collection) {\n    return collection as CollectionHookResult<Item>;\n  }\n}\n"],"names":["createContext","jsx","cloneElement","useContext"],"mappings":";;;;;;;AAOa,MAAA,iBAAA,GAAoBA,oBAE/B,KAAS,CAAA,EAAA;AAOJ,SAAS,kBAAyB,CAAA;AAAA,EACvC,QAAA;AAAA,EACA,cAAA;AAAA,EACG,GAAA,KAAA;AACL,CAA+B,EAAA;AAC7B,EACE,uBAAAC,cAAA,CAAC,kBAAkB,QAAlB,EAAA;AAAA,IAA2B,KAAO,EAAA,cAAA;AAAA,IAChC,QAAA,EAAA,MAAA,CAAO,KAAK,KAAK,CAAA,CAAE,SAAS,CAAI,GAAAC,kBAAA,CAAa,QAAU,EAAA,KAAK,CAAI,GAAA,QAAA;AAAA,GACnE,CAAA,CAAA;AAEJ,CAAA;AAEO,SAAS,aAA8D,GAAA;AAC5E,EAAM,MAAA,UAAA,GAAaC,iBAAW,iBAAiB,CAAA,CAAA;AAC/C,EAAA,IAAI,UAAY,EAAA;AACd,IAAO,OAAA,UAAA,CAAA;AAAA,GACT;AACF;;;;;;"}