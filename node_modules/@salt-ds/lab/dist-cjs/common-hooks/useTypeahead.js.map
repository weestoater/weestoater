{"version":3,"file":"useTypeahead.js","sources":["../src/common-hooks/useTypeahead.ts"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport { isCharacterKey, Space } from \"./keyUtils\";\nimport { CollectionItem } from \"./collectionTypes\";\n\ninterface TypeaheadHookProps<Item> {\n  disableTypeToSelect?: boolean;\n  highlightedIdx: number;\n  highlightItemAtIndex: (idx: number) => void;\n  applyIncrementalSearch?: boolean;\n  typeToNavigate: boolean;\n  items: CollectionItem<Item>[];\n}\n\ninterface TypeaheadHookResult {\n  onKeyDown?: (e: React.KeyboardEvent) => void;\n}\n\nexport const useTypeahead = <Item>({\n  disableTypeToSelect,\n  highlightedIdx,\n  highlightItemAtIndex,\n  typeToNavigate,\n  items,\n  applyIncrementalSearch = true,\n}: TypeaheadHookProps<Item>): TypeaheadHookResult => {\n  const keyDownTimer = useRef<number | null>(null);\n  const searchChars = useRef(\"\");\n  const startIdx = useRef(-1);\n\n  const applySearch = useCallback(\n    (intermediateSearch?: true | undefined) => {\n      if (intermediateSearch || !applyIncrementalSearch) {\n        const regex = new RegExp(`^${searchChars.current}`, \"i\");\n        let idx = items.findIndex(\n          ({ label }, i) => i > startIdx.current && regex.test(label!)\n        );\n        if (idx === -1) {\n          idx = items.findIndex(\n            ({ label }, i) => i <= startIdx.current && regex.test(label!)\n          );\n        }\n        if (idx !== -1) {\n          highlightItemAtIndex(idx);\n        }\n      } else {\n        searchChars.current = \"\";\n        keyDownTimer.current = null;\n        startIdx.current = -1;\n      }\n    },\n    [applyIncrementalSearch, highlightItemAtIndex, items]\n  );\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent) => {\n      const searchInProgress = startIdx.current !== -1;\n      if (isCharacterKey(e) || (searchInProgress && e.key === Space)) {\n        if (typeToNavigate) {\n          e.preventDefault();\n          e.stopPropagation();\n          // If we type the same key repeatedly, we cycle through the matches\n          if (startIdx.current === -1 || e.key === searchChars.current) {\n            startIdx.current = highlightedIdx;\n          }\n          if (keyDownTimer.current !== null) {\n            clearTimeout(keyDownTimer.current);\n            keyDownTimer.current = null;\n          }\n          if (e.key !== searchChars.current) {\n            searchChars.current += e.key;\n          }\n          if (applyIncrementalSearch) {\n            applySearch(true);\n          }\n          // keyDownTimer.current = window.setTimeout(applySearch, 100);\n          keyDownTimer.current = window.setTimeout(() => {\n            applySearch();\n          }, 100);\n        }\n      }\n    },\n    [typeToNavigate, applyIncrementalSearch, highlightedIdx, applySearch]\n  );\n\n  return {\n    onKeyDown: disableTypeToSelect ? undefined : handleKeyDown,\n  };\n};\n"],"names":["useRef","useCallback","isCharacterKey","Space"],"mappings":"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"}