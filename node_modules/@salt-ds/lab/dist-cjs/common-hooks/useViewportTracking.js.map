{"version":3,"file":"useViewportTracking.js","sources":["../src/common-hooks/useViewportTracking.ts"],"sourcesContent":["import { MutableRefObject, RefObject, useCallback, useRef } from \"react\";\nimport { CollectionItem } from \"./collectionTypes\";\nimport { ResizeHandler, useResizeObserver } from \"../responsive\";\nimport { useIsomorphicLayoutEffect } from \"@salt-ds/core\";\n\nconst HeightOnly = [\"height\"];\nconst HeightWithScroll = [\"height\", \"scrollHeight\"];\nconst EMPTY_ARRAY: any[] = [];\n\nconst ObservedDimensions = {\n  containerOnly: [HeightWithScroll, EMPTY_ARRAY],\n  withContent: [HeightOnly, HeightOnly],\n};\nconst getObservedDimensions = (containerOnly: boolean) =>\n  containerOnly\n    ? ObservedDimensions.containerOnly\n    : ObservedDimensions.withContent;\n\nconst NULL_REF = { current: null };\n\nconst getItemTop = (\n  element: HTMLElement,\n  offsetContainer: HTMLElement | null\n) => {\n  const { transform = \"none\" } = getComputedStyle(element);\n  if (transform.startsWith(\"matrix\")) {\n    const pos = transform.lastIndexOf(\",\");\n    return parseInt(transform.slice(pos + 1));\n  } else {\n    let offsetParent = element.offsetParent as HTMLElement;\n    if (offsetParent === offsetContainer || offsetContainer === null) {\n      return element.offsetTop;\n    } else {\n      let top = element.offsetTop;\n      while (offsetParent !== null && offsetParent !== offsetContainer) {\n        top += offsetParent.offsetTop;\n        offsetParent = offsetParent.offsetParent as HTMLElement;\n      }\n      return top;\n    }\n  }\n};\n\nexport interface ViewportTrackingProps<Item> {\n  containerRef: RefObject<HTMLElement>;\n  contentRef?: RefObject<HTMLElement>;\n  highlightedIdx?: number;\n  indexPositions: CollectionItem<Item>[];\n  stickyHeaders?: boolean;\n}\n\nexport interface ViewportTrackingResult<Item> {\n  isScrolling: MutableRefObject<boolean>;\n  scrollIntoView: (item: CollectionItem<Item>) => void;\n}\n\nexport const useViewportTracking = <Item>({\n  containerRef,\n  contentRef = NULL_REF,\n  highlightedIdx = -1,\n  indexPositions,\n  stickyHeaders = false,\n}: ViewportTrackingProps<Item>): ViewportTrackingResult<Item> => {\n  const scrolling = useRef<boolean>(false);\n  const viewport = useRef({\n    height: 0,\n    contentHeight: 0,\n  });\n\n  const scrollTo = useCallback((scrollPos: number) => {\n    scrolling.current = true;\n    if (containerRef.current) {\n      containerRef.current.scrollTop = scrollPos;\n    }\n    setTimeout(() => {\n      scrolling.current = false;\n    });\n  }, []);\n\n  const scrollToStart = useCallback(() => scrollTo(0), [scrollTo]);\n\n  const scrollToEnd = useCallback(() => {\n    scrollTo(viewport.current.contentHeight - viewport.current.height);\n  }, [scrollTo]);\n\n  const scrollIntoViewIfNeeded = useCallback(\n    (item: CollectionItem<Item>) => {\n      const offsetContainer = contentRef.current || containerRef.current;\n      if (item.id) {\n        const el = document.getElementById(item.id);\n        if (el && containerRef.current) {\n          const { height: viewportHeight } = viewport.current;\n          const targetEl =\n            el.ariaExpanded && el.firstChild\n              ? (el.firstChild as HTMLElement)\n              : el;\n          const headerHeight = stickyHeaders ? 36 : 0;\n          const itemTop = getItemTop(targetEl, offsetContainer);\n          const itemHeight = targetEl.offsetHeight;\n          const { scrollTop } = containerRef.current;\n          const viewportStart = scrollTop + headerHeight;\n          const viewportEnd = viewportStart + viewportHeight - headerHeight;\n\n          if (itemTop + itemHeight > viewportEnd || itemTop < viewportStart) {\n            const newScrollTop =\n              itemTop + itemHeight > viewportEnd\n                ? scrollTop + (itemTop + itemHeight) - viewportEnd\n                : itemTop - headerHeight;\n\n            scrollTo(newScrollTop);\n          }\n        }\n      }\n    },\n    [containerRef, contentRef, scrollTo, stickyHeaders]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    const { height, contentHeight } = viewport.current;\n    const item = indexPositions[highlightedIdx];\n    if (contentHeight > height && item) {\n      const [firstItem] = indexPositions;\n      const [lastItem] = indexPositions.slice(-1);\n      if (item === firstItem) {\n        scrollToStart();\n      } else if (item === lastItem) {\n        scrollToEnd();\n      } else {\n        scrollIntoViewIfNeeded(indexPositions[highlightedIdx]);\n      }\n    }\n  }, [\n    highlightedIdx,\n    indexPositions,\n    scrollIntoViewIfNeeded,\n    scrollToEnd,\n    scrollToStart,\n  ]);\n\n  const onContainerResize: ResizeHandler = useCallback(\n    ({ height, scrollHeight }) => {\n      if (typeof height === \"number\") {\n        viewport.current.height = height;\n      }\n      if (typeof scrollHeight === \"number\") {\n        viewport.current.contentHeight = scrollHeight;\n      }\n    },\n    []\n  );\n\n  const onContentResize: ResizeHandler = useCallback(({ height }) => {\n    if (typeof height === \"number\") {\n      viewport.current.contentHeight = height;\n    }\n  }, []);\n\n  // If we only have a container, then we will observe its height and scrollHeight,\n  // contentRef will be null, so second call to observer will observe nothing.\n  // If we have both container and content, then we observe the height of each.\n  const [containerDimensions, contentDimensions] = getObservedDimensions(\n    contentRef === NULL_REF\n  );\n  useResizeObserver(containerRef, containerDimensions, onContainerResize, true);\n  useResizeObserver(contentRef, contentDimensions, onContentResize, true);\n\n  return {\n    isScrolling: scrolling,\n    scrollIntoView: scrollIntoViewIfNeeded,\n  };\n};\n"],"names":["useRef","useCallback","useIsomorphicLayoutEffect","useResizeObserver"],"mappings":"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"}