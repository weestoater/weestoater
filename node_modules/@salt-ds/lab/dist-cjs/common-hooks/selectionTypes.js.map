{"version":3,"file":"selectionTypes.js","sources":["../src/common-hooks/selectionTypes.ts"],"sourcesContent":["import { SyntheticEvent } from \"react\";\nimport { CollectionItem } from \"./collectionTypes\";\n\nexport const SINGLE = \"default\";\nexport const MULTIPLE = \"multiple\";\nexport const EXTENDED = \"extended\";\nexport const DESELECTABLE = \"deselectable\";\n\n// export type SelectionDisallowed = \"none\";\nexport type SingleSelectionStrategy = \"default\" | \"deselectable\";\nexport type MultiSelectionStrategy =\n  | \"multiple\"\n  | \"extended\"\n  | \"extended-multi-range\";\nexport type SelectionStrategy =\n  // | SelectionDisallowed\n  SingleSelectionStrategy | MultiSelectionStrategy;\n\nexport type selectedType<\n  Item,\n  Selection extends SelectionStrategy\n> = Selection extends MultiSelectionStrategy ? Item[] : Item | null;\n\nexport type SelectHandler<Item = string> = (\n  event: SyntheticEvent,\n  selectedItem: Item\n) => void;\n\nexport type SelectionChangeHandler<\n  Item = string,\n  Selection extends SelectionStrategy = \"default\"\n> = (\n  event: SyntheticEvent,\n  selected: Selection extends SingleSelectionStrategy ? Item | null : Item[]\n) => void;\n\nexport const hasSelection = <Item = unknown>(\n  selected: Item | Item[] | null\n): boolean => {\n  return Array.isArray(selected)\n    ? selected.length > 0\n    : selected !== null && selected !== undefined;\n};\n\nexport const getFirstSelectedItem = <Item = unknown>(\n  selected: Item | Item[] | null\n): Item | null => {\n  return Array.isArray(selected) ? selected[0] : selected;\n};\n\nexport interface SelectionProps<\n  Item,\n  Selection extends SelectionStrategy = \"default\"\n> {\n  defaultSelected?: Selection extends SingleSelectionStrategy\n    ? Item | null\n    : Item[];\n  onSelect?: SelectHandler<Item>;\n  onSelectionChange?: SelectionChangeHandler<Item, Selection>;\n  selected?: Selection extends SingleSelectionStrategy ? Item | null : Item[];\n  selectionStrategy?: Selection;\n}\n\nexport interface ListHandlers {\n  onClick?: (event: React.MouseEvent) => void;\n  onKeyDown?: (event: React.KeyboardEvent) => void;\n  onKeyboardNavigation?: (\n    event: React.KeyboardEvent,\n    currentIndex: number\n  ) => void;\n  onMouseMove?: (event: React.MouseEvent) => void;\n}\nexport interface SelectionHookProps<\n  Item,\n  Selection extends SelectionStrategy = \"default\"\n> extends SelectionProps<CollectionItem<Item>, Selection> {\n  disableSelection?: boolean;\n  highlightedIdx: number;\n  indexPositions: CollectionItem<Item>[];\n  label?: string;\n  selectionKeys?: string[];\n  tabToSelect?: boolean;\n}\n\nexport interface SelectionHookResult<\n  Item,\n  Selection extends SelectionStrategy = \"default\"\n> {\n  listHandlers: ListHandlers;\n  selected: Selection extends SingleSelectionStrategy\n    ? CollectionItem<Item> | null\n    : CollectionItem<Item>[];\n  setSelected: (\n    selected: Selection extends SingleSelectionStrategy\n      ? CollectionItem<Item> | null\n      : CollectionItem<Item>[]\n  ) => void;\n}\n"],"names":[],"mappings":";;;;AAoCa,MAAA,YAAA,GAAe,CAC1B,QACY,KAAA;AACZ,EAAO,OAAA,KAAA,CAAM,QAAQ,QAAQ,CAAA,GACzB,SAAS,MAAS,GAAA,CAAA,GAClB,QAAa,KAAA,IAAA,IAAQ,QAAa,KAAA,KAAA,CAAA,CAAA;AACxC,EAAA;AAEa,MAAA,oBAAA,GAAuB,CAClC,QACgB,KAAA;AAChB,EAAA,OAAO,KAAM,CAAA,OAAA,CAAQ,QAAQ,CAAA,GAAI,SAAS,CAAK,CAAA,GAAA,QAAA,CAAA;AACjD;;;;;"}