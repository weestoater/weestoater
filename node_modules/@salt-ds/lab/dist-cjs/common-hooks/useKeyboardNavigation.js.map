{"version":3,"file":"useKeyboardNavigation.js","sources":["../src/common-hooks/useKeyboardNavigation.ts"],"sourcesContent":["import { useControlled } from \"@salt-ds/core\";\nimport {\n  FocusEvent,\n  KeyboardEvent,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  ArrowDown,\n  ArrowUp,\n  End,\n  Home,\n  isCharacterKey,\n  isNavigationKey,\n  PageDown,\n  PageUp,\n} from \"./keyUtils\";\nimport { CollectionItem } from \"./collectionTypes\";\nimport { NavigationHookProps, NavigationHookResult } from \"./navigationTypes\";\nimport {\n  getFirstSelectedItem,\n  hasSelection,\n  SelectionStrategy,\n} from \"./selectionTypes\";\n\nexport const LIST_FOCUS_VISIBLE = -2;\n\nfunction nextItemIdx(count: number, key: string, idx: number) {\n  if (key === ArrowUp || key === End) {\n    if (idx > 0) {\n      return idx - 1;\n    } else {\n      return idx;\n    }\n  } else {\n    if (idx === null) {\n      return 0;\n    } else if (idx === count - 1) {\n      return idx;\n    } else {\n      return idx + 1;\n    }\n  }\n}\n\nconst getIndexOfSelectedItem = (\n  items: CollectionItem<unknown>[],\n  selected?: CollectionItem<unknown> | null | CollectionItem<unknown>[]\n) => {\n  const selectedItem = getFirstSelectedItem(selected);\n  if (selectedItem) {\n    return items.indexOf(selectedItem);\n  } else {\n    return -1;\n  }\n};\n\nconst getStartIdx = (\n  key: string,\n  idx: number,\n  selectedIdx: number,\n  length: number\n) => {\n  if (key === End) {\n    return length;\n  } else if (key === Home) {\n    return -1;\n  } else if (idx !== -1) {\n    return idx;\n  } else {\n    return selectedIdx;\n  }\n};\n\nconst getItemRect = (item: CollectionItem<unknown>) => {\n  const el = document.getElementById(item.id);\n  if (el) {\n    return el.getBoundingClientRect();\n  } else {\n    throw Error(\n      `useKeyboardNavigation.getItemRect no element found for item  #${item?.id}`\n    );\n  }\n};\n\nconst pageDown = (\n  containerEl: HTMLElement,\n  itemEl: HTMLElement,\n  indexPositions: CollectionItem<unknown>[],\n  index: number\n): number | undefined => {\n  const { top: itemTop } = itemEl.getBoundingClientRect();\n  const { scrollTop, clientHeight, scrollHeight } = containerEl;\n  const lastIndexPosition = indexPositions.length - 1;\n  const newScrollTop = Math.min(\n    scrollTop + clientHeight,\n    scrollHeight - clientHeight\n  );\n  if (newScrollTop !== scrollTop && index < lastIndexPosition) {\n    containerEl.scrollTo(0, newScrollTop);\n    // Might need to do this in a timeout, in case virtualized content has rendered\n    let nextIdx = index;\n    let nextRect;\n    do {\n      nextIdx += 1;\n      nextRect = getItemRect(indexPositions[nextIdx]);\n    } while (nextRect.top < itemTop && nextIdx < lastIndexPosition);\n    return nextIdx;\n  }\n};\n\nconst pageUp = async (\n  containerEl: HTMLElement,\n  itemEl: HTMLElement,\n  indexPositions: CollectionItem<unknown>[],\n  index: number\n): Promise<number | undefined> => {\n  const { top: itemTop } = itemEl.getBoundingClientRect();\n  const { scrollTop, clientHeight } = containerEl;\n  const newScrollTop = Math.max(scrollTop - clientHeight, 0);\n  if (newScrollTop !== scrollTop && index > 0) {\n    containerEl.scrollTo(0, newScrollTop);\n    return new Promise((resolve) => {\n      // We must defer this operation until after render. If Items are virtualized.\n      // we need to allow them to be rendered.\n      requestAnimationFrame(() => {\n        let nextIdx = index;\n        let nextRect;\n        do {\n          nextIdx -= 1;\n          nextRect = getItemRect(indexPositions[nextIdx]);\n        } while (nextRect.top > itemTop && nextIdx > 0);\n        resolve(nextIdx);\n      });\n    });\n  }\n};\n\nconst isLeaf = <Item>(item: CollectionItem<Item>): boolean =>\n  !item.header && !item.childNodes;\nconst isFocusable = <Item>(item: CollectionItem<Item>) =>\n  isLeaf(item) || item.expanded !== undefined;\n\nexport const useKeyboardNavigation = <\n  Item,\n  Selection extends SelectionStrategy\n>({\n  containerRef,\n  defaultHighlightedIndex = -1,\n  disableHighlightOnFocus,\n  highlightedIndex: highlightedIndexProp,\n  indexPositions,\n  onHighlight,\n  onKeyboardNavigation,\n  restoreLastFocus,\n  selected,\n}: NavigationHookProps<Item, Selection>): NavigationHookResult => {\n  const lastFocus = useRef(-1);\n  const [, forceRender] = useState({});\n  const [highlightedIndex, setHighlightedIdx, isControlledHighlighting] =\n    useControlled({\n      controlled: highlightedIndexProp,\n      default: defaultHighlightedIndex,\n      name: \"UseKeyboardNavigation\",\n    });\n\n  const setHighlightedIndex = useCallback(\n    (idx: number, fromKeyboard = false) => {\n      onHighlight?.(idx);\n      setHighlightedIdx(idx);\n      if (fromKeyboard) {\n        lastFocus.current = idx;\n      }\n    },\n    [onHighlight, setHighlightedIdx]\n  );\n\n  const nextPageItemIdx = useCallback(\n    async (e: KeyboardEvent, index: number): Promise<number> => {\n      const { id } = indexPositions[index];\n      let result: number | undefined;\n      if (id) {\n        const itemEl = document.getElementById(id);\n        const { current: containerEl } = containerRef;\n        if (itemEl && containerEl) {\n          result =\n            e.key === PageDown\n              ? pageDown(containerEl, itemEl, indexPositions, index)\n              : await pageUp(containerEl, itemEl, indexPositions, index);\n        }\n      }\n      return result ?? index;\n    },\n    [containerRef, indexPositions]\n  );\n\n  const nextFocusableItemIdx = useCallback(\n    (\n      key = ArrowDown,\n      idx: number = key === ArrowDown ? -1 : indexPositions.length\n    ) => {\n      if (indexPositions.length === 0) {\n        return -1;\n      } else {\n        const indexOfSelectedItem = getIndexOfSelectedItem(\n          indexPositions,\n          selected\n        );\n        // The start index is generally the highlightedIdx (passed in as idx).\n        // We don't need it for Home and End navigation.\n        // Special case where we have selection, but no highlighting - begin\n        // navigation from selected item.\n        const startIdx = getStartIdx(\n          key,\n          idx,\n          indexOfSelectedItem,\n          indexPositions.length\n        );\n\n        let nextIdx = nextItemIdx(indexPositions.length, key, startIdx);\n        // Guard against returning zero, when first item is a header or group\n        if (\n          nextIdx === 0 &&\n          key === ArrowUp &&\n          !isFocusable(indexPositions[0])\n        ) {\n          return idx;\n        }\n        while (\n          (((key === ArrowDown || key === Home) &&\n            nextIdx < indexPositions.length) ||\n            ((key === ArrowUp || key === End) && nextIdx > 0)) &&\n          !isFocusable(indexPositions[nextIdx])\n        ) {\n          nextIdx = nextItemIdx(indexPositions.length, key, nextIdx);\n        }\n        return nextIdx;\n      }\n    },\n    [indexPositions, selected]\n  );\n\n  // does this belong here or should it be a method passed in?\n  const keyboardNavigation = useRef(false);\n  const ignoreFocus = useRef<boolean>(false);\n  const setIgnoreFocus = (value: boolean) => (ignoreFocus.current = value);\n\n  const handleFocus = useCallback(\n    (e: FocusEvent) => {\n      // Ignore focus if mouse has been used\n      if (ignoreFocus.current) {\n        ignoreFocus.current = false;\n      } else {\n        // If mouse wan't used, then keyboard must have been\n        keyboardNavigation.current = true;\n        if (indexPositions.length === 0) {\n          setHighlightedIndex(LIST_FOCUS_VISIBLE);\n        } else if (highlightedIndex !== -1) {\n          // We need to force a render here. We're not changing the highlightedIdx, but we want to\n          // make sure we render with the correct focusVisible value. We don't store focusVisible\n          // in state, as there are places where we would double render, as highlightedIdx also changes.\n          forceRender({});\n        } else if (restoreLastFocus) {\n          if (lastFocus.current !== -1) {\n            setHighlightedIndex(lastFocus.current);\n          } else {\n            const selectedItemIdx = getIndexOfSelectedItem(\n              indexPositions,\n              selected\n            );\n            if (selectedItemIdx !== -1) {\n              setHighlightedIndex(selectedItemIdx);\n            } else {\n              setHighlightedIndex(0);\n            }\n          }\n        } else if (hasSelection(selected)) {\n          const selectedItemIdx = getIndexOfSelectedItem(\n            indexPositions,\n            selected\n          );\n          setHighlightedIndex(selectedItemIdx);\n        } else if (disableHighlightOnFocus !== true) {\n          setHighlightedIndex(nextFocusableItemIdx());\n        }\n      }\n    },\n    [\n      disableHighlightOnFocus,\n      highlightedIndex,\n      indexPositions,\n      nextFocusableItemIdx,\n      restoreLastFocus,\n      selected,\n      setHighlightedIndex,\n    ]\n  );\n\n  const navigateChildItems = useCallback(\n    async (e: KeyboardEvent) => {\n      const nextIdx =\n        e.key === PageDown || e.key === PageUp\n          ? await nextPageItemIdx(e, highlightedIndex)\n          : nextFocusableItemIdx(e.key, highlightedIndex);\n\n      if (nextIdx !== highlightedIndex) {\n        setHighlightedIndex(nextIdx, true);\n      }\n      // Users may need to know that a Keyboard navigation event has been handled\n      // even if no actual navigation was effected. e.g. fine-grained control\n      // over aria-activedescendant requires this.\n      onKeyboardNavigation?.(e, nextIdx);\n    },\n    [\n      highlightedIndex,\n      nextFocusableItemIdx,\n      nextPageItemIdx,\n      onKeyboardNavigation,\n      setHighlightedIndex,\n    ]\n  );\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (indexPositions.length > 0 && isNavigationKey(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n        keyboardNavigation.current = true;\n        void navigateChildItems(e);\n      } else if (isCharacterKey(e)) {\n        keyboardNavigation.current = true;\n      }\n    },\n    [indexPositions, navigateChildItems]\n  );\n\n  const listProps = useMemo(() => {\n    return {\n      onBlur: (e: FocusEvent) => {\n        //TODO no direct ref to List\n        const sourceTarget = (e.target as HTMLElement).closest(\".saltList\");\n        const destTarget = e.relatedTarget as HTMLElement;\n        if (sourceTarget && !sourceTarget?.contains(destTarget)) {\n          keyboardNavigation.current = false;\n          setHighlightedIdx(-1);\n          if (!restoreLastFocus) {\n            lastFocus.current = -1;\n          }\n        }\n      },\n      onFocus: handleFocus,\n      onKeyDown: handleKeyDown,\n      onMouseDownCapture: () => {\n        keyboardNavigation.current = false;\n        setIgnoreFocus(true);\n      },\n\n      // onMouseEnter would seem less expensive but it misses some cases\n      onMouseMove: () => {\n        if (keyboardNavigation.current) {\n          keyboardNavigation.current = false;\n        }\n      },\n      onMouseLeave: () => {\n        keyboardNavigation.current = false;\n        setIgnoreFocus(false);\n        setHighlightedIndex(-1);\n      },\n    };\n  }, [\n    handleFocus,\n    handleKeyDown,\n    restoreLastFocus,\n    setHighlightedIdx,\n    setHighlightedIndex,\n  ]);\n\n  return {\n    focusVisible: keyboardNavigation.current ? highlightedIndex : -1,\n    controlledHighlighting: isControlledHighlighting,\n    highlightedIndex,\n    setHighlightedIndex,\n    keyboardNavigation,\n    listProps,\n    setIgnoreFocus,\n  };\n};\n"],"names":["ArrowUp","End","getFirstSelectedItem","Home","useRef","useState","useControlled","useCallback","PageDown","ArrowDown","hasSelection","PageUp","isNavigationKey","isCharacterKey","useMemo"],"mappings":"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"}