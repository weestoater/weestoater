{"version":3,"file":"useSliderKeyDown.js","sources":["../src/slider/internal/useSliderKeyDown.ts"],"sourcesContent":["import { SliderChangeHandler, SliderValue } from \"../types\";\nimport {\n  clampValue,\n  getHandleIndex,\n  roundValue,\n  UpdateValueItem,\n} from \"./utils\";\n\nexport function useSliderKeyDown(\n  value: SliderValue,\n  min: number,\n  max: number,\n  pageStep: number,\n  step: number,\n  updateValueItem: UpdateValueItem,\n  setValue: SliderChangeHandler,\n  onChange?: SliderChangeHandler\n) {\n  return (event: React.KeyboardEvent) => {\n    const handleElement = event.target as HTMLDivElement;\n    const handleIndex = getHandleIndex(handleElement);\n    let valueItem: number = Array.isArray(value) ? value[handleIndex] : value;\n    switch (event.key) {\n      case \"Home\":\n        valueItem = min;\n        break;\n      case \"End\":\n        valueItem = max;\n        break;\n      case \"PageUp\":\n        valueItem += pageStep;\n        break;\n      case \"PageDown\":\n        valueItem -= pageStep;\n        break;\n      case \"ArrowUp\":\n      case \"ArrowRight\":\n        valueItem += step;\n        break;\n      case \"ArrowDown\":\n      case \"ArrowLeft\":\n        valueItem -= step;\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    valueItem = roundValue(valueItem, step);\n    valueItem = clampValue(valueItem, min, max);\n    const newValue = updateValueItem(value, handleIndex, valueItem);\n    if (newValue !== value) {\n      setValue(newValue);\n      if (onChange) {\n        onChange(newValue);\n      }\n    }\n  };\n}\n"],"names":["getHandleIndex","roundValue","clampValue"],"mappings":";;;;;;AAQgB,SAAA,gBAAA,CACd,OACA,GACA,EAAA,GAAA,EACA,UACA,IACA,EAAA,eAAA,EACA,UACA,QACA,EAAA;AACA,EAAA,OAAO,CAAC,KAA+B,KAAA;AACrC,IAAA,MAAM,gBAAgB,KAAM,CAAA,MAAA,CAAA;AAC5B,IAAM,MAAA,WAAA,GAAcA,qBAAe,aAAa,CAAA,CAAA;AAChD,IAAA,IAAI,YAAoB,KAAM,CAAA,OAAA,CAAQ,KAAK,CAAA,GAAI,MAAM,WAAe,CAAA,GAAA,KAAA,CAAA;AACpE,IAAA,QAAQ,KAAM,CAAA,GAAA;AAAA,MACP,KAAA,MAAA;AACH,QAAY,SAAA,GAAA,GAAA,CAAA;AACZ,QAAA,MAAA;AAAA,MACG,KAAA,KAAA;AACH,QAAY,SAAA,GAAA,GAAA,CAAA;AACZ,QAAA,MAAA;AAAA,MACG,KAAA,QAAA;AACH,QAAa,SAAA,IAAA,QAAA,CAAA;AACb,QAAA,MAAA;AAAA,MACG,KAAA,UAAA;AACH,QAAa,SAAA,IAAA,QAAA,CAAA;AACb,QAAA,MAAA;AAAA,MACG,KAAA,SAAA,CAAA;AAAA,MACA,KAAA,YAAA;AACH,QAAa,SAAA,IAAA,IAAA,CAAA;AACb,QAAA,MAAA;AAAA,MACG,KAAA,WAAA,CAAA;AAAA,MACA,KAAA,WAAA;AACH,QAAa,SAAA,IAAA,IAAA,CAAA;AACb,QAAA,MAAA;AAAA,MAAA;AAEA,QAAA,OAAA;AAAA,KAAA;AAEJ,IAAA,KAAA,CAAM,cAAe,EAAA,CAAA;AACrB,IAAY,SAAA,GAAAC,gBAAA,CAAW,WAAW,IAAI,CAAA,CAAA;AACtC,IAAY,SAAA,GAAAC,gBAAA,CAAW,SAAW,EAAA,GAAA,EAAK,GAAG,CAAA,CAAA;AAC1C,IAAA,MAAM,QAAW,GAAA,eAAA,CAAgB,KAAO,EAAA,WAAA,EAAa,SAAS,CAAA,CAAA;AAC9D,IAAA,IAAI,aAAa,KAAO,EAAA;AACtB,MAAA,QAAA,CAAS,QAAQ,CAAA,CAAA;AACjB,MAAA,IAAI,QAAU,EAAA;AACZ,QAAA,QAAA,CAAS,QAAQ,CAAA,CAAA;AAAA,OACnB;AAAA,KACF;AAAA,GACF,CAAA;AACF;;;;"}