'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var utils = require('./utils.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var Slider = require('../Slider.css.js');

const withBaseName = core.makePrefixer("saltSliderHandle");
function SliderHandle(props) {
  const { min, max, value, disabled, valueLength, index, style } = props;
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-slider",
    css: Slider,
    window: targetWindow
  });
  return /* @__PURE__ */ jsxRuntime.jsx(core.Tooltip, {
    content: value,
    placement: "top",
    children: /* @__PURE__ */ jsxRuntime.jsx("div", {
      className: clsx.clsx(withBaseName(), {
        [withBaseName("min")]: value === min,
        [withBaseName("max")]: value === max
      }),
      style,
      role: "slider",
      "aria-valuemin": min,
      "aria-valuemax": max,
      "aria-valuenow": value,
      "aria-disabled": disabled,
      "aria-label": utils.getSliderAriaLabel(valueLength, index),
      tabIndex: 0,
      "data-handle-index": index
    })
  });
}

exports.SliderHandle = SliderHandle;
//# sourceMappingURL=SliderHandle.js.map
