'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var styles$1 = require('./styles.js');
var utils = require('./utils.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var Slider = require('../Slider.css.js');

const withBaseName = core.makePrefixer("saltSliderRailMarks");
function SliderRailMarks(props) {
  const { min, max, marks } = props;
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-slider",
    css: Slider,
    window: targetWindow
  });
  const style = React.useMemo(
    () => styles$1.createSliderRailMarksStyle(min, max, marks),
    [min, max, marks]
  );
  const marksLength = marks.length;
  const markStyles = React.useMemo(
    () => styles$1.createHandleStyles(marksLength),
    [marksLength]
  );
  return /* @__PURE__ */ jsxRuntime.jsx("div", {
    className: withBaseName(),
    style,
    children: marks.map((mark, i) => {
      return /* @__PURE__ */ jsxRuntime.jsx("div", {
        className: clsx.clsx(withBaseName("mark"), {
          [withBaseName("max")]: utils.isMarkAtMax(max, mark)
        }),
        style: markStyles[i]
      }, `Mark${i}`);
    })
  });
}

exports.SliderRailMarks = SliderRailMarks;
//# sourceMappingURL=SliderRailMarks.js.map
