{"version":3,"file":"useManageFocusOnTarget.js","sources":["../src/skip-link/internal/useManageFocusOnTarget.ts"],"sourcesContent":["import { RefObject, useEffect, useMemo, useRef, useState } from \"react\";\n\nconst FOCUS_TIMEOUT = 50;\n\nexport const useManageFocusOnTarget = ({\n  targetRef,\n  targetClass,\n}: {\n  targetRef: RefObject<HTMLElement> | undefined;\n  targetClass: string;\n}):\n  | { onBlur: () => NodeJS.Timeout; onClick: () => void }\n  | Record<string, undefined> => {\n  const [target, setTarget] = useState<HTMLElement>();\n\n  const hasTabIndex = useRef<boolean | string>();\n  const shouldRemoveTabIndex = useRef<boolean>();\n\n  useEffect(() => {\n    if (targetRef?.current) {\n      setTarget(targetRef.current);\n    }\n  }, [targetRef]);\n\n  return useMemo(() => {\n    if (!target) {\n      return {};\n    }\n\n    const addTabIndex = () => {\n      const tabIndex = target.getAttribute(\"tabIndex\");\n      hasTabIndex.current = tabIndex || tabIndex === \"0\";\n\n      if (!hasTabIndex.current) {\n        shouldRemoveTabIndex.current = true;\n        target.setAttribute(\"tabIndex\", \"-1\");\n      }\n    };\n\n    const removeTabIndex = () => {\n      if (!hasTabIndex.current && shouldRemoveTabIndex.current) {\n        target.removeAttribute(\"tabIndex\");\n      }\n    };\n\n    const handleFocusOnTarget = () => {\n      shouldRemoveTabIndex.current = false;\n      target.classList.add(targetClass);\n    };\n\n    const handleBlurFromTarget = () => {\n      shouldRemoveTabIndex.current = true;\n      removeTabIndex();\n      target.classList.remove(targetClass);\n    };\n\n    return {\n      onBlur: () => setTimeout(removeTabIndex, FOCUS_TIMEOUT),\n      onClick: () => {\n        addTabIndex();\n        setTimeout(() => {\n          target.focus();\n        }, FOCUS_TIMEOUT);\n\n        target.addEventListener(\"focus\", handleFocusOnTarget, { once: true });\n        target.addEventListener(\"blur\", handleBlurFromTarget, { once: true });\n      },\n    };\n  }, [target, targetClass]);\n};\n"],"names":["useState","useRef","useEffect","useMemo"],"mappings":";;;;;;AAEA,MAAM,aAAgB,GAAA,EAAA,CAAA;AAEf,MAAM,yBAAyB,CAAC;AAAA,EACrC,SAAA;AAAA,EACA,WAAA;AACF,CAKiC,KAAA;AAC/B,EAAA,MAAM,CAAC,MAAA,EAAQ,SAAS,CAAA,GAAIA,cAAsB,EAAA,CAAA;AAElD,EAAA,MAAM,cAAcC,YAAyB,EAAA,CAAA;AAC7C,EAAA,MAAM,uBAAuBA,YAAgB,EAAA,CAAA;AAE7C,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,uCAAW,OAAS,EAAA;AACtB,MAAA,SAAA,CAAU,UAAU,OAAO,CAAA,CAAA;AAAA,KAC7B;AAAA,GACF,EAAG,CAAC,SAAS,CAAC,CAAA,CAAA;AAEd,EAAA,OAAOC,cAAQ,MAAM;AACnB,IAAA,IAAI,CAAC,MAAQ,EAAA;AACX,MAAA,OAAO,EAAC,CAAA;AAAA,KACV;AAEA,IAAA,MAAM,cAAc,MAAM;AACxB,MAAM,MAAA,QAAA,GAAW,MAAO,CAAA,YAAA,CAAa,UAAU,CAAA,CAAA;AAC/C,MAAY,WAAA,CAAA,OAAA,GAAU,YAAY,QAAa,KAAA,GAAA,CAAA;AAE/C,MAAI,IAAA,CAAC,YAAY,OAAS,EAAA;AACxB,QAAA,oBAAA,CAAqB,OAAU,GAAA,IAAA,CAAA;AAC/B,QAAO,MAAA,CAAA,YAAA,CAAa,YAAY,IAAI,CAAA,CAAA;AAAA,OACtC;AAAA,KACF,CAAA;AAEA,IAAA,MAAM,iBAAiB,MAAM;AAC3B,MAAA,IAAI,CAAC,WAAA,CAAY,OAAW,IAAA,oBAAA,CAAqB,OAAS,EAAA;AACxD,QAAA,MAAA,CAAO,gBAAgB,UAAU,CAAA,CAAA;AAAA,OACnC;AAAA,KACF,CAAA;AAEA,IAAA,MAAM,sBAAsB,MAAM;AAChC,MAAA,oBAAA,CAAqB,OAAU,GAAA,KAAA,CAAA;AAC/B,MAAO,MAAA,CAAA,SAAA,CAAU,IAAI,WAAW,CAAA,CAAA;AAAA,KAClC,CAAA;AAEA,IAAA,MAAM,uBAAuB,MAAM;AACjC,MAAA,oBAAA,CAAqB,OAAU,GAAA,IAAA,CAAA;AAC/B,MAAe,cAAA,EAAA,CAAA;AACf,MAAO,MAAA,CAAA,SAAA,CAAU,OAAO,WAAW,CAAA,CAAA;AAAA,KACrC,CAAA;AAEA,IAAO,OAAA;AAAA,MACL,MAAQ,EAAA,MAAM,UAAW,CAAA,cAAA,EAAgB,aAAa,CAAA;AAAA,MACtD,SAAS,MAAM;AACb,QAAY,WAAA,EAAA,CAAA;AACZ,QAAA,UAAA,CAAW,MAAM;AACf,UAAA,MAAA,CAAO,KAAM,EAAA,CAAA;AAAA,WACZ,aAAa,CAAA,CAAA;AAEhB,QAAA,MAAA,CAAO,iBAAiB,OAAS,EAAA,mBAAA,EAAqB,EAAE,IAAA,EAAM,MAAM,CAAA,CAAA;AACpE,QAAA,MAAA,CAAO,iBAAiB,MAAQ,EAAA,oBAAA,EAAsB,EAAE,IAAA,EAAM,MAAM,CAAA,CAAA;AAAA,OACtE;AAAA,KACF,CAAA;AAAA,GACC,EAAA,CAAC,MAAQ,EAAA,WAAW,CAAC,CAAA,CAAA;AAC1B;;;;"}