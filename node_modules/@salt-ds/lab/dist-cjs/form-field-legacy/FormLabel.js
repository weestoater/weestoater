'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var core = require('@salt-ds/core');
var NecessityIndicator = require('./NecessityIndicator.js');
var StatusIndicator = require('./StatusIndicator.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var FormLabel$1 = require('./FormLabel.css.js');

const withBaseName = core.makePrefixer("saltFormLabel");
const FormLabel = ({
  label,
  NecessityIndicator: NecessityIndicator$1 = NecessityIndicator.NecessityIndicator,
  required,
  displayedNecessity,
  hasStatusIndicator = false,
  StatusIndicatorProps: StatusIndicatorProps2,
  validationStatus,
  necessityText,
  className,
  disabled,
  readOnly,
  tooltipText,
  ...restProps
}) => {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-form-label",
    css: FormLabel$1,
    window: targetWindow
  });
  return /* @__PURE__ */ jsxRuntime.jsxs("label", {
    className: clsx.clsx(withBaseName(), className, {
      [withBaseName("disabled")]: disabled
    }),
    ...restProps,
    children: [
      label,
      /* @__PURE__ */ jsxRuntime.jsx(NecessityIndicator$1, {
        required,
        displayedNecessity,
        necessityText,
        className: withBaseName("necessityIndicator")
      }),
      hasStatusIndicator && /* @__PURE__ */ jsxRuntime.jsx(StatusIndicator.StatusIndicator, {
        className: withBaseName("statusIndicator"),
        status: validationStatus,
        tooltipText,
        hasTooltip: true,
        ...StatusIndicatorProps2
      })
    ]
  });
};

exports.FormLabel = FormLabel;
//# sourceMappingURL=FormLabel.js.map
