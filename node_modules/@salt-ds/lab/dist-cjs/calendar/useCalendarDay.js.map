{"version":3,"file":"useCalendarDay.js","sources":["../src/calendar/useCalendarDay.ts"],"sourcesContent":["import {\n  DateValue,\n  getLocalTimeZone,\n  isSameDay,\n  isSameMonth,\n  isToday,\n} from \"@internationalized/date\";\nimport {\n  ComponentPropsWithoutRef,\n  FocusEventHandler,\n  KeyboardEventHandler,\n  MouseEventHandler,\n  RefObject,\n  useEffect,\n} from \"react\";\nimport { useCalendarContext } from \"./internal/CalendarContext\";\nimport { useFocusManagement } from \"./internal/useFocusManagement\";\nimport { useSelectionDay } from \"./useSelection\";\n\nexport interface DayStatus {\n  outOfRange?: boolean;\n  selected?: boolean;\n  today?: boolean;\n  unselectable?: string | false;\n  highlighted?: string | false;\n  focused?: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n}\n\nexport interface useCalendarDayProps {\n  date: DateValue;\n  month: DateValue;\n}\n\nexport function useCalendarDay(\n  { date, month }: useCalendarDayProps,\n  ref: RefObject<HTMLElement>\n) {\n  const {\n    state: { focusedDate, hideOutOfRangeDates, calendarFocused },\n    helpers: {\n      isDayUnselectable,\n      isDayHighlighted,\n      isDayDisabled,\n      isOutsideAllowedMonths,\n    },\n  } = useCalendarContext();\n  const selectionManager = useSelectionDay({ date });\n  const focusManager = useFocusManagement({ date });\n\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (event) => {\n    selectionManager?.handleClick(event);\n    focusManager.handleClick(event);\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLButtonElement> = (event) => {\n    focusManager.handleKeyDown(event);\n    selectionManager?.handleKeyDown(event);\n  };\n\n  const handleFocus: FocusEventHandler<HTMLButtonElement> = (event) => {\n    focusManager.handleFocus(event);\n  };\n\n  const handleMouseOver: MouseEventHandler<HTMLButtonElement> = (event) => {\n    selectionManager.handleMouseOver?.(event);\n  };\n\n  const eventHandlers = {\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    onMouseOver: handleMouseOver,\n  };\n\n  const outOfRange = !isSameMonth(date, month);\n  const focused =\n    isSameDay(date, focusedDate) && calendarFocused && !outOfRange;\n  const tabIndex = isSameDay(date, focusedDate) && !outOfRange ? 0 : -1;\n  const today = isToday(date, getLocalTimeZone());\n\n  const unselectableReason = isDayUnselectable(date);\n  const highlightedReason = isDayHighlighted(date);\n\n  const disabled =\n    isDayDisabled(date) || (outOfRange && isOutsideAllowedMonths(date));\n  const unselectable = Boolean(unselectableReason);\n  const highlighted = Boolean(highlightedReason);\n  const hidden = hideOutOfRangeDates && outOfRange;\n\n  useEffect(() => {\n    if (focused) {\n      ref.current?.focus({ preventScroll: true });\n    }\n  }, [ref, focused]);\n\n  return {\n    status: {\n      outOfRange,\n      today,\n      unselectable,\n      focused,\n      hidden,\n      disabled,\n      highlighted,\n      ...selectionManager.status,\n    } as DayStatus,\n    dayProps: {\n      tabIndex,\n      \"aria-current\": today ? \"date\" : undefined,\n      \"aria-hidden\": hidden ? \"true\" : undefined,\n      ...eventHandlers,\n      ...selectionManager.dayProps,\n    } as ComponentPropsWithoutRef<\"button\">,\n    unselectableReason,\n    highlightedReason,\n  };\n}\n"],"names":["date","useCalendarContext","useSelectionDay","useFocusManagement","isSameMonth","isSameDay","isToday","getLocalTimeZone","useEffect"],"mappings":"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"}