{"version":3,"file":"useFocusManagement.js","sources":["../src/calendar/internal/useFocusManagement.ts"],"sourcesContent":["import {\n  FocusEventHandler,\n  KeyboardEventHandler,\n  MouseEventHandler,\n} from \"react\";\nimport { useCalendarContext } from \"./CalendarContext\";\nimport { DateValue, endOfWeek, startOfWeek } from \"@internationalized/date\";\nimport { getCurrentLocale } from \"./utils\";\n\nexport function useFocusManagement({ date }: { date: DateValue }) {\n  const {\n    helpers: { setFocusedDate },\n  } = useCalendarContext();\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (event) => {\n    setFocusedDate(event, date);\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLButtonElement> = (event) => {\n    let newDate = date;\n    switch (event.key) {\n      case \"ArrowUp\":\n        newDate = date.subtract({ weeks: 1 });\n        break;\n      case \"ArrowDown\":\n        newDate = date.add({ weeks: 1 });\n        break;\n      case \"ArrowLeft\":\n        newDate = date.subtract({ days: 1 });\n        break;\n      case \"ArrowRight\":\n        newDate = date.add({ days: 1 });\n        break;\n      case \"Home\":\n        newDate = startOfWeek(date, getCurrentLocale());\n        break;\n      case \"End\":\n        // @ts-ignore TODO bug in @internationalized/date\n        newDate = endOfWeek(date, getCurrentLocale());\n        break;\n      case \"PageUp\":\n        if (event.shiftKey) {\n          newDate = date.subtract({ years: 1 });\n        } else {\n          newDate = date.subtract({ months: 1 });\n        }\n        break;\n      case \"PageDown\":\n        if (event.shiftKey) {\n          newDate = date.add({ years: 1 });\n        } else {\n          newDate = date.add({ months: 1 });\n        }\n        break;\n      default:\n    }\n\n    setFocusedDate(event, newDate);\n  };\n\n  const handleFocus: FocusEventHandler<HTMLButtonElement> = (event) => {\n    setFocusedDate(event, date);\n  };\n\n  return {\n    handleClick,\n    handleKeyDown,\n    handleFocus,\n  };\n}\n"],"names":["date","useCalendarContext","startOfWeek","getCurrentLocale","endOfWeek"],"mappings":";;;;;;;;AASgB,SAAA,kBAAA,CAAmB,QAAEA,MAAA,EAA6B,EAAA;AAChE,EAAM,MAAA;AAAA,IACJ,OAAA,EAAS,EAAE,cAAe,EAAA;AAAA,MACxBC,kCAAmB,EAAA,CAAA;AACvB,EAAM,MAAA,WAAA,GAAoD,CAAC,KAAU,KAAA;AACnE,IAAA,cAAA,CAAe,OAAOD,MAAI,CAAA,CAAA;AAAA,GAC5B,CAAA;AAEA,EAAM,MAAA,aAAA,GAAyD,CAAC,KAAU,KAAA;AACxE,IAAA,IAAI,OAAU,GAAAA,MAAA,CAAA;AACd,IAAA,QAAQ,KAAM,CAAA,GAAA;AAAA,MACP,KAAA,SAAA;AACH,QAAA,OAAA,GAAUA,MAAK,CAAA,QAAA,CAAS,EAAE,KAAA,EAAO,GAAG,CAAA,CAAA;AACpC,QAAA,MAAA;AAAA,MACG,KAAA,WAAA;AACH,QAAA,OAAA,GAAUA,MAAK,CAAA,GAAA,CAAI,EAAE,KAAA,EAAO,GAAG,CAAA,CAAA;AAC/B,QAAA,MAAA;AAAA,MACG,KAAA,WAAA;AACH,QAAA,OAAA,GAAUA,MAAK,CAAA,QAAA,CAAS,EAAE,IAAA,EAAM,GAAG,CAAA,CAAA;AACnC,QAAA,MAAA;AAAA,MACG,KAAA,YAAA;AACH,QAAA,OAAA,GAAUA,MAAK,CAAA,GAAA,CAAI,EAAE,IAAA,EAAM,GAAG,CAAA,CAAA;AAC9B,QAAA,MAAA;AAAA,MACG,KAAA,MAAA;AACH,QAAU,OAAA,GAAAE,gBAAA,CAAYF,MAAM,EAAAG,sBAAA,EAAkB,CAAA,CAAA;AAC9C,QAAA,MAAA;AAAA,MACG,KAAA,KAAA;AAEH,QAAU,OAAA,GAAAC,cAAA,CAAUJ,MAAM,EAAAG,sBAAA,EAAkB,CAAA,CAAA;AAC5C,QAAA,MAAA;AAAA,MACG,KAAA,QAAA;AACH,QAAA,IAAI,MAAM,QAAU,EAAA;AAClB,UAAA,OAAA,GAAUH,MAAK,CAAA,QAAA,CAAS,EAAE,KAAA,EAAO,GAAG,CAAA,CAAA;AAAA,SAC/B,MAAA;AACL,UAAA,OAAA,GAAUA,MAAK,CAAA,QAAA,CAAS,EAAE,MAAA,EAAQ,GAAG,CAAA,CAAA;AAAA,SACvC;AACA,QAAA,MAAA;AAAA,MACG,KAAA,UAAA;AACH,QAAA,IAAI,MAAM,QAAU,EAAA;AAClB,UAAA,OAAA,GAAUA,MAAK,CAAA,GAAA,CAAI,EAAE,KAAA,EAAO,GAAG,CAAA,CAAA;AAAA,SAC1B,MAAA;AACL,UAAA,OAAA,GAAUA,MAAK,CAAA,GAAA,CAAI,EAAE,MAAA,EAAQ,GAAG,CAAA,CAAA;AAAA,SAClC;AACA,QAAA,MAAA;AAAA,KAAA;AAIJ,IAAA,cAAA,CAAe,OAAO,OAAO,CAAA,CAAA;AAAA,GAC/B,CAAA;AAEA,EAAM,MAAA,WAAA,GAAoD,CAAC,KAAU,KAAA;AACnE,IAAA,cAAA,CAAe,OAAOA,MAAI,CAAA,CAAA;AAAA,GAC5B,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,WAAA;AAAA,IACA,aAAA;AAAA,IACA,WAAA;AAAA,GACF,CAAA;AACF;;;;"}