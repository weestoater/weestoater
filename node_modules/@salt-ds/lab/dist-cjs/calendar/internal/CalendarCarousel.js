'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var date = require('@internationalized/date');
var CalendarMonth = require('./CalendarMonth.js');
var core = require('@salt-ds/core');
var CalendarContext = require('./CalendarContext.js');
var CalendarCarousel$1 = require('./CalendarCarousel.css.js');
var utils = require('./utils.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');

function getMonths(month) {
  return [month.subtract({ months: 1 }), month, month.add({ months: 1 })];
}
const withBaseName = core.makePrefixer("saltCalendarCarousel");
const CalendarCarousel = React.forwardRef(function CalendarCarousel2(props, ref) {
  const { ...rest } = props;
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-calendar-carousel",
    css: CalendarCarousel$1,
    window: targetWindow
  });
  const {
    state: { visibleMonth }
  } = CalendarContext.useCalendarContext();
  const containerRef = React.useRef(null);
  const diffIndex = (a, b) => utils.monthDiff(a, b);
  const { current: baseIndex } = React.useRef(visibleMonth);
  core.useIsomorphicLayoutEffect(() => {
    if (containerRef.current) {
      containerRef.current.style.transform = `translate3d(${diffIndex(baseIndex, visibleMonth) * -101}%, 0, 0)`;
    }
  });
  const [months, setMonths] = React.useState(() => getMonths(visibleMonth));
  React.useEffect(() => {
    setMonths((oldMonths) => {
      const newMonths = getMonths(visibleMonth).filter((month) => {
        return !oldMonths.find((oldMonth) => date.isSameMonth(oldMonth, month));
      });
      return oldMonths.concat(newMonths);
    });
    setMonths(getMonths(visibleMonth));
    return void 0;
  }, [utils.formatDate(visibleMonth)]);
  return /* @__PURE__ */ jsxRuntime.jsx("div", {
    className: withBaseName(),
    style: {
      overflowX: "hidden",
      position: "relative"
    },
    ref,
    children: /* @__PURE__ */ jsxRuntime.jsx("div", {
      className: withBaseName("track"),
      ref: containerRef,
      children: months.map((date, index) => /* @__PURE__ */ jsxRuntime.jsx("div", {
        className: withBaseName("slide"),
        style: {
          transform: `translateX(${diffIndex(date, baseIndex) * -101}%)`
        },
        "aria-hidden": index !== 1 ? "true" : void 0,
        children: /* @__PURE__ */ jsxRuntime.jsx(CalendarMonth.CalendarMonth, {
          isVisible: index === 1,
          ...rest,
          date
        })
      }, utils.formatDate(date)))
    })
  });
});

exports.CalendarCarousel = CalendarCarousel;
//# sourceMappingURL=CalendarCarousel.js.map
