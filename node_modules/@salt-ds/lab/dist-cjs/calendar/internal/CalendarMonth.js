'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var core = require('@salt-ds/core');
var CalendarDay = require('./CalendarDay.js');
var utils = require('./utils.js');
var CalendarMonth$1 = require('./CalendarMonth.css.js');
var CalendarContext = require('./CalendarContext.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');

const withBaseName = core.makePrefixer("saltCalendarMonth");
const CalendarMonth = React.forwardRef(
  function CalendarMonth2(props, ref) {
    const {
      className,
      date,
      renderDayContents,
      onMouseLeave,
      TooltipProps,
      ...rest
    } = props;
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-calendar-month",
      css: CalendarMonth$1,
      window: targetWindow
    });
    const days = utils.generateVisibleDays(date);
    const {
      helpers: { setHoveredDate }
    } = CalendarContext.useCalendarContext();
    const handleMouseLeave = (event) => {
      setHoveredDate(event, null);
      onMouseLeave == null ? void 0 : onMouseLeave(event);
    };
    return /* @__PURE__ */ jsxRuntime.jsx("div", {
      className: clsx.clsx(withBaseName(), className),
      ref,
      onMouseLeave: handleMouseLeave,
      ...rest,
      children: /* @__PURE__ */ jsxRuntime.jsx("div", {
        "data-testid": "CalendarDateGrid",
        className: withBaseName("dateGrid"),
        children: days.map((day) => {
          return /* @__PURE__ */ jsxRuntime.jsx(CalendarDay.CalendarDay, {
            day: day.date,
            renderDayContents,
            month: date,
            TooltipProps
          }, utils.formatDate(day.date));
        })
      })
    });
  }
);

exports.CalendarMonth = CalendarMonth;
//# sourceMappingURL=CalendarMonth.js.map
