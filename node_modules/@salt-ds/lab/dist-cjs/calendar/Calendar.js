'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var core = require('@salt-ds/core');
var CalendarNavigation = require('./internal/CalendarNavigation.js');
var CalendarWeekHeader = require('./internal/CalendarWeekHeader.js');
var CalendarCarousel = require('./internal/CalendarCarousel.js');
var CalendarContext = require('./internal/CalendarContext.js');
var useCalendar = require('./useCalendar.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var Calendar$1 = require('./Calendar.css.js');

const withBaseName = core.makePrefixer("saltCalendar");
const Calendar = React.forwardRef(
  function Calendar2(props, ref) {
    const {
      className,
      renderDayContents,
      hideYearDropdown,
      TooltipProps,
      ...rest
    } = props;
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-calendar",
      css: Calendar$1,
      window: targetWindow
    });
    const { state, helpers } = useCalendar.useCalendar({ hideYearDropdown, ...rest });
    const { setCalendarFocused } = helpers;
    const handleFocus = React.useCallback(() => {
      setCalendarFocused(true);
    }, [setCalendarFocused]);
    const handleBlur = React.useCallback(() => {
      setCalendarFocused(false);
    }, [setCalendarFocused]);
    return /* @__PURE__ */ jsxRuntime.jsx(CalendarContext.CalendarContext.Provider, {
      value: {
        state,
        helpers
      },
      children: /* @__PURE__ */ jsxRuntime.jsxs("div", {
        className: clsx.clsx(withBaseName(), className),
        role: "application",
        ref,
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(CalendarNavigation.CalendarNavigation, {
            hideYearDropdown
          }),
          /* @__PURE__ */ jsxRuntime.jsx(CalendarWeekHeader.CalendarWeekHeader, {}),
          /* @__PURE__ */ jsxRuntime.jsx(CalendarCarousel.CalendarCarousel, {
            onFocus: handleFocus,
            onBlur: handleBlur,
            renderDayContents,
            TooltipProps
          })
        ]
      })
    });
  }
);

exports.Calendar = Calendar;
//# sourceMappingURL=Calendar.js.map
