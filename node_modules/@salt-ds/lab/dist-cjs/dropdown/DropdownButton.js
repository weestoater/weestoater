'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var icons = require('@salt-ds/icons');
require('../form-field-context-legacy/FormFieldLegacyContext.js');
var useFormFieldLegacyProps = require('../form-field-context-legacy/useFormFieldLegacyProps.js');
var clsx = require('clsx');
var React = require('react');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var DropdownButton$1 = require('./DropdownButton.css.js');

const withBaseName = core.makePrefixer("saltDropdownButton");
const DropdownButton = React.forwardRef(function DropdownButton2({
  IconComponent = icons.ChevronDownIcon,
  ariaHideOptionRole,
  className,
  disabled,
  iconSize = icons.DEFAULT_ICON_SIZE,
  isOpen,
  label,
  labelId,
  fullWidth,
  posInSet,
  setSize,
  labelAriaAttributes,
  ...rest
}, ref) {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-dropdown-button",
    css: DropdownButton$1,
    window: targetWindow
  });
  const { inFormField } = useFormFieldLegacyProps.useFormFieldLegacyProps();
  return /* @__PURE__ */ jsxRuntime.jsx(core.Button, {
    className: clsx.clsx(
      withBaseName(),
      {
        [withBaseName("fullwidth")]: fullWidth,
        [withBaseName("formField")]: inFormField
      },
      className
    ),
    "data-testid": "dropdown-button",
    disabled,
    variant: "secondary",
    ...rest,
    ref,
    children: /* @__PURE__ */ jsxRuntime.jsxs("div", {
      className: withBaseName("content"),
      children: [
        /* @__PURE__ */ jsxRuntime.jsx("span", {
          "aria-hidden": ariaHideOptionRole ? "true" : void 0,
          ...labelAriaAttributes,
          className: withBaseName("buttonLabel"),
          id: labelId,
          role: "option",
          children: label
        }),
        /* @__PURE__ */ jsxRuntime.jsx(IconComponent, {
          className: withBaseName("icon"),
          size: iconSize,
          "aria-label": null,
          "aria-hidden": "true"
        })
      ]
    })
  });
});

exports.DropdownButton = DropdownButton;
//# sourceMappingURL=DropdownButton.js.map
