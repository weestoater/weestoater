{"version":3,"file":"useQueryInput.js","sources":["../src/query-input/useQueryInput.ts"],"sourcesContent":["import { useControlled, useForkRef } from \"@salt-ds/core\";\nimport {\n  ChangeEventHandler,\n  FocusEventHandler,\n  ForwardedRef,\n  KeyboardEventHandler,\n  Ref,\n  RefObject,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { QueryInputBodyProps } from \"./internal/QueryInputBody\";\nimport { usePopperStatus } from \"./internal/usePopperStatus\";\nimport { ValueSelectorProps } from \"./internal/ValueSelector\";\nimport { QueryInputProps } from \"./QueryInput\";\nimport { QueryInputCategory, QueryInputItem } from \"./queryInputTypes\";\nimport { useWidth } from \"../responsive\";\n\nexport type BooleanOperator = \"or\" | \"and\";\n\nexport interface UseQueryInputResult {\n  queryInputProps: {\n    onFocus: FocusEventHandler<HTMLDivElement>;\n    onBlur: FocusEventHandler<HTMLDivElement>;\n  };\n  queryInputBodyRef: Ref<HTMLDivElement>;\n  queryInputBodyProps: QueryInputBodyProps;\n  valueSelectorProps: ValueSelectorProps;\n}\n\nexport function useQueryInput(\n  props: QueryInputProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n): UseQueryInputResult {\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const popperRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [widthBodyRef, bodyWidth] = useWidth<HTMLDivElement>(true);\n\n  const forkedRef1 = useForkRef<HTMLDivElement>(\n    forwardedRef,\n    bodyRef\n  ) as RefObject<HTMLDivElement>;\n  const queryInputBodyRef = useForkRef<HTMLDivElement>(\n    forkedRef1,\n    widthBodyRef\n  );\n\n  const [selectedItems, setSelectedItems] = useControlled({\n    controlled: props.selectedItems,\n    default: props.defaultSelectedItems || [],\n    name: \"QueryInput\",\n    state: \"selectedItems\",\n  });\n\n  const [booleanOperator, setBooleanOperator] = useControlled({\n    controlled: props.booleanOperator,\n    default: props.defaultBooleanOperator || \"and\",\n    name: \"QueryInput\",\n    state: \"booleanOperator\",\n  });\n\n  const popperStatus = usePopperStatus({\n    initialOpen: false,\n    autoClose: props.autoClose,\n  });\n\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n  const [highlightedIndex, setHighlightedIndex] = useState(0);\n  const [highlightedCategoryIndex, setHighlightedCategoryIndex] = useState(0);\n  const [highlightedValueIndex, setHighlightedValueIndex] = useState(0);\n  const [selectedCategory, setSelectedCategory] =\n    useState<QueryInputCategory | null>(null);\n  const searchListIndexPositions = useRef<Array<QueryInputCategory | string>>(\n    []\n  );\n\n  const onInputFocus: FocusEventHandler<HTMLInputElement> = (event) => {\n    popperStatus.onFocus(event);\n    setIsFocused(true);\n  };\n\n  const onInputBlur: FocusEventHandler<HTMLInputElement> = (event) => {\n    if (!inputRef.current) {\n      return;\n    }\n    const relatedTarget = event.relatedTarget as Node | null;\n    const isBodyFocused = bodyRef.current === relatedTarget;\n    if (isBodyFocused) {\n      inputRef.current.focus();\n      return;\n    }\n    const isFocusWithinBody =\n      bodyRef.current && bodyRef.current.contains(relatedTarget);\n    if (isFocusWithinBody) {\n      return;\n    }\n    const isFocusWithinPopper =\n      popperRef.current && popperRef.current.contains(relatedTarget);\n    if (isFocusWithinPopper) {\n      inputRef.current.focus();\n      return;\n    }\n    setIsFocused(false);\n    popperStatus.onBlur(event);\n  };\n\n  const onFocus: FocusEventHandler<HTMLDivElement> = (event) => {\n    setIsFocused(true);\n    popperStatus.onFocus(event);\n  };\n\n  const onBlur: FocusEventHandler<HTMLDivElement> = (event) => {\n    let relatedTarget = event.relatedTarget as Node | null;\n    const isBodyFocused = bodyRef.current === relatedTarget;\n    if (isBodyFocused) {\n      return;\n    }\n    const isFocusWithinBody =\n      bodyRef.current && bodyRef.current.contains(relatedTarget);\n    if (isFocusWithinBody) {\n      return;\n    }\n    const isFocusWithinPopper =\n      popperRef.current && popperRef.current.contains(relatedTarget);\n    if (isFocusWithinPopper) {\n      return;\n    }\n    setIsFocused(false);\n    popperStatus.onBlur(event);\n  };\n\n  const onSelectedItemsChange = (newItems: QueryInputItem[] | undefined) => {\n    const newItem =\n      newItems &&\n      newItems.find(\n        (item) => item.category == null && item.value === inputValue\n      );\n    if (newItem) {\n      setInputValue(\"\");\n    }\n    setSelectedItems(newItems || []);\n    if (props.onChange) {\n      props.onChange(newItems || []);\n    }\n    popperStatus.onChange();\n  };\n\n  const onBooleanOperatorChange = (operator: BooleanOperator) => {\n    setBooleanOperator(operator);\n    if (props.onBooleanOperatorChange) {\n      props.onBooleanOperatorChange(operator);\n    }\n  };\n\n  const onSelectedCategoryChange = (category: QueryInputCategory | null) => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setSelectedCategory(category);\n  };\n\n  const [inputValue, setInputValue] = useState<string>(\"\");\n\n  const searchListItems = useMemo(() => {\n    const [searchListItems, indexPositions] = filterCategories(\n      props.categories,\n      inputValue\n    );\n    searchListIndexPositions.current = indexPositions;\n    return searchListItems;\n  }, [props.categories, inputValue]);\n\n  const onInputChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    const newInputValue = event.target.value;\n    setInputValue(newInputValue);\n    // If we have search results, the first index position will be a header\n    setHighlightedIndex(searchListIndexPositions.current.length === 0 ? 0 : 1);\n  };\n\n  const searchListItemCount = useMemo(() => {\n    return searchListItems.reduce(\n      (acc, category) => acc + category.values.length,\n      0\n    );\n  }, [searchListItems]);\n\n  const onInputClear = () => {\n    onSelectedItemsChange([]);\n  };\n\n  const onInputClick = () => {\n    popperStatus.onClick();\n  };\n\n  const newItemFromSelected = (): QueryInputItem | undefined => {\n    const i = highlightedIndex;\n    for (const category of searchListItems) {\n      if (i < category.values.length) {\n        const value = category.values[i];\n        return {\n          category: category.name,\n          value,\n        };\n      }\n    }\n  };\n\n  const { displayedItemCount = 10 } = props;\n\n  const onSearchListKeyDown = (key: string) => {\n    switch (key) {\n      case \"Home\":\n        setHighlightedIndex(0);\n        return;\n      case \"End\":\n        setHighlightedIndex(searchListItemCount);\n        return;\n      case \"ArrowUp\":\n        setHighlightedIndex((i) =>\n          prevSearchItemIndex(i, searchListIndexPositions.current)\n        );\n        return;\n      case \"ArrowDown\":\n        // setHighlightedIndex((i) => Math.min(searchListItemCount, i + 1));\n        setHighlightedIndex((i) =>\n          nextSearchItemIndex(i, searchListIndexPositions.current)\n        );\n        return;\n      case \"PageDown\":\n        setHighlightedIndex((i) =>\n          Math.min(searchListItemCount, i + displayedItemCount)\n        );\n        return;\n      case \"PageUp\":\n        setHighlightedIndex((i) => Math.max(0, i - displayedItemCount));\n        return;\n      case \"Enter\":\n        if (highlightedIndex === searchListItemCount) {\n          const newItems = [\n            ...selectedItems,\n            { category: null, value: inputValue },\n          ];\n          onSelectedItemsChange(newItems);\n        } else {\n          if (highlightedIndex >= 0 && highlightedIndex < searchListItemCount) {\n            const newItem = newItemFromSelected();\n            if (newItem) {\n              const newItems = [...selectedItems, newItem];\n              onSelectedItemsChange(newItems);\n            }\n          }\n          setInputValue(\"\");\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  const onCategoryListKeyDown = (key: string) => {\n    switch (key) {\n      case \"Home\":\n        setHighlightedCategoryIndex(0);\n        return;\n      case \"End\":\n        setHighlightedCategoryIndex(props.categories.length - 1);\n        return;\n      case \"ArrowUp\":\n        setHighlightedCategoryIndex((i) => Math.max(0, i - 1));\n        return;\n      case \"ArrowDown\":\n        setHighlightedCategoryIndex((i) =>\n          Math.min(props.categories.length - 1, i + 1)\n        );\n        return;\n      case \"PageUp\":\n        setHighlightedCategoryIndex((i) => Math.max(0, i - displayedItemCount));\n        return;\n      case \"PageDown\":\n        setHighlightedCategoryIndex((i) =>\n          Math.min(props.categories.length - 1, i + displayedItemCount)\n        );\n        return;\n      case \"Enter\":\n        if (\n          highlightedCategoryIndex >= 0 &&\n          highlightedCategoryIndex < props.categories.length\n        ) {\n          const category = props.categories[highlightedCategoryIndex];\n          setSelectedCategory(category);\n        }\n        return;\n      case \"ArrowRight\":\n        if (\n          highlightedCategoryIndex >= 0 &&\n          highlightedCategoryIndex < props.categories.length\n        ) {\n          const category = props.categories[highlightedCategoryIndex];\n          setSelectedCategory(category);\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  const onValueListKeyDown = (key: string) => {\n    switch (key) {\n      case \"Home\":\n        setHighlightedValueIndex(0);\n        return;\n      case \"End\":\n        setHighlightedValueIndex(selectedCategory!.values.length);\n        return;\n      case \"ArrowUp\":\n        setHighlightedValueIndex((i) => Math.max(0, i - 1));\n        return;\n      case \"ArrowDown\":\n        setHighlightedValueIndex((i) =>\n          Math.min(selectedCategory!.values.length, i + 1)\n        );\n        return;\n      case \"PageUp\":\n        setHighlightedValueIndex((i) => Math.max(0, i - displayedItemCount));\n        return;\n      case \"PageDown\":\n        setHighlightedValueIndex((i) =>\n          Math.min(selectedCategory!.values.length, i + displayedItemCount)\n        );\n        return;\n      case \"Enter\":\n        if (highlightedValueIndex === 0) {\n          setSelectedCategory(null);\n        } else {\n          const value = selectedCategory!.values[highlightedValueIndex - 1];\n          const newItems = selectedItems.filter(\n            (item) =>\n              !(\n                item.category === selectedCategory!.name && item.value === value\n              )\n          );\n          if (newItems.length === selectedItems.length) {\n            newItems.push({ category: selectedCategory!.name, value });\n          }\n          onSelectedItemsChange(newItems);\n        }\n        return;\n      case \"ArrowLeft\":\n        setSelectedCategory(null);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const onKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n    popperStatus.onKeyDown(event);\n    let key = event.key;\n    if (event.key === \" \" && event.ctrlKey) {\n      key = \"Enter\";\n    }\n    const isSearchListActive = inputValue !== \"\";\n    const isCategoryListActive = !isSearchListActive && !selectedCategory;\n    const isValueListActive = !isSearchListActive && !isCategoryListActive;\n    if (isSearchListActive) {\n      onSearchListKeyDown(key);\n    } else if (isCategoryListActive) {\n      onCategoryListKeyDown(key);\n    } else {\n      onValueListKeyDown(key);\n    }\n    switch (event.key) {\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n      case \"Enter\":\n        event.preventDefault();\n        break;\n      case \"ArrowLeft\":\n        if (isValueListActive) {\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowRight\":\n        if (isCategoryListActive) {\n          event.preventDefault();\n        }\n        break;\n      case \"Escape\":\n        setInputValue(\"\");\n    }\n  };\n\n  const onValueToggle = (category: QueryInputCategory, value: string) => {\n    const newItems = selectedItems.filter(\n      (item) => !(item.category === category.name && item.value === value)\n    );\n    if (newItems.length === selectedItems.length) {\n      newItems.push({ category: category.name, value });\n    }\n    onSelectedItemsChange(newItems);\n  };\n\n  return {\n    queryInputBodyRef,\n    queryInputProps: {\n      onFocus,\n      onBlur,\n    },\n    queryInputBodyProps: {\n      inputRef: inputRef,\n      disabled: props.disabled,\n      selectedItems,\n      onFocus,\n      onBlur,\n      onInputClick,\n      onInputFocus,\n      onInputBlur,\n      onInputClear,\n      inputValue,\n      onInputChange,\n      onSelectedItemsChange,\n      onKeyDown,\n      isFocused,\n      booleanOperator,\n      onBooleanOperatorChange,\n    },\n    valueSelectorProps: {\n      isOpen: popperStatus.isOpen,\n      categories: props.categories,\n      selectedCategory,\n      selectedItems,\n      onValueToggle,\n      onSearchListChange: onSelectedItemsChange,\n      anchorElement: bodyRef.current,\n      width: bodyWidth,\n      onSelectedCategoryChange,\n      popperRef,\n      inputValue,\n      highlightedIndex,\n      visibleCategories: searchListItems,\n      highlightedCategoryIndex,\n      highlightedValueIndex,\n      setHighlightedCategoryIndex,\n      setHighlightedValueIndex,\n      setHighlightedIndex,\n    },\n  };\n}\n\nfunction filterCategories(\n  categories: QueryInputCategory[],\n  inputValue?: string\n): [QueryInputCategory[], Array<QueryInputCategory | string>] {\n  // Note: if there is no input value, this List would not be display\n  if (!inputValue) {\n    return [categories, []];\n  }\n  const query = inputValue.toUpperCase();\n  const visibleCategories: QueryInputCategory[] = [];\n  const indexPositions: Array<QueryInputCategory | string> = [];\n  for (const c of categories) {\n    const values = c.values.filter((v) => v.toUpperCase().includes(query));\n    if (values.length > 0) {\n      const queryInputCategory = {\n        name: c.name,\n        values,\n      };\n      visibleCategories.push(queryInputCategory);\n      indexPositions.push(queryInputCategory, ...values);\n    }\n  }\n  return [visibleCategories, indexPositions];\n}\n\nfunction nextSearchItemIndex(\n  index: number,\n  indexPositions: Array<QueryInputCategory | string>\n) {\n  const nextIndex = index + 1;\n  // Note: allow 1 for the extra ListItem we append to end of List\n  if (nextIndex === indexPositions.length + 1) {\n    return index;\n  } else if (nextIndex === indexPositions.length) {\n    return nextIndex;\n  } else if (typeof indexPositions[nextIndex] === \"string\") {\n    return nextIndex;\n  } else {\n    return nextIndex + 1;\n  }\n}\n\nfunction prevSearchItemIndex(\n  index: number,\n  indexPositions: Array<QueryInputCategory | string>\n) {\n  const nextIndex = index - 1;\n  if (nextIndex === 0) {\n    return index;\n  } else if (typeof indexPositions[nextIndex] === \"string\") {\n    return nextIndex;\n  } else {\n    return nextIndex - 1;\n  }\n}\n"],"names":["useRef","useWidth","useForkRef","useControlled","usePopperStatus","useState","useMemo","searchListItems"],"mappings":"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"}