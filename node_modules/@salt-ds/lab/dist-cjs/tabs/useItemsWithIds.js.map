{"version":3,"file":"useItemsWithIds.js","sources":["../src/tabs/useItemsWithIds.tsx"],"sourcesContent":["import {\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport { TabPanel } from \"./TabPanel\";\nimport { TabDescriptor } from \"./TabsTypes\";\n\ntype TabMap = { [key: string]: TabDescriptor };\n\nexport const useItemsWithIds = (\n  children: ReactNode,\n  id = \"root\"\n): [TabDescriptor[], (id: string) => TabDescriptor] => {\n  const normalizeItems = useCallback(\n    (items: ReactNode): [TabDescriptor[], TabMap] => {\n      const sourceMap: TabMap = {};\n      const tabDescriptors: TabDescriptor[] = Children.toArray(items)\n        .filter(isValidElement)\n        .map((child: ReactElement, index: number) => {\n          const {\n            \"data-label\": dataLabel = `Tab ${index + 1}`,\n            enableClose: closeable,\n            label = dataLabel,\n          } = child.props;\n          const tabId = `${id}-${index}`;\n          const tabPanelId = `${tabId}-panel`;\n          const props = {\n            \"aria-labelledby\": tabId,\n            id: tabPanelId,\n            key: tabId,\n          };\n          const element: JSX.Element | undefined =\n            child.type === TabPanel ? (\n              cloneElement(child, props)\n            ) : (\n              <TabPanel {...props} label={label}>\n                {child}\n              </TabPanel>\n            );\n          const tab: TabDescriptor = {\n            closeable,\n            element,\n            id: tabId,\n            label,\n          };\n          sourceMap[tabId] = tab;\n          return tab;\n        });\n      return [tabDescriptors, sourceMap];\n    },\n    [id]\n  );\n\n  const [sourceWithIds, sourceMap] = useMemo(() => {\n    return normalizeItems(children);\n  }, [normalizeItems, children]);\n\n  const itemById = useCallback(\n    (id: string) => sourceMap[id],\n    [sourceWithIds, sourceMap]\n  );\n\n  return [sourceWithIds, itemById];\n};\n"],"names":["useCallback","sourceMap","Children","isValidElement","TabPanel","cloneElement","jsx","useMemo","id"],"mappings":";;;;;;;;AAcO,MAAM,eAAkB,GAAA,CAC7B,QACA,EAAA,EAAA,GAAK,MACgD,KAAA;AACrD,EAAA,MAAM,cAAiB,GAAAA,iBAAA;AAAA,IACrB,CAAC,KAAgD,KAAA;AAC/C,MAAA,MAAMC,aAAoB,EAAC,CAAA;AAC3B,MAAM,MAAA,cAAA,GAAkCC,cAAS,CAAA,OAAA,CAAQ,KAAK,CAAA,CAC3D,MAAO,CAAAC,oBAAc,CACrB,CAAA,GAAA,CAAI,CAAC,KAAA,EAAqB,KAAkB,KAAA;AAC3C,QAAM,MAAA;AAAA,UACJ,YAAA,EAAc,SAAY,GAAA,CAAA,IAAA,EAAO,KAAQ,GAAA,CAAA,CAAA,CAAA;AAAA,UACzC,WAAa,EAAA,SAAA;AAAA,UACb,KAAQ,GAAA,SAAA;AAAA,YACN,KAAM,CAAA,KAAA,CAAA;AACV,QAAM,MAAA,KAAA,GAAQ,GAAG,EAAM,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACvB,QAAA,MAAM,aAAa,CAAG,EAAA,KAAA,CAAA,MAAA,CAAA,CAAA;AACtB,QAAA,MAAM,KAAQ,GAAA;AAAA,UACZ,iBAAmB,EAAA,KAAA;AAAA,UACnB,EAAI,EAAA,UAAA;AAAA,UACJ,GAAK,EAAA,KAAA;AAAA,SACP,CAAA;AACA,QAAM,MAAA,OAAA,GACJ,MAAM,IAAS,KAAAC,iBAAA,GACbC,mBAAa,KAAO,EAAA,KAAK,oBAExBC,cAAA,CAAAF,iBAAA,EAAA;AAAA,UAAU,GAAG,KAAA;AAAA,UAAO,KAAA;AAAA,UAClB,QAAA,EAAA,KAAA;AAAA,SACH,CAAA,CAAA;AAEJ,QAAA,MAAM,GAAqB,GAAA;AAAA,UACzB,SAAA;AAAA,UACA,OAAA;AAAA,UACA,EAAI,EAAA,KAAA;AAAA,UACJ,KAAA;AAAA,SACF,CAAA;AACA,QAAAH,WAAU,KAAS,CAAA,GAAA,GAAA,CAAA;AACnB,QAAO,OAAA,GAAA,CAAA;AAAA,OACR,CAAA,CAAA;AACH,MAAO,OAAA,CAAC,gBAAgBA,UAAS,CAAA,CAAA;AAAA,KACnC;AAAA,IACA,CAAC,EAAE,CAAA;AAAA,GACL,CAAA;AAEA,EAAA,MAAM,CAAC,aAAA,EAAe,SAAS,CAAA,GAAIM,cAAQ,MAAM;AAC/C,IAAA,OAAO,eAAe,QAAQ,CAAA,CAAA;AAAA,GAC7B,EAAA,CAAC,cAAgB,EAAA,QAAQ,CAAC,CAAA,CAAA;AAE7B,EAAA,MAAM,QAAW,GAAAP,iBAAA;AAAA,IACf,CAACQ,QAAe,SAAUA,CAAAA,GAAAA,CAAAA;AAAA,IAC1B,CAAC,eAAe,SAAS,CAAA;AAAA,GAC3B,CAAA;AAEA,EAAO,OAAA,CAAC,eAAe,QAAQ,CAAA,CAAA;AACjC;;;;"}