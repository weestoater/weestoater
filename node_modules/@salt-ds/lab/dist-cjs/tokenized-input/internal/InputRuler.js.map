{"version":3,"file":"InputRuler.js","sources":["../src/tokenized-input/internal/InputRuler.tsx"],"sourcesContent":["import { ForwardedRef, forwardRef, InputHTMLAttributes } from \"react\";\nimport { makePrefixer } from \"@salt-ds/core\";\nimport inputRuler from \"./InputRuler.css\";\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nconst withBaseName = makePrefixer(\"saltInputRuler\");\n\n/**\n * This hidden component is used to wrap a copy of an input value\n * so that we can use it to determine the input width dynamically\n */\nexport const InputRuler = forwardRef(function InputRuler(\n  props: { value: InputHTMLAttributes<HTMLInputElement>[\"value\"] },\n  ref: ForwardedRef<HTMLSpanElement>\n) {\n  const { value } = props;\n\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-input-ruler\",\n    css: inputRuler,\n    window: targetWindow,\n  });\n\n  return (\n    <span className={withBaseName()} ref={ref}>\n      {value}\n    </span>\n  );\n});\n"],"names":["makePrefixer","forwardRef","InputRuler","useWindow","useComponentCssInjection","inputRuler","jsx"],"mappings":";;;;;;;;;;;AAMA,MAAM,YAAA,GAAeA,kBAAa,gBAAgB,CAAA,CAAA;AAM3C,MAAM,UAAa,GAAAC,gBAAA,CAAW,SAASC,WAAAA,CAC5C,OACA,GACA,EAAA;AACA,EAAM,MAAA,EAAE,OAAU,GAAA,KAAA,CAAA;AAElB,EAAA,MAAM,eAAeC,gBAAU,EAAA,CAAA;AAC/B,EAAyBC,+BAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,kBAAA;AAAA,IACR,GAAK,EAAAC,YAAA;AAAA,IACL,MAAQ,EAAA,YAAA;AAAA,GACT,CAAA,CAAA;AAED,EAAA,uBACGC,cAAA,CAAA,MAAA,EAAA;AAAA,IAAK,WAAW,YAAa,EAAA;AAAA,IAAG,GAAA;AAAA,IAC9B,QAAA,EAAA,KAAA;AAAA,GACH,CAAA,CAAA;AAEJ,CAAC;;;;"}