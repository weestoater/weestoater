'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var core = require('@salt-ds/core');
require('../tabs/TabActivationIndicator.js');
var Tabstrip = require('../tabs/Tabstrip.js');
var Tab = require('../tabs/Tab.js');
require('../tabs/TabPanel.js');
require('../tabs/Tabs.js');

const withBaseName = core.makePrefixer("saltColorChooserDictTabs");
const DictTabs = ({
  tabs,
  hexValue,
  onTabClick,
  activeTab,
  ...props
}) => {
  return /* @__PURE__ */ jsxRuntime.jsxs("div", {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(Tabstrip.Tabstrip, {
        ...props,
        "data-testid": "color-chooser-tabstrip",
        className: clsx.clsx(withBaseName("wrapper")),
        activeTabIndex: activeTab,
        onActiveChange: (tabIndex) => onTabClick(tabIndex),
        children: [...Object.keys(tabs)].map((label, i) => /* @__PURE__ */ jsxRuntime.jsx(Tab.Tab, {
          className: clsx.clsx(withBaseName("text")),
          label
        }, i))
      }),
      [...Object.values(tabs)].map((tab, idx) => {
        if (!tab) {
          return null;
        }
        const TabComponent = tab == null ? void 0 : tab.Component;
        return /* @__PURE__ */ jsxRuntime.jsx("div", {
          "aria-hidden": activeTab !== idx,
          hidden: activeTab !== idx,
          children: (tab == null ? void 0 : tab.props) ? /* @__PURE__ */ jsxRuntime.jsx(TabComponent, {
            ...tab == null ? void 0 : tab.props
          }) : null
        }, idx);
      })
    ]
  });
};

exports.DictTabs = DictTabs;
//# sourceMappingURL=DictTabs.js.map
