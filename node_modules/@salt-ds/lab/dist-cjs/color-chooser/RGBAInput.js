'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var core = require('@salt-ds/core');
var AlphaInputField = require('./AlphaInputField.js');
var RGBAInputField = require('./RGBAInputField.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var RGBAInput$1 = require('./RGBAInput.css.js');

const withBaseName = core.makePrefixer("saltColorChooser");
const RGBAInput = ({
  disableAlphaChooser,
  rgbaText,
  rgbaValue,
  onSubmitAlpha,
  onSubmitRgb
}) => {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-rgba-input",
    css: RGBAInput$1,
    window: targetWindow
  });
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx("span", {
        className: clsx.clsx(withBaseName("textDivOverrides")),
        children: rgbaText
      }),
      ["r", "g", "b"].map((value) => /* @__PURE__ */ jsxRuntime.jsxs("div", {
        className: withBaseName("rgbaInputDiv"),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx("span", {
            className: withBaseName("rgbaText"),
            children: value.toUpperCase()
          }),
          /* @__PURE__ */ jsxRuntime.jsx(RGBAInputField.RGBInput, {
            rgbaValue,
            value,
            onSubmit: onSubmitRgb
          })
        ]
      })),
      !disableAlphaChooser ? /* @__PURE__ */ jsxRuntime.jsxs("div", {
        className: clsx.clsx(withBaseName("rgbaInputDiv")),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx("span", {
            className: clsx.clsx(withBaseName("rgbaText")),
            children: "A"
          }),
          /* @__PURE__ */ jsxRuntime.jsx(AlphaInputField.AlphaInput, {
            alphaValue: parseFloat(rgbaValue.a.toFixed(2)),
            onSubmit: onSubmitAlpha
          })
        ]
      }) : /* @__PURE__ */ jsxRuntime.jsx("div", {
        className: clsx.clsx(withBaseName("alphaSpacerDiv"))
      })
    ]
  });
};

exports.RGBAInput = RGBAInput;
//# sourceMappingURL=RGBAInput.js.map
