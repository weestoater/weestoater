{"version":3,"file":"Toolbar.js","sources":["../src/toolbar/Toolbar.tsx"],"sourcesContent":["import { useForkRef, useIdMemo } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport {\n  Children,\n  cloneElement,\n  forwardRef,\n  ReactElement,\n  useRef,\n} from \"react\";\n\nimport { OverflowPanel } from \"./overflow-panel/OverflowPanel\";\nimport { OverflowSeparator } from \"./overflow-panel/OverflowSeparator\";\n\nimport {\n  isOverflowed,\n  useOverflowCollectionItems,\n  useOverflowLayout,\n} from \"../responsive\";\nimport { renderToolbarItems } from \"./internal/renderToolbarItems\";\nimport { ToolbarProps } from \"./ToolbarProps\";\nimport { Tooltray } from \"./Tooltray\";\nimport { TooltrayProps } from \"./TooltrayProps\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport toolbarCss from \"./Toolbar.css\";\n\nconst classBase = \"saltToolbar\";\n\n/**\n * The core Toolbar implementation, without the external wrapper provided by Toolbar.js\n */\nexport const Toolbar = forwardRef<HTMLDivElement, ToolbarProps>(\n  function Toolbar(props, ref) {\n    const {\n      TooltipComponent,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      children,\n      className,\n      id: idProp,\n      overflowButtonIcon,\n      overflowButtonLabel,\n      overflowButtonPlacement = \"end\",\n      responsive = true,\n      disabled = false,\n      orientation = \"horizontal\",\n      ...restProp\n    } = props;\n\n    const targetWindow = useWindow();\n    useComponentCssInjection({\n      testId: \"salt-toolbar\",\n      css: toolbarCss,\n      window: targetWindow,\n    });\n\n    const toolbarId = useIdMemo(idProp);\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const setContainerRef = useForkRef(ref, containerRef);\n\n    const collectionHook = useOverflowCollectionItems({\n      children,\n      id: toolbarId,\n      orientation,\n      label: \"Toolbar\",\n    });\n\n    const [innerContainerRef] = useOverflowLayout({\n      collectionHook,\n      id: toolbarId,\n      orientation,\n      label: \"Toolbar\",\n    });\n\n    const overflowedItems = collectionHook.data.filter(isOverflowed);\n\n    const overflowMenuItems = overflowedItems.reduce<ReactElement[]>(\n      (items, item, i, arr) => {\n        const { element, id } = item;\n        if (element.type === Tooltray) {\n          const tooltrayProps = element.props as TooltrayProps;\n          const nestedElements = tooltrayProps.children as ReactElement[];\n          items.push(\n            ...Children.map(nestedElements, (el) =>\n              cloneElement(el, {\n                \"data-is-inside-panel\": true,\n                key: id,\n              })\n            )\n          );\n          if (i < arr.length - 1) {\n            items.push(<OverflowSeparator key={`separator-${i}`} />);\n          }\n        } else {\n          items.push(\n            cloneElement(element, {\n              key: id,\n              \"data-is-inside-panel\": true,\n            })\n          );\n        }\n        return items;\n      },\n      [] as ReactElement[]\n    );\n\n    const overflowIndicator = collectionHook.data.find(\n      (i) => i.isOverflowIndicator\n    );\n\n    const overflowPanel = overflowIndicator ? (\n      <OverflowPanel\n        className={clsx(\"saltToolbarField\")}\n        data-index={collectionHook.data.length}\n        data-overflow-indicator\n        data-priority={1}\n        id={overflowIndicator.id}\n        triggerButtonIcon={overflowButtonIcon}\n        triggerButtonLabel={overflowButtonLabel}\n      >\n        {overflowMenuItems}\n      </OverflowPanel>\n    ) : null;\n\n    //TODO when we drive this from the overflowItems, the overflowIndicator will\n    // be an overflowItem\n    return (\n      <div\n        aria-label={ariaLabel}\n        // Using `classnames` to join string together. User may want to provide\n        // custom ids (e.g. id from counter label), so the element is labelled by\n        // multiple items\n        aria-labelledby={clsx(toolbarId, ariaLabelledBy)}\n        aria-orientation={orientation}\n        className={clsx(classBase, className, {\n          [`${classBase}-disabled`]: disabled,\n          // TODO whats this for ?\n          [`${classBase}-nonResponsive`]: !responsive,\n        })}\n        id={toolbarId}\n        ref={setContainerRef}\n        role=\"toolbar\"\n        {...restProp}\n      >\n        <div\n          className=\"Responsive-inner\"\n          ref={innerContainerRef}\n          data-collapsing={collectionHook.data.some((item) => item.collapsing)}\n        >\n          {overflowButtonPlacement === \"start\" && overflowPanel}\n          {renderToolbarItems(collectionHook, overflowedItems, orientation)}\n          {overflowButtonPlacement === \"end\" && overflowPanel}\n        </div>\n      </div>\n    );\n  }\n);\n"],"names":["forwardRef","Toolbar","useWindow","useComponentCssInjection","toolbarCss","useIdMemo","useRef","useForkRef","useOverflowCollectionItems","useOverflowLayout","isOverflowed","Tooltray","Children","cloneElement","jsx","OverflowSeparator","OverflowPanel","clsx","jsxs","renderToolbarItems"],"mappings":"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"}