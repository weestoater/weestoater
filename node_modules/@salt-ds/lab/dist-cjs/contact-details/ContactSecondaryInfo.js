'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var React = require('react');
require('./internal/FavoriteToggleWithTooltip.js');
var ContactDetailsContext = require('./internal/ContactDetailsContext.js');

const withBaseName = core.makePrefixer("saltContactSecondaryInfo");
const ContactSecondaryInfo = React.forwardRef(function ContactSecondaryInfo2(props, ref) {
  const {
    id: idProp,
    text,
    icon: Icon,
    className,
    ValueComponent,
    ...restProps
  } = props;
  const { setSecondary, setSecondaryId, variant } = ContactDetailsContext.useContactDetailsContext();
  const id = core.useId(idProp);
  React.useEffect(() => {
    setSecondary(text || "");
    setSecondaryId(id);
    return () => {
      setSecondary(void 0);
      setSecondaryId(void 0);
    };
  }, [id, text, setSecondary, setSecondaryId]);
  return /* @__PURE__ */ jsxRuntime.jsxs(core.Text, {
    styleAs: variant === "default" ? "h4" : void 0,
    maxRows: 1,
    ...restProps,
    id,
    ref,
    className: clsx.clsx(withBaseName(), className),
    "data-testid": "secondary",
    children: [
      Icon ? /* @__PURE__ */ jsxRuntime.jsx(Icon, {
        className: withBaseName("icon")
      }) : null,
      text
    ]
  });
});

exports.ContactSecondaryInfo = ContactSecondaryInfo;
//# sourceMappingURL=ContactSecondaryInfo.js.map
