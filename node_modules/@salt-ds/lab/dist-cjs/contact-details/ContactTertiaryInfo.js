'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var React = require('react');
require('./internal/FavoriteToggleWithTooltip.js');
var ContactDetailsContext = require('./internal/ContactDetailsContext.js');

const withBaseName = core.makePrefixer("saltContactTertiaryInfo");
const ContactTertiaryInfo = React.forwardRef(function ContactTertiaryInfo2(props, ref) {
  const { id: idProp, text, icon: Icon, className, ...restProps } = props;
  const { variant, setTertiary, setTertiaryId } = ContactDetailsContext.useContactDetailsContext();
  const id = core.useId(idProp);
  React.useEffect(() => {
    setTertiary(text);
    setTertiaryId(id);
    return () => {
      setTertiary(void 0);
      setTertiaryId(void 0);
    };
  }, [id, text, setTertiary, setTertiaryId]);
  if (variant === "mini") {
    return null;
  }
  return /* @__PURE__ */ jsxRuntime.jsxs(core.Text, {
    ...restProps,
    maxRows: 1,
    styleAs: variant === "default" ? "h4" : void 0,
    id,
    ref,
    className: clsx.clsx(withBaseName(), className),
    "data-testid": "tertiary",
    children: [
      Icon ? /* @__PURE__ */ jsxRuntime.jsx(Icon, {
        className: withBaseName("icon")
      }) : null,
      text
    ]
  });
});

exports.ContactTertiaryInfo = ContactTertiaryInfo;
//# sourceMappingURL=ContactTertiaryInfo.js.map
