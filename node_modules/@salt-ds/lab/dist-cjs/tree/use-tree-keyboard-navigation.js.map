{"version":3,"file":"use-tree-keyboard-navigation.js","sources":["../src/tree/use-tree-keyboard-navigation.ts"],"sourcesContent":["import { KeyboardEvent, useCallback } from \"react\";\nimport { ArrowLeft } from \"../common-hooks/keyUtils\";\nimport { CollectionItem, CollectionHookResult } from \"../common-hooks\";\n\nexport const getNodeParentPath = ({ id }: CollectionItem<any>) => {\n  let pos = id!.lastIndexOf(\"-\");\n  if (pos !== -1) {\n    // using the built-in hierarchical id scheme\n    // rootId-n-n.n\n    const path = id!.slice(pos + 1);\n    const steps = path.split(\".\");\n    if (steps.length === 1) {\n      return null;\n    } else {\n      steps.pop();\n      return `${id!.slice(0, pos)}-${steps.join(\".\")}`;\n    }\n  } else if ((pos = id!.lastIndexOf(\"/\")) !== -1) {\n    // using a path scheme step/step/step\n    return id!.slice(0, pos);\n  }\n};\n\ninterface TreeNavigationHookProps<Item> {\n  collectionHook: CollectionHookResult<Item>;\n  highlightedIdx: number;\n  highlightItemAtIndex: (index: number) => void;\n}\n\ninterface TreeNavigationHookResult {\n  listHandlers: {\n    onKeyDown: (evt: KeyboardEvent) => void;\n  };\n}\n\n// we need a way to set highlightedIdx when selection changes\nexport const useKeyboardNavigation = <Item>({\n  collectionHook,\n  highlightedIdx,\n  highlightItemAtIndex,\n}: TreeNavigationHookProps<Item>): TreeNavigationHookResult => {\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === ArrowLeft) {\n        const node = collectionHook.data[highlightedIdx];\n        const parentId = getNodeParentPath(node);\n        if (parentId) {\n          highlightItemAtIndex(\n            collectionHook.data.findIndex((item) => item.id === parentId)\n          );\n        }\n      }\n    },\n    [highlightedIdx, highlightItemAtIndex]\n  );\n\n  const listHandlers = {\n    onKeyDown: handleKeyDown,\n  };\n\n  return {\n    listHandlers,\n  };\n};\n"],"names":["useCallback","ArrowLeft"],"mappings":";;;;;;;AAIO,MAAM,iBAAoB,GAAA,CAAC,EAAE,EAAA,EAA8B,KAAA;AAChE,EAAI,IAAA,GAAA,GAAM,EAAI,CAAA,WAAA,CAAY,GAAG,CAAA,CAAA;AAC7B,EAAA,IAAI,QAAQ,CAAI,CAAA,EAAA;AAGd,IAAA,MAAM,IAAO,GAAA,EAAA,CAAI,KAAM,CAAA,GAAA,GAAM,CAAC,CAAA,CAAA;AAC9B,IAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,KAAA,CAAM,GAAG,CAAA,CAAA;AAC5B,IAAI,IAAA,KAAA,CAAM,WAAW,CAAG,EAAA;AACtB,MAAO,OAAA,IAAA,CAAA;AAAA,KACF,MAAA;AACL,MAAA,KAAA,CAAM,GAAI,EAAA,CAAA;AACV,MAAO,OAAA,CAAA,EAAG,GAAI,KAAM,CAAA,CAAA,EAAG,GAAG,CAAK,CAAA,CAAA,EAAA,KAAA,CAAM,KAAK,GAAG,CAAA,CAAA,CAAA,CAAA;AAAA,KAC/C;AAAA,cACU,GAAM,GAAA,EAAA,CAAI,WAAY,CAAA,GAAG,OAAO,CAAI,CAAA,EAAA;AAE9C,IAAO,OAAA,EAAA,CAAI,KAAM,CAAA,CAAA,EAAG,GAAG,CAAA,CAAA;AAAA,GACzB;AACF,EAAA;AAeO,MAAM,wBAAwB,CAAO;AAAA,EAC1C,cAAA;AAAA,EACA,cAAA;AAAA,EACA,oBAAA;AACF,CAA+D,KAAA;AAC7D,EAAA,MAAM,aAAgB,GAAAA,iBAAA;AAAA,IACpB,CAAC,CAAqB,KAAA;AACpB,MAAI,IAAA,CAAA,CAAE,QAAQC,kBAAW,EAAA;AACvB,QAAM,MAAA,IAAA,GAAO,eAAe,IAAK,CAAA,cAAA,CAAA,CAAA;AACjC,QAAM,MAAA,QAAA,GAAW,kBAAkB,IAAI,CAAA,CAAA;AACvC,QAAA,IAAI,QAAU,EAAA;AACZ,UAAA,oBAAA;AAAA,YACE,eAAe,IAAK,CAAA,SAAA,CAAU,CAAC,IAAS,KAAA,IAAA,CAAK,OAAO,QAAQ,CAAA;AAAA,WAC9D,CAAA;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAAA,IACA,CAAC,gBAAgB,oBAAoB,CAAA;AAAA,GACvC,CAAA;AAEA,EAAA,MAAM,YAAe,GAAA;AAAA,IACnB,SAAW,EAAA,aAAA;AAAA,GACb,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,YAAA;AAAA,GACF,CAAA;AACF;;;;;"}