{"version":3,"file":"useReclaimSpace.js","sources":["../src/responsive/useReclaimSpace.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport {\n  OverflowItem,\n  OverflowHookProps,\n  OverflowHookResult,\n} from \"./overflowTypes\";\n\nimport {\n  getOverflowIndicator,\n  measureContainerOverflow,\n  popNextItemByPriority,\n} from \"./overflowUtils\";\n\nconst getPriority = (item: OverflowItem) => item.priority;\n\nconst canReclaimSpace = (item: OverflowItem) =>\n  item.collapsed && item.reclaimSpace;\n\nconst hasReclaimedSpace = (item: OverflowItem) => item.reclaimedSpace;\nconst getReclaimableSpace = ({ size, minSize = 0 }: OverflowItem) =>\n  size - minSize;\n\nconst findNextOverflowedItem = (items: OverflowItem[]) => {\n  const overflowedItems = items.filter((item) => item.overflowed);\n  const minPriority = Math.min(...overflowedItems.map(getPriority));\n  for (let i = 0; i < overflowedItems.length; i++) {\n    if (overflowedItems[i].priority === minPriority) {\n      return overflowedItems[i];\n    }\n  }\n  return null;\n};\n\nexport const addAllVisible = (sum: number, m: OverflowItem) =>\n  sum + (m.overflowed ? 0 : m.size);\n\nconst canReleaseReclaimedSpace = (size: number, items: OverflowItem[]) => {\n  const claimant = items.find(hasReclaimedSpace);\n  const overflowedItem = findNextOverflowedItem(items);\n  if (claimant && overflowedItem) {\n    const renderedSize = items.reduce(addAllVisible, 0);\n    const { size: indicatorSize } = getOverflowIndicator(items)!;\n    const { size: overflowedSize } = overflowedItem;\n    // TODO we can discount the indicator size ONLY IF overflowed item is only overflowed item\n    const reclaimableSpace = getReclaimableSpace(claimant);\n    const renderedSizeAfterReclaim =\n      renderedSize - reclaimableSpace - indicatorSize;\n    const maxAvailableSpace = size - renderedSizeAfterReclaim;\n    if (maxAvailableSpace >= overflowedSize) {\n      return true;\n    }\n  }\n};\n\nconst mightBeAbleToReclaimSpace = (items: OverflowItem[]) =>\n  items.some(canReclaimSpace);\n\n// We need to release the reclaimed space (i.e take it back from the collapsed item and re-assign it\n// as available space) when container grows and space now allows overflowed item to be 'un-wrapped'\n\nexport const useReclaimSpace = ({\n  collectionHook,\n  label = \"Toolbar\",\n  overflowItemsRef: managedItemsRef,\n  overflowContainerRef: ref,\n  orientation,\n}: OverflowHookProps): OverflowHookResult => {\n  const getAllOverflowedItems = useCallback(\n    (visibleContentSize: number, containerSize: number) => {\n      let newlyOverflowedItems = [];\n      const { current: managedItems } = managedItemsRef;\n      const visibleItems = managedItems.slice();\n      while (visibleContentSize > containerSize) {\n        const overflowedItem = popNextItemByPriority(visibleItems);\n        if (overflowedItem === null) {\n          break;\n        }\n        // eslint-disable-next-line no-param-reassign\n        visibleContentSize -= overflowedItem.size;\n        newlyOverflowedItems.push(overflowedItem);\n      }\n      return newlyOverflowedItems;\n    },\n    []\n  );\n\n  const releaseReclaimedSpace = useCallback(() => {\n    const { current: managedItems } = managedItemsRef;\n\n    const claimant = managedItems.find(hasReclaimedSpace);\n    if (claimant) {\n      // Might not always need to collapse, if there is enough available space for it to still be collapsing\n      // collapse the claimant and turn off recvlaimed\n      collectionHook.dispatch({\n        type: \"replace-item\",\n        overflowItem: {\n          ...claimant,\n          collapsed: true,\n          collapsing: false,\n          reclaimedSpace: undefined,\n          size: claimant.minSize as number,\n          fullSize: claimant.size,\n        },\n      });\n    }\n  }, []);\n  const handleResize = useCallback(\n    (size: number, containerHasGrown?: boolean) => {\n      const { isOverflowing: willOverflow } = measureContainerOverflow(\n        ref,\n        orientation\n      );\n      const { current: managedItems } = managedItemsRef;\n\n      if (containerHasGrown && canReleaseReclaimedSpace(size, managedItems)) {\n        releaseReclaimedSpace();\n      } else if (\n        !containerHasGrown &&\n        willOverflow &&\n        mightBeAbleToReclaimSpace(managedItems)\n      ) {\n        const collapsedChild = managedItems.find(canReclaimSpace);\n        if (collapsedChild) {\n          collectionHook.dispatch({\n            type: \"replace-item\",\n            overflowItem: {\n              ...collapsedChild,\n              collapsed: false,\n              collapsing: true,\n              reclaimedSpace: true,\n              size: collapsedChild.fullSize as number,\n              fullSize: null,\n            },\n          });\n        }\n      }\n    },\n    []\n  );\n\n  return {\n    onResize: handleResize,\n  };\n};\n"],"names":["getOverflowIndicator","useCallback","popNextItemByPriority","measureContainerOverflow"],"mappings":"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"}