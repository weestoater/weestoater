'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var React = require('react');
var core = require('@salt-ds/core');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var DeckItem$1 = require('./DeckItem.css.js');

const withBaseName = core.makePrefixer("saltDeckItem");
const DeckItem = React.forwardRef(
  function DeckItem2({
    activeIndex = 0,
    animation,
    children,
    className,
    index,
    role = "group",
    id: idProp,
    ...rest
  }, ref) {
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-deck-item",
      css: DeckItem$1,
      window: targetWindow
    });
    const sliderRef = React.useRef(null);
    const isCurrent = activeIndex === index;
    const position = React.useMemo(() => {
      return isCurrent ? "current" : activeIndex < index ? "next" : "previous";
    }, [activeIndex, index, isCurrent]);
    const classesIndex = animation && position === "current" ? 0 : 1;
    const getActiveClasses = [
      `${animation || "fade"}-in`,
      `${animation || "fade"}-out`
    ];
    const id = core.useId(idProp);
    return /* @__PURE__ */ jsxRuntime.jsx("div", {
      className: clsx.clsx(
        withBaseName(),
        withBaseName(`${animation ? animation : "static"}-${position}`),
        {
          [withBaseName(getActiveClasses[classesIndex])]: animation === "fade"
        },
        className
      ),
      ref: core.useForkRef(ref, sliderRef),
      role,
      tabIndex: isCurrent ? 0 : -1,
      id,
      ...rest,
      children
    });
  }
);

exports.DeckItem = DeckItem;
//# sourceMappingURL=DeckItem.js.map
