'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var core = require('@salt-ds/core');
var Highlighter = require('./Highlighter.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var ListItem$1 = require('./ListItem.css.js');

const withBaseName = core.makePrefixer("saltListItem");
const ListItemProxy = React.forwardRef(function ListItemNextProxy(props, forwardedRef) {
  return /* @__PURE__ */ jsxRuntime.jsx("div", {
    "aria-hidden": true,
    className: clsx.clsx(withBaseName(), withBaseName("proxy")),
    ref: forwardedRef
  });
});
const ListItem = React.forwardRef(
  function ListItem2({
    children,
    className: classNameProp,
    disabled,
    tabIndex,
    item,
    itemHeight,
    itemTextHighlightPattern,
    label,
    selectable: _notUsed,
    selected,
    showCheckbox,
    style: styleProp,
    ...props
  }, forwardedRef) {
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-list-item",
      css: ListItem$1,
      window: targetWindow
    });
    const className = clsx.clsx(withBaseName(), classNameProp, {
      saltDisabled: disabled,
      [withBaseName("checkbox")]: showCheckbox
    });
    const style = itemHeight !== void 0 ? {
      ...styleProp,
      height: itemHeight
    } : styleProp;
    return /* @__PURE__ */ jsxRuntime.jsxs("div", {
      className,
      ...props,
      "aria-disabled": disabled || void 0,
      "aria-selected": selected || void 0,
      ref: forwardedRef,
      style,
      children: [
        showCheckbox && /* @__PURE__ */ jsxRuntime.jsx(core.CheckboxIcon, {
          "aria-hidden": true,
          checked: selected
        }),
        children && typeof children !== "string" ? children : itemTextHighlightPattern == null ? /* @__PURE__ */ jsxRuntime.jsx("span", {
          className: withBaseName("textWrapper"),
          children: label || children
        }) : /* @__PURE__ */ jsxRuntime.jsx(Highlighter.Highlighter, {
          matchPattern: itemTextHighlightPattern,
          text: label || children
        })
      ]
    });
  }
);

exports.ListItem = ListItem;
exports.ListItemProxy = ListItemProxy;
//# sourceMappingURL=ListItem.js.map
