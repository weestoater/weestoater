{"version":3,"file":"List.js","sources":["../src/list/List.tsx"],"sourcesContent":["import { makePrefixer, useForkRef, useIdMemo } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport {\n  cloneElement,\n  ForwardedRef,\n  forwardRef,\n  isValidElement,\n  ReactElement,\n  useRef,\n} from \"react\";\nimport {\n  CollectionIndexer,\n  CollectionItem,\n  isSelected,\n  itemToString as defaultItemToString,\n  LIST_FOCUS_VISIBLE,\n  ScrollingAPI,\n  SelectionStrategy,\n  useCollectionItems,\n  useImperativeScrollingAPI,\n} from \"../common-hooks\";\n\nimport { ListItem as DefaultListItem, ListItemProxy } from \"./ListItem\";\nimport { ListItemProps, ListProps } from \"./listTypes\";\nimport { useList } from \"./useList\";\nimport { useListHeight } from \"./useListHeight\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport listCss from \"./List.css\";\n\nconst defaultEmptyMessage = \"No data to display\";\n\nconst withBaseName = makePrefixer(\"saltList\");\n\nexport const List = forwardRef(function List<\n  Item,\n  Selection extends SelectionStrategy = \"default\"\n>(\n  {\n    ListItem = DefaultListItem,\n    ListPlaceholder,\n    borderless,\n    children,\n    className,\n    collapsibleHeaders = false,\n    defaultHighlightedIndex,\n    defaultSelected,\n    disabled: listDisabled = false,\n    disableFocus = false,\n    disableTypeToSelect,\n    displayedItemCount = 10,\n    emptyMessage,\n    focusVisible: focusVisibleProp,\n    getItemHeight: getItemHeightProp,\n    getItemId,\n    height,\n    highlightedIndex: highlightedIndexProp,\n    id: idProp,\n    itemGapSize = 0,\n    itemHeight: itemHeightProp,\n    itemTextHighlightPattern,\n    itemToString = defaultItemToString,\n    listHandlers: listHandlersProp,\n    maxHeight,\n    maxWidth,\n    minHeight,\n    minWidth,\n    onSelect,\n    onSelectionChange,\n    onHighlight,\n    restoreLastFocus,\n    selected: selectedProp,\n    selectionStrategy,\n    checkable = selectionStrategy === \"multiple\",\n    scrollingApiRef,\n    // TODO do we still need these ?\n    selectionKeys,\n    showEmptyMessage = false,\n    source,\n    style: styleProp,\n    stickyHeaders,\n    tabToSelect,\n    width,\n    ...htmlAttributes\n  }: ListProps<Item, Selection>,\n  forwardedRef?: ForwardedRef<HTMLDivElement>\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-list\",\n    css: listCss,\n    window: targetWindow,\n  });\n\n  const id = useIdMemo(idProp);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const rowHeightProxyRef = useRef<HTMLDivElement>(null);\n\n  const collectionHook = useCollectionItems<Item>({\n    id,\n    label: \"List\",\n    source,\n    children,\n    options: {\n      collapsibleHeaders,\n      // Add Group ChildTypes to options\n      getItemId,\n      itemToString,\n    },\n  });\n\n  const { preferredHeight } = useListHeight({\n    borderless,\n    displayedItemCount,\n    getItemHeight: getItemHeightProp,\n    height,\n    itemCount: collectionHook.data.length,\n    itemGapSize,\n    itemHeight: itemHeightProp,\n    rowHeightRef: rowHeightProxyRef,\n  });\n\n  const {\n    focusVisible,\n    highlightedIndex,\n    listControlProps,\n    listHandlers,\n    listItemHeaderHandlers,\n    scrollIntoView,\n    selected,\n  } = useList<Item, Selection>({\n    collapsibleHeaders,\n    collectionHook,\n    containerRef: rootRef,\n    contentRef,\n    defaultHighlightedIndex,\n    defaultSelected: collectionHook.itemToCollectionItem<\n      Selection,\n      typeof defaultSelected\n    >(defaultSelected),\n    disabled: listDisabled,\n    disableTypeToSelect,\n    highlightedIndex: highlightedIndexProp,\n    label: id,\n    listHandlers: listHandlersProp, // should this be in context ?\n    onSelect,\n    onSelectionChange,\n    onHighlight,\n    restoreLastFocus,\n    selected: collectionHook.itemToCollectionItem<\n      Selection,\n      typeof defaultSelected\n    >(selectedProp),\n    selectionStrategy,\n    selectionKeys,\n    stickyHeaders,\n    tabToSelect,\n  });\n\n  useImperativeScrollingAPI({\n    collectionHook,\n    forwardedRef: scrollingApiRef,\n    scrollableRef: rootRef,\n    scrollIntoView,\n  });\n\n  // focusVisible passes as a prop takes precedence\n  const appliedFocusVisible = focusVisibleProp ?? focusVisible;\n\n  const createHeader: (\n    idx: { value: number },\n    headerId: string,\n    title: string,\n    expanded?: boolean\n  ) => ReactElement = function createHeader(idx, headerId, title, expanded) {\n    const header = (\n      <ListItem\n        {...listItemHeaderHandlers}\n        className={clsx(\"saltListItemHeader\", {\n          focusVisible: collapsibleHeaders && appliedFocusVisible === idx.value,\n        })}\n        aria-expanded={expanded}\n        data-idx={collapsibleHeaders ? idx.value : undefined}\n        data-highlighted={idx.value === highlightedIndex || undefined}\n        data-sticky={stickyHeaders}\n        data-selectable={false}\n        id={headerId}\n        key={`header-${idx.value}`}\n        label={title}\n        // role=\"presentation\"\n      />\n    );\n    idx.value += 1;\n    return header;\n  };\n\n  const getItemHeight =\n    getItemHeightProp === undefined ? () => itemHeightProp : getItemHeightProp;\n\n  function renderCollectionItem(\n    list: ReactElement[],\n    item: CollectionItem<Item>,\n    idx: { value: number }\n  ) {\n    // Note, a number of these props are specific to ListItem. What if user\n    // implements a custom ListItem but neglects to handle all these props.\n    // Is that on them ?\n    const { disabled, value, id: itemId, label } = item;\n    const isChildItem = isValidElement(value);\n    const listItemProps: ListItemProps<Item> & {\n      key: string;\n      \"data-idx\": number;\n    } = {\n      className: clsx({\n        saltHighlighted: idx.value === highlightedIndex,\n        saltFocusVisible: appliedFocusVisible === idx.value,\n      }),\n      disabled: disabled || listDisabled,\n      id: itemId,\n      item: isChildItem ? undefined : item?.value ?? undefined,\n      itemHeight: getItemHeight(idx.value),\n      itemTextHighlightPattern,\n      key: itemId,\n      \"data-idx\": idx.value,\n      label,\n      role: \"option\",\n      selected: isSelected<Item>(selected, item),\n      showCheckbox: checkable,\n    };\n    list.push(\n      isChildItem ? (\n        cloneElement(value, listItemProps)\n      ) : (\n        <ListItem {...listItemProps} />\n      )\n    );\n\n    idx.value += 1;\n  }\n\n  const addGroup: (\n    list: ReactElement[],\n    items: CollectionItem<Item>[],\n    idx: { value: number }\n  ) => void = function addGroup(\n    list: ReactElement[],\n    items: CollectionItem<Item>[],\n    idx: { value: number }\n  ) {\n    const { count = 0, id, expanded, label = \"\" } = items[idx.value];\n    const header = createHeader(idx, id, label, expanded);\n    const childItems: ReactElement | ReactElement[] =\n      expanded !== false\n        ? [header].concat(\n            renderCollectionItems(items, idx, idx.value + count) || []\n          )\n        : header;\n\n    list.push(\n      <div key={id} role=\"group\">\n        {childItems}\n      </div>\n    );\n  };\n\n  const renderCollectionItems = (\n    items: CollectionItem<Item>[],\n    idx: CollectionIndexer = { value: 0 },\n    end = items.length\n  ): ReactElement[] | undefined => {\n    const listItems: ReactElement[] = [];\n    while (idx.value < end) {\n      const item = items[idx.value];\n      if (item.header) {\n        listItems.push(\n          createHeader(idx, item.id, item.label!, item.expanded === false)\n        );\n      } else if (item.childNodes) {\n        addGroup(listItems, items, idx);\n      } else {\n        renderCollectionItem(listItems, item, idx);\n      }\n    }\n    return listItems;\n  };\n\n  function renderEmpty() {\n    if (emptyMessage || showEmptyMessage) {\n      return (\n        <span className={withBaseName(\"empty-message\")}>\n          {emptyMessage ?? defaultEmptyMessage}\n        </span>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  const renderContent = () => {\n    if (collectionHook.data.length) {\n      return renderCollectionItems(collectionHook.data);\n    } else {\n      renderEmpty();\n    }\n  };\n\n  const contentHeight = \"auto\";\n  const sizeStyles = {\n    \"--list-item-gap\": itemGapSize ? `${itemGapSize}px` : undefined,\n    minWidth,\n    minHeight,\n    width: width ?? \"100%\",\n    height: height ?? \"100%\",\n    maxWidth: maxWidth ?? width,\n    maxHeight: maxHeight ?? preferredHeight,\n  };\n  return (\n    <div\n      aria-multiselectable={\n        selectionStrategy === \"multiple\" ||\n        selectionStrategy === \"extended\" ||\n        selectionStrategy === \"extended-multi-range\" ||\n        undefined\n      }\n      {...htmlAttributes}\n      {...listHandlers}\n      {...listControlProps}\n      className={clsx(withBaseName(), className, {\n        // TODO low-emphasis\n        [withBaseName(\"borderless\")]: borderless,\n        saltDisabled: listDisabled,\n        [withBaseName(\"collapsible\")]: collapsibleHeaders,\n        saltFocusVisible: highlightedIndex === LIST_FOCUS_VISIBLE,\n      })}\n      id={`${id}`}\n      ref={useForkRef<HTMLDivElement>(rootRef, forwardedRef)}\n      role=\"listbox\"\n      style={{ ...styleProp, ...sizeStyles }}\n      tabIndex={listDisabled || disableFocus ? undefined : 0}\n    >\n      <ListItemProxy ref={rowHeightProxyRef} />\n      {collectionHook.data.length === 0 && ListPlaceholder !== undefined ? (\n        <>\n          <ListPlaceholder />\n        </>\n      ) : (\n        <div\n          className={withBaseName(\"scrollingContentContainer\")}\n          ref={contentRef}\n          style={{ height: contentHeight }}\n        >\n          {renderContent()}\n        </div>\n      )}\n    </div>\n  );\n}) as <Item = string, Selection extends SelectionStrategy = \"default\">(\n  props: ListProps<Item, Selection> & {\n    ref?: ForwardedRef<ScrollingAPI<Item>>;\n  }\n) => ReactElement<ListProps<Item, Selection>>;\n"],"names":["makePrefixer","forwardRef","List","ListItem","DefaultListItem","itemToString","defaultItemToString","useWindow","useComponentCssInjection","listCss","useIdMemo","useRef","useCollectionItems","useListHeight","useList","useImperativeScrollingAPI","createHeader","createElement","clsx","isValidElement","isSelected","cloneElement","jsx","addGroup","id","jsxs","LIST_FOCUS_VISIBLE","useForkRef","ListItemProxy","Fragment"],"mappings":"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"}