{"version":3,"file":"VirtualizedList.js","sources":["../src/list/VirtualizedList.tsx"],"sourcesContent":["import { makePrefixer, useForkRef, useIdMemo } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { ForwardedRef, forwardRef, ReactElement, useRef } from \"react\";\nimport {\n  CollectionIndexer,\n  isSelected,\n  SelectionStrategy,\n  useCollectionItems,\n  useImperativeScrollingAPI,\n} from \"../common-hooks\";\nimport { useListHeight } from \"./useListHeight\";\n\nimport { ListItem, ListItemProxy } from \"./ListItem\";\nimport { ListProps } from \"./listTypes\";\nimport { useList } from \"./useList\";\nimport { Row, useVirtualization } from \"./useVirtualization\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport listCss from \"./List.css\";\n\nconst defaultEmptyMessage = \"No data to display\";\n\nconst withBaseName = makePrefixer(\"saltList\");\n\nexport const VirtualizedList = forwardRef(function List<\n  Item,\n  Selection extends SelectionStrategy = \"default\"\n>(\n  {\n    borderless,\n    children,\n    className,\n    collapsibleHeaders = false,\n    defaultHighlightedIndex: defaultHighlightedIdx,\n    defaultSelected,\n    disabled: listDisabled = false,\n    disableFocus = false,\n    disableTypeToSelect,\n    displayedItemCount = 10,\n    emptyMessage,\n    getItemHeight,\n    getItemId,\n    height,\n    highlightedIndex: highlightedIdxProp,\n    id: idProp,\n    itemGapSize = 0,\n    itemHeight: itemHeightProp,\n    itemTextHighlightPattern,\n    itemToString,\n    maxHeight,\n    maxWidth,\n    minHeight,\n    minWidth,\n    onSelect,\n    onSelectionChange,\n    onHighlight,\n    restoreLastFocus,\n    selected: selectedProp,\n    selectionStrategy,\n    scrollingApiRef,\n    // TODO do we still need these ?\n    selectionKeys,\n    showEmptyMessage = false,\n    source,\n    style: styleProp,\n    stickyHeaders,\n    tabToSelect,\n    width,\n    ...htmlAttributes\n  }: ListProps<Item, Selection>,\n  forwardedRef?: ForwardedRef<HTMLDivElement>\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-list\",\n    css: listCss,\n    window: targetWindow,\n  });\n\n  const id = useIdMemo(idProp);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const rowHeightProxyRef = useRef<HTMLDivElement | null>(null);\n\n  const collectionHook = useCollectionItems<Item>({\n    id,\n    label: \"List\",\n    source,\n    children,\n    options: {\n      collapsibleHeaders,\n      getItemId,\n      itemToString,\n    },\n  });\n\n  const { preferredHeight } = useListHeight({\n    borderless,\n    displayedItemCount,\n    height,\n    itemCount: collectionHook.data.length,\n    itemGapSize,\n    itemHeight: itemHeightProp,\n    rowHeightRef: rowHeightProxyRef,\n  });\n  const {\n    focusVisible,\n    highlightedIndex,\n    listControlProps,\n    listHandlers,\n    scrollIntoView,\n    selected,\n  } = useList<Item, Selection>({\n    collapsibleHeaders,\n    collectionHook,\n    containerRef: rootRef,\n    defaultHighlightedIndex: defaultHighlightedIdx,\n    defaultSelected: collectionHook.itemToCollectionItem<\n      Selection,\n      typeof defaultSelected\n    >(defaultSelected),\n    disabled: listDisabled,\n    disableTypeToSelect,\n    highlightedIndex: highlightedIdxProp,\n    label: id,\n    onSelect,\n    onSelectionChange,\n    onHighlight,\n    restoreLastFocus,\n    selected: collectionHook.itemToCollectionItem<\n      Selection,\n      typeof defaultSelected\n    >(selectedProp),\n    selectionStrategy,\n    selectionKeys,\n    stickyHeaders,\n    tabToSelect,\n  });\n\n  // TODO move into useList\n  const {\n    rows: data,\n    contentHeight,\n    onVerticalScroll: onScroll,\n  } = useVirtualization<Item>({\n    viewportRef: rootRef,\n    data: collectionHook.data,\n    itemGapSize,\n  });\n\n  // FIXME: useImperativeScrollingAPI doesn't work when element is not rendered beyond `renderBuffer`\n  // One potential way: pass `scrollIntoView` to `useVirtualization` and update rows before original `scrollIntoView` been called\n  useImperativeScrollingAPI({\n    collectionHook,\n    forwardedRef: scrollingApiRef,\n    scrollableRef: rootRef,\n    scrollIntoView,\n  });\n\n  function addItem(\n    list: ReactElement[],\n    row: Row<Item>,\n    idx: { value: number }\n  ) {\n    const [key, offset, pos, item] = row;\n    const index = pos - 1;\n    list.push(\n      <ListItem\n        aria-setsize={collectionHook.data.length}\n        aria-posinset={pos}\n        className={clsx(className, {\n          saltHighlighted: index === highlightedIndex,\n          saltFocusVisible: focusVisible === index,\n        })}\n        data-idx={index}\n        key={key}\n        data-offset={offset}\n        role=\"option\"\n        selected={isSelected<Item>(selected, item)}\n        id={item.id}\n        style={{\n          transform: `translate3d(0px, ${offset}px, 0px)`,\n        }}\n      >\n        {item.label}\n      </ListItem>\n    );\n    idx.value += 1;\n  }\n\n  function renderItems(\n    data: Row<Item>[],\n    idx: CollectionIndexer = { value: 0 },\n    end = data.length\n  ) {\n    const listItems: ReactElement[] = [];\n    while (idx.value < end) {\n      const item = data[idx.value];\n      addItem(listItems, item, idx);\n    }\n    return listItems;\n  }\n\n  function renderEmpty() {\n    if (emptyMessage || showEmptyMessage) {\n      return (\n        <span className={withBaseName(\"empty-message\")}>\n          {emptyMessage ?? defaultEmptyMessage}\n        </span>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  const renderContent = () => {\n    if (data.length) {\n      return renderItems(data);\n    } else {\n      renderEmpty();\n    }\n  };\n\n  const sizeStyles = {\n    \"--list-item-gap\": itemGapSize ? `${itemGapSize}px` : undefined,\n    minWidth,\n    minHeight,\n    width: width ?? \"100%\",\n    height: height ?? \"100%\",\n    maxWidth: maxWidth ?? width,\n    maxHeight: maxHeight ?? preferredHeight,\n  };\n  return (\n    <div\n      {...htmlAttributes}\n      {...listHandlers}\n      {...listControlProps}\n      className={clsx(withBaseName(), className, withBaseName(\"virtualized\"))}\n      id={`${id}`}\n      ref={useForkRef<HTMLDivElement>(rootRef, forwardedRef)}\n      role=\"listbox\"\n      onScroll={onScroll}\n      style={{ ...styleProp, ...sizeStyles }}\n      tabIndex={listDisabled || disableFocus ? undefined : 0}\n    >\n      <div\n        className={withBaseName(\"scrollingContentContainer\")}\n        style={{ height: contentHeight }}\n      >\n        <ListItemProxy ref={rowHeightProxyRef} />\n        {renderContent()}\n      </div>\n    </div>\n  );\n}) as <Item = string, Selection extends SelectionStrategy = \"default\">(\n  props: ListProps<Item, Selection> & {\n    ref?: ForwardedRef<HTMLDivElement>;\n  }\n) => ReactElement<ListProps<Item, Selection>>;\n"],"names":["makePrefixer","forwardRef","List","useWindow","useComponentCssInjection","listCss","useIdMemo","useRef","useCollectionItems","useListHeight","useList","useVirtualization","useImperativeScrollingAPI","jsx","ListItem","clsx","isSelected","data","useForkRef","jsxs","ListItemProxy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAM,mBAAsB,GAAA,oBAAA,CAAA;AAE5B,MAAM,YAAA,GAAeA,kBAAa,UAAU,CAAA,CAAA;AAE/B,MAAA,eAAA,GAAkBC,gBAAW,CAAA,SAASC,MAIjD,CAAA;AAAA,EACE,UAAA;AAAA,EACA,QAAA;AAAA,EACA,SAAA;AAAA,EACA,kBAAqB,GAAA,KAAA;AAAA,EACrB,uBAAyB,EAAA,qBAAA;AAAA,EACzB,eAAA;AAAA,EACA,UAAU,YAAe,GAAA,KAAA;AAAA,EACzB,YAAe,GAAA,KAAA;AAAA,EACf,mBAAA;AAAA,EACA,kBAAqB,GAAA,EAAA;AAAA,EACrB,YAAA;AAAA,EACA,aAAA;AAAA,EACA,SAAA;AAAA,EACA,MAAA;AAAA,EACA,gBAAkB,EAAA,kBAAA;AAAA,EAClB,EAAI,EAAA,MAAA;AAAA,EACJ,WAAc,GAAA,CAAA;AAAA,EACd,UAAY,EAAA,cAAA;AAAA,EACZ,wBAAA;AAAA,EACA,YAAA;AAAA,EACA,SAAA;AAAA,EACA,QAAA;AAAA,EACA,SAAA;AAAA,EACA,QAAA;AAAA,EACA,QAAA;AAAA,EACA,iBAAA;AAAA,EACA,WAAA;AAAA,EACA,gBAAA;AAAA,EACA,QAAU,EAAA,YAAA;AAAA,EACV,iBAAA;AAAA,EACA,eAAA;AAAA,EAEA,aAAA;AAAA,EACA,gBAAmB,GAAA,KAAA;AAAA,EACnB,MAAA;AAAA,EACA,KAAO,EAAA,SAAA;AAAA,EACP,aAAA;AAAA,EACA,WAAA;AAAA,EACA,KAAA;AAAA,EACG,GAAA,cAAA;AACL,CAAA,EACA,YACA,EAAA;AACA,EAAA,MAAM,eAAeC,gBAAU,EAAA,CAAA;AAC/B,EAAyBC,+BAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,WAAA;AAAA,IACR,GAAK,EAAAC,IAAA;AAAA,IACL,MAAQ,EAAA,YAAA;AAAA,GACT,CAAA,CAAA;AAED,EAAM,MAAA,EAAA,GAAKC,eAAU,MAAM,CAAA,CAAA;AAC3B,EAAM,MAAA,OAAA,GAAUC,aAAuB,IAAI,CAAA,CAAA;AAC3C,EAAM,MAAA,iBAAA,GAAoBA,aAA8B,IAAI,CAAA,CAAA;AAE5D,EAAA,MAAM,iBAAiBC,qCAAyB,CAAA;AAAA,IAC9C,EAAA;AAAA,IACA,KAAO,EAAA,MAAA;AAAA,IACP,MAAA;AAAA,IACA,QAAA;AAAA,IACA,OAAS,EAAA;AAAA,MACP,kBAAA;AAAA,MACA,SAAA;AAAA,MACA,YAAA;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AAED,EAAM,MAAA,EAAE,eAAgB,EAAA,GAAIC,2BAAc,CAAA;AAAA,IACxC,UAAA;AAAA,IACA,kBAAA;AAAA,IACA,MAAA;AAAA,IACA,SAAA,EAAW,eAAe,IAAK,CAAA,MAAA;AAAA,IAC/B,WAAA;AAAA,IACA,UAAY,EAAA,cAAA;AAAA,IACZ,YAAc,EAAA,iBAAA;AAAA,GACf,CAAA,CAAA;AACD,EAAM,MAAA;AAAA,IACJ,YAAA;AAAA,IACA,gBAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,cAAA;AAAA,IACA,QAAA;AAAA,MACEC,eAAyB,CAAA;AAAA,IAC3B,kBAAA;AAAA,IACA,cAAA;AAAA,IACA,YAAc,EAAA,OAAA;AAAA,IACd,uBAAyB,EAAA,qBAAA;AAAA,IACzB,eAAA,EAAiB,cAAe,CAAA,oBAAA,CAG9B,eAAe,CAAA;AAAA,IACjB,QAAU,EAAA,YAAA;AAAA,IACV,mBAAA;AAAA,IACA,gBAAkB,EAAA,kBAAA;AAAA,IAClB,KAAO,EAAA,EAAA;AAAA,IACP,QAAA;AAAA,IACA,iBAAA;AAAA,IACA,WAAA;AAAA,IACA,gBAAA;AAAA,IACA,QAAA,EAAU,cAAe,CAAA,oBAAA,CAGvB,YAAY,CAAA;AAAA,IACd,iBAAA;AAAA,IACA,aAAA;AAAA,IACA,aAAA;AAAA,IACA,WAAA;AAAA,GACD,CAAA,CAAA;AAGD,EAAM,MAAA;AAAA,IACJ,IAAM,EAAA,IAAA;AAAA,IACN,aAAA;AAAA,IACA,gBAAkB,EAAA,QAAA;AAAA,MAChBC,mCAAwB,CAAA;AAAA,IAC1B,WAAa,EAAA,OAAA;AAAA,IACb,MAAM,cAAe,CAAA,IAAA;AAAA,IACrB,WAAA;AAAA,GACD,CAAA,CAAA;AAID,EAA0BC,mDAAA,CAAA;AAAA,IACxB,cAAA;AAAA,IACA,YAAc,EAAA,eAAA;AAAA,IACd,aAAe,EAAA,OAAA;AAAA,IACf,cAAA;AAAA,GACD,CAAA,CAAA;AAED,EAAS,SAAA,OAAA,CACP,IACA,EAAA,GAAA,EACA,GACA,EAAA;AACA,IAAA,MAAM,CAAC,GAAA,EAAK,MAAQ,EAAA,GAAA,EAAK,IAAI,CAAI,GAAA,GAAA,CAAA;AACjC,IAAA,MAAM,QAAQ,GAAM,GAAA,CAAA,CAAA;AACpB,IAAK,IAAA,CAAA,IAAA;AAAA,sBACFC,cAAA,CAAAC,iBAAA,EAAA;AAAA,QACC,cAAA,EAAc,eAAe,IAAK,CAAA,MAAA;AAAA,QAClC,eAAe,EAAA,GAAA;AAAA,QACf,SAAA,EAAWC,UAAK,SAAW,EAAA;AAAA,UACzB,iBAAiB,KAAU,KAAA,gBAAA;AAAA,UAC3B,kBAAkB,YAAiB,KAAA,KAAA;AAAA,SACpC,CAAA;AAAA,QACD,UAAU,EAAA,KAAA;AAAA,QAEV,aAAa,EAAA,MAAA;AAAA,QACb,IAAK,EAAA,QAAA;AAAA,QACL,QAAA,EAAUC,qBAAiB,CAAA,QAAA,EAAU,IAAI,CAAA;AAAA,QACzC,IAAI,IAAK,CAAA,EAAA;AAAA,QACT,KAAO,EAAA;AAAA,UACL,WAAW,CAAoB,iBAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AAAA,SACjC;AAAA,QAEC,QAAK,EAAA,IAAA,CAAA,KAAA;AAAA,OAAA,EATD,GAUP,CAAA;AAAA,KACF,CAAA;AACA,IAAA,GAAA,CAAI,KAAS,IAAA,CAAA,CAAA;AAAA,GACf;AAEA,EAAS,SAAA,WAAA,CACPC,OACA,GAAyB,GAAA,EAAE,OAAO,CAAE,EAAA,EACpC,GAAMA,GAAAA,KAAAA,CAAK,MACX,EAAA;AACA,IAAA,MAAM,YAA4B,EAAC,CAAA;AACnC,IAAO,OAAA,GAAA,CAAI,QAAQ,GAAK,EAAA;AACtB,MAAM,MAAA,IAAA,GAAOA,MAAK,GAAI,CAAA,KAAA,CAAA,CAAA;AACtB,MAAQ,OAAA,CAAA,SAAA,EAAW,MAAM,GAAG,CAAA,CAAA;AAAA,KAC9B;AACA,IAAO,OAAA,SAAA,CAAA;AAAA,GACT;AAEA,EAAA,SAAS,WAAc,GAAA;AACrB,IAAA,IAAI,gBAAgB,gBAAkB,EAAA;AACpC,MAAA,uBACGJ,cAAA,CAAA,MAAA,EAAA;AAAA,QAAK,SAAA,EAAW,aAAa,eAAe,CAAA;AAAA,QAC1C,QAAgB,EAAA,YAAA,IAAA,IAAA,GAAA,YAAA,GAAA,mBAAA;AAAA,OACnB,CAAA,CAAA;AAAA,KAEG,MAAA;AACL,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AAAA,GACF;AAEA,EAAA,MAAM,gBAAgB,MAAM;AAC1B,IAAA,IAAI,KAAK,MAAQ,EAAA;AACf,MAAA,OAAO,YAAY,IAAI,CAAA,CAAA;AAAA,KAClB,MAAA;AACL,MAAY,WAAA,EAAA,CAAA;AAAA,KACd;AAAA,GACF,CAAA;AAEA,EAAA,MAAM,UAAa,GAAA;AAAA,IACjB,iBAAA,EAAmB,WAAc,GAAA,CAAA,EAAG,WAAkB,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA;AAAA,IACtD,QAAA;AAAA,IACA,SAAA;AAAA,IACA,OAAO,KAAS,IAAA,IAAA,GAAA,KAAA,GAAA,MAAA;AAAA,IAChB,QAAQ,MAAU,IAAA,IAAA,GAAA,MAAA,GAAA,MAAA;AAAA,IAClB,UAAU,QAAY,IAAA,IAAA,GAAA,QAAA,GAAA,KAAA;AAAA,IACtB,WAAW,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,eAAA;AAAA,GAC1B,CAAA;AACA,EAAA,uBACGA,cAAA,CAAA,KAAA,EAAA;AAAA,IACE,GAAG,cAAA;AAAA,IACH,GAAG,YAAA;AAAA,IACH,GAAG,gBAAA;AAAA,IACJ,WAAWE,SAAK,CAAA,YAAA,IAAgB,SAAW,EAAA,YAAA,CAAa,aAAa,CAAC,CAAA;AAAA,IACtE,IAAI,CAAG,EAAA,EAAA,CAAA,CAAA;AAAA,IACP,GAAA,EAAKG,eAA2B,CAAA,OAAA,EAAS,YAAY,CAAA;AAAA,IACrD,IAAK,EAAA,SAAA;AAAA,IACL,QAAA;AAAA,IACA,KAAO,EAAA,EAAE,GAAG,SAAA,EAAW,GAAG,UAAW,EAAA;AAAA,IACrC,QAAA,EAAU,YAAgB,IAAA,YAAA,GAAe,KAAY,CAAA,GAAA,CAAA;AAAA,IAErD,QAAC,kBAAAC,eAAA,CAAA,KAAA,EAAA;AAAA,MACC,SAAA,EAAW,aAAa,2BAA2B,CAAA;AAAA,MACnD,KAAA,EAAO,EAAE,MAAA,EAAQ,aAAc,EAAA;AAAA,MAE/B,QAAA,EAAA;AAAA,wBAACN,cAAA,CAAAO,sBAAA,EAAA;AAAA,UAAc,GAAK,EAAA,iBAAA;AAAA,SAAmB,CAAA;AAAA,QACtC,aAAc,EAAA;AAAA,OAAA;AAAA,KACjB,CAAA;AAAA,GACF,CAAA,CAAA;AAEJ,CAAC;;;;"}