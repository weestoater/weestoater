{"version":3,"file":"DefaultComboBox.js","sources":["../src/combo-box-deprecated/internal/DefaultComboBox.tsx"],"sourcesContent":["import { flip, limitShift, shift, size } from \"@floating-ui/react\";\nimport { useAriaAnnouncer, useFloatingUI, useForkRef } from \"@salt-ds/core\";\nimport {\n  ComponentType,\n  HTMLAttributes,\n  ReactNode,\n  Ref,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { Portal } from \"../../portal\";\nimport {\n  IndexedListItemProps,\n  ListBase,\n  ListProps,\n  ListSelectionVariant,\n  ListStateContext,\n} from \"../../list-deprecated\";\nimport { GetFilterRegex } from \"../filterHelpers\";\nimport { getAnnouncement } from \"./getAnnouncement\";\nimport { useComboBox } from \"./useComboBox\";\nimport { isDesktop, Window, WindowProps } from \"../../window\";\nimport {\n  InputLegacy as Input,\n  InputLegacyProps as InputProps,\n} from \"../../input-legacy\";\n\nexport type BaseComboBoxProps<\n  Item,\n  Variant extends ListSelectionVariant = \"default\"\n> = Omit<\n  HTMLAttributes<HTMLDivElement>,\n  \"children\" | \"onChange\" | \"onSelect\" | \"onFocus\" | \"onBlur\" | \"onClick\"\n> &\n  Pick<\n    ListProps<Item, Variant>,\n    | \"displayedItemCount\"\n    | \"itemToString\"\n    | \"listRef\"\n    | \"onChange\"\n    | \"onSelect\"\n    | \"overscanCount\"\n    | \"virtualized\"\n    | \"width\"\n  > & {\n    ListItem?: ComponentType<IndexedListItemProps<Item>>;\n    ListProps?: Partial<ListProps<Item, Variant>>;\n    WindowProps?: Partial<WindowProps>;\n    allowFreeText?: boolean;\n    disabled?: boolean;\n    getFilterRegex?: GetFilterRegex;\n    initialOpen?: boolean;\n    inputRef?: Ref<HTMLInputElement>;\n    inputValue?: string;\n    listWidth?: number | string;\n\n    rootWidth?: string | number;\n    rootRef: RefObject<HTMLElement>;\n    disabledPortal?: boolean;\n    source: ReadonlyArray<Item>;\n  };\n\nexport interface DefaultComboBoxProps<Item>\n  extends BaseComboBoxProps<Item>,\n    Pick<InputProps, \"onFocus\" | \"onBlur\"> {\n  InputProps?: InputProps;\n  initialSelectedItem?: Item;\n  selectedItem?: Item;\n  multiSelect?: false;\n  onInputFocus?: InputProps[\"onFocus\"];\n  onInputBlur?: InputProps[\"onBlur\"];\n  onInputChange?: InputProps[\"onChange\"];\n  onInputSelect?: InputProps[\"onSelect\"];\n  stringToItem?: (value?: string) => Item | null | undefined;\n}\n\nexport const DefaultComboBox = function DefaultComboBox<Item>(\n  props: DefaultComboBoxProps<Item>\n): ReactNode {\n  const {\n    ListItem,\n    WindowProps = {},\n    rootRef,\n    listRef: listRefProp,\n    inputRef: inputRefProp,\n    rootWidth,\n    listWidth,\n    ...restProps\n  } = props;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const listRef = useRef(null);\n\n  const setInputRef = useForkRef(inputRef, inputRefProp);\n  // Use callback ref as listRef could be null when it's closed\n  const setListRef = useForkRef(listRef, listRefProp);\n\n  const { announce } = useAriaAnnouncer({ debounce: 1000 });\n\n  const {\n    inputRef: setHookInputRef,\n    listContext,\n    inputProps,\n    listProps,\n  } = useComboBox(restProps);\n\n  const { allowAnnouncement, disabled, value, ...restInputProps } = inputProps;\n  const { isListOpen, itemCount, itemToString, source, ...restListProps } =\n    listProps;\n\n  const firstItem = null;\n\n  const allowAnnouncementRef = useRef(allowAnnouncement);\n  useEffect(() => {\n    allowAnnouncementRef.current = allowAnnouncement;\n  }, [allowAnnouncement]);\n\n  useEffect(() => {\n    if (allowAnnouncementRef.current && value && firstItem) {\n      announce(getAnnouncement(itemCount, firstItem));\n    }\n  }, [firstItem, value, itemCount, announce]);\n\n  const [maxListHeight, setMaxListHeight] = useState<number | undefined>(\n    undefined\n  );\n  const middleware = isDesktop\n    ? []\n    : [\n        flip({\n          fallbackPlacements: [\"bottom-start\", \"top-start\"],\n        }),\n        shift({ limiter: limitShift() }),\n        size({\n          apply({ availableHeight }) {\n            setMaxListHeight(availableHeight);\n          },\n        }),\n      ];\n  const { reference, floating, x, y, strategy } = useFloatingUI({\n    placement: \"bottom-start\",\n    middleware,\n  });\n\n  useEffect(() => {\n    if (rootRef.current) {\n      reference(rootRef.current);\n    }\n  }, [rootRef, reference]);\n\n  return (\n    <>\n      <Input\n        disabled={disabled}\n        ref={useForkRef(setInputRef, setHookInputRef)}\n        value={value}\n        {...restInputProps}\n      />\n      {rootRef.current && isListOpen && (\n        <Portal>\n          <Window\n            style={{\n              top: y ?? 0,\n              left: x ?? 0,\n              position: strategy,\n              maxHeight: maxListHeight ?? \"\",\n            }}\n            {...WindowProps}\n            ref={floating}\n          >\n            <ListStateContext.Provider value={listContext}>\n              <ListBase\n                {...{\n                  ListItem,\n                  disabled,\n                  itemCount,\n                  itemToString,\n                  width: listWidth || rootWidth,\n                  source,\n                  ...restListProps,\n                  listRef: setListRef,\n                }}\n                maxHeight={maxListHeight || listProps.maxHeight}\n              />\n            </ListStateContext.Provider>\n          </Window>\n        </Portal>\n      )}\n    </>\n  );\n};\n"],"names":["DefaultComboBox","WindowProps","useRef","useForkRef","useAriaAnnouncer","useComboBox","useEffect","getAnnouncement","useState","isDesktop","flip","shift","limitShift","size","useFloatingUI","jsxs","Fragment","jsx","Input","Portal","Window","ListStateContext","ListBase"],"mappings":"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"}