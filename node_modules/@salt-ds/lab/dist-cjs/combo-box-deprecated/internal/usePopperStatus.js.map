{"version":3,"file":"usePopperStatus.js","sources":["../src/combo-box-deprecated/internal/usePopperStatus.ts"],"sourcesContent":["import { useState, SyntheticEvent, KeyboardEvent } from \"react\";\n\n// Alt+Arrow Up/Down toggles list open/close\nexport const isToggleList = (event: KeyboardEvent) =>\n  event.altKey && [\"ArrowUp\", \"ArrowDown\"].indexOf(event.key) !== -1;\n\nexport const usePopperStatus = (props: {\n  initialOpen?: boolean;\n  isMultiSelect?: boolean;\n  onClose?: (event: SyntheticEvent) => void;\n}) => {\n  const { initialOpen, isMultiSelect = false, onClose } = props;\n  const [isOpen, setOpen] = useState(initialOpen === true);\n\n  const handleCloseList = (event: SyntheticEvent) => {\n    setOpen(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  const handleInputKeyDown = (event: KeyboardEvent) => {\n    if (isToggleList(event)) {\n      setOpen((open) => !open);\n    } else if (\n      !isOpen &&\n      [\"Alt\", \"Tab\", \"Escape\", \"Control\", \"Shift\", \"Meta\"].indexOf(\n        event.key\n      ) === -1\n    ) {\n      setOpen(true);\n    } else if (isOpen && event.key === \"Escape\") {\n      handleCloseList(event);\n    } else if (isOpen && !isMultiSelect && event.key === \"Enter\") {\n      handleCloseList(event);\n    }\n  };\n\n  const notifyPopper = (event: SyntheticEvent) => {\n    switch (event.type) {\n      case \"focus\":\n        setOpen(true);\n        break;\n      case \"blur\":\n        handleCloseList(event);\n        break;\n      case \"keydown\":\n        handleInputKeyDown(event as KeyboardEvent);\n        break;\n      case \"click\":\n        handleCloseList(event);\n        break;\n      case \"keyup\":\n        // ignore. Tokenized input invokes keyDown listener in response to keyup events\n        break;\n      default:\n        throw Error(`usePopper: unexpected event type ${event.type}`);\n    }\n  };\n\n  return {\n    isOpen,\n    notifyPopper,\n  };\n};\n"],"names":["useState"],"mappings":";;;;;;AAGO,MAAM,YAAe,GAAA,CAAC,KAC3B,KAAA,KAAA,CAAM,MAAU,IAAA,CAAC,SAAW,EAAA,WAAW,CAAE,CAAA,OAAA,CAAQ,KAAM,CAAA,GAAG,CAAM,KAAA,CAAA,EAAA;AAErD,MAAA,eAAA,GAAkB,CAAC,KAI1B,KAAA;AACJ,EAAA,MAAM,EAAE,WAAA,EAAa,aAAgB,GAAA,KAAA,EAAO,SAAY,GAAA,KAAA,CAAA;AACxD,EAAA,MAAM,CAAC,MAAQ,EAAA,OAAO,CAAI,GAAAA,cAAA,CAAS,gBAAgB,IAAI,CAAA,CAAA;AAEvD,EAAM,MAAA,eAAA,GAAkB,CAAC,KAA0B,KAAA;AACjD,IAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AAEb,IAAA,IAAI,OAAS,EAAA;AACX,MAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AAAA,KACf;AAAA,GACF,CAAA;AAEA,EAAM,MAAA,kBAAA,GAAqB,CAAC,KAAyB,KAAA;AACnD,IAAI,IAAA,YAAA,CAAa,KAAK,CAAG,EAAA;AACvB,MAAQ,OAAA,CAAA,CAAC,IAAS,KAAA,CAAC,IAAI,CAAA,CAAA;AAAA,KACzB,MAAA,IACE,CAAC,MAAA,IACD,CAAC,KAAA,EAAO,OAAO,QAAU,EAAA,SAAA,EAAW,OAAS,EAAA,MAAM,CAAE,CAAA,OAAA;AAAA,MACnD,KAAM,CAAA,GAAA;AAAA,UACF,CACN,CAAA,EAAA;AACA,MAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AAAA,KACH,MAAA,IAAA,MAAA,IAAU,KAAM,CAAA,GAAA,KAAQ,QAAU,EAAA;AAC3C,MAAA,eAAA,CAAgB,KAAK,CAAA,CAAA;AAAA,eACZ,MAAU,IAAA,CAAC,aAAiB,IAAA,KAAA,CAAM,QAAQ,OAAS,EAAA;AAC5D,MAAA,eAAA,CAAgB,KAAK,CAAA,CAAA;AAAA,KACvB;AAAA,GACF,CAAA;AAEA,EAAM,MAAA,YAAA,GAAe,CAAC,KAA0B,KAAA;AAC9C,IAAA,QAAQ,KAAM,CAAA,IAAA;AAAA,MACP,KAAA,OAAA;AACH,QAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AACZ,QAAA,MAAA;AAAA,MACG,KAAA,MAAA;AACH,QAAA,eAAA,CAAgB,KAAK,CAAA,CAAA;AACrB,QAAA,MAAA;AAAA,MACG,KAAA,SAAA;AACH,QAAA,kBAAA,CAAmB,KAAsB,CAAA,CAAA;AACzC,QAAA,MAAA;AAAA,MACG,KAAA,OAAA;AACH,QAAA,eAAA,CAAgB,KAAK,CAAA,CAAA;AACrB,QAAA,MAAA;AAAA,MACG,KAAA,OAAA;AAEH,QAAA,MAAA;AAAA,MAAA;AAEA,QAAM,MAAA,KAAA,CAAM,CAAoC,iCAAA,EAAA,KAAA,CAAM,IAAM,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAElE,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,MAAA;AAAA,IACA,YAAA;AAAA,GACF,CAAA;AACF;;;;;"}