{"version":3,"file":"useMultiSelectComboBox.js","sources":["../src/combo-box-deprecated/internal/useMultiSelectComboBox.ts"],"sourcesContent":["import {\n  useControlled,\n  useForkRef,\n  useId,\n  useIsFocusVisible,\n  useIsomorphicLayoutEffect,\n  usePrevious,\n} from \"@salt-ds/core\";\nimport {\n  ChangeEvent,\n  FocusEvent,\n  KeyboardEvent,\n  KeyboardEventHandler,\n  MouseEvent,\n  RefObject,\n  SyntheticEvent,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useList } from \"../../list-deprecated\";\nimport { ExpandButtonProps, useTokenizedInput } from \"../../tokenized-input\";\nimport { defaultItemToString } from \"../../tokenized-input/internal/defaultItemToString\";\n\nimport { getDefaultFilter, getDefaultFilterRegex } from \"../filterHelpers\";\nimport { MultiSelectComboBoxProps } from \"./MultiSelectComboBox\";\nimport { isToggleList, usePopperStatus } from \"./usePopperStatus\";\n\nconst REQUIRE_PREV_HIGHLIGHT = [\"ArrowUp\", \"ArrowDown\", \"PageUp\", \"PageDown\"];\n\nexport type UseMultiSelectComboBoxProps<Item> = Omit<\n  MultiSelectComboBoxProps<Item>,\n  \"inputRef\" | \"listContext\" | \"inputHelpers\" | \"inputProps\" | \"listProps\"\n> & { expandButtonRef: RefObject<HTMLElement> };\n\nexport const useMultiSelectComboBox = <Item>(\n  props: Omit<UseMultiSelectComboBoxProps<Item>, \"rootRef\" | \"classes\">\n) => {\n  // Deconstruct valid props for List, everything else will be passed to `useTokenizedInput` using `restProps`\n  const {\n    allowFreeText,\n    displayedItemCount,\n    virtualized,\n    disabled,\n    expandButtonRef,\n    onBlur,\n    onFocus,\n    onChange,\n    onSelect,\n    onInputChange,\n    onInputFocus,\n    onInputBlur,\n    onInputSelect,\n    id: idProp,\n    source: sourceProp,\n    selectedItem: selectedItemProp,\n    inputValue: inputValueProp,\n    initialOpen,\n    initialSelectedItem: initialSelectedItems,\n    \"aria-labelledby\": ariaLabelledBy,\n    getFilterRegex = getDefaultFilterRegex,\n    itemToString = defaultItemToString,\n    stringToItem: stringToItemProp = (_: any, value: string) => value.trim(),\n    InputProps = {\n      onBlur,\n      onFocus,\n      onInputBlur,\n      onInputFocus,\n      onInputChange,\n      onInputSelect,\n    },\n    ListProps = {},\n    ...restProps\n  } = props;\n\n  const id = useId(idProp);\n  const inputId = `${id}-input`;\n  const listId = `${id}-list`;\n\n  const [inputValue, setInputValue] = useControlled({\n    controlled: inputValueProp,\n    default: \"\",\n    name: \"MultiSelectComboBox\",\n    state: \"inputValue\",\n  });\n\n  const { isOpen: isListOpen, notifyPopper } = usePopperStatus({\n    initialOpen,\n    isMultiSelect: true,\n  });\n\n  const [selectionChanged, setSelectionChanged] = useState(false);\n  const inputBlurTimeout = useRef<number>(null);\n\n  const [allowAnnouncement, setAllowAnnouncement] = useState(false);\n\n  const labels = useMemo(\n    () => sourceProp.map(itemToString),\n    [sourceProp, itemToString]\n  );\n\n  const source = useMemo(() => {\n    if (inputValue && inputValue.trim().length) {\n      const itemFilter = getDefaultFilter(inputValue, getFilterRegex);\n      return sourceProp.filter((item: Item) => itemFilter(itemToString(item)));\n    }\n    return sourceProp;\n  }, [inputValue, sourceProp, getFilterRegex, itemToString]);\n\n  const itemTextHighlightPattern = useMemo(\n    () =>\n      inputValue && inputValue.trim().length\n        ? getFilterRegex(inputValue)\n        : undefined,\n    [inputValue, getFilterRegex]\n  );\n\n  const {\n    focusedRef,\n    listProps,\n    state: listState,\n    helpers: listHelpers,\n  } = useList<Item, \"multiple\">({\n    ...ListProps,\n    source,\n    disabled,\n    virtualized,\n    itemToString,\n    displayedItemCount,\n    onChange,\n    onSelect,\n    id: listId,\n    disableFocus: true,\n    disableMouseDown: true,\n    selectionVariant: \"multiple\",\n    initialSelectedItem: initialSelectedItems,\n    selectedItem: selectedItemProp,\n    \"aria-labelledby\": ariaLabelledBy,\n  });\n\n  const { \"aria-activedescendant\": ariaActiveDescendant, ...restListProps } =\n    listProps;\n  const { selectedItem } = listState;\n  const [quickSelection, setQuickSelection] = useState(false);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef,\n  } = useIsFocusVisible();\n  const selectedItems = selectedItem as Item[];\n  const {\n    setSelectedItem: setSelectedItems,\n    setHighlightedIndex: setHighlightedListIndex,\n  } = listHelpers;\n\n  const handleInputFocus = (event: FocusEvent<HTMLInputElement>) => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current) {\n      listHelpers.setFocusVisible(true);\n    }\n\n    if (InputProps.onInputFocus) {\n      InputProps.onInputFocus(event);\n    }\n\n    notifyPopper(event);\n  };\n\n  const handleInputBlur = (\n    event: FocusEvent<HTMLDivElement | HTMLInputElement>\n  ) => {\n    handleBlurVisible();\n    setAllowAnnouncement(false);\n    setInputValue(\"\");\n\n    if (restListProps.onBlur) {\n      restListProps.onBlur(event);\n    }\n\n    if (InputProps.onInputBlur) {\n      InputProps.onInputBlur(event as FocusEvent<HTMLInputElement>);\n    }\n\n    notifyPopper(event);\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n\n    setQuickSelection(event.target.value.length > 0 && !allowFreeText);\n\n    if (InputProps.onInputChange) {\n      InputProps.onInputChange(event);\n    }\n  };\n\n  const handleItemsChange = (newItems: Item[] | undefined) => {\n    const uniqueItems = Array.from(new Set(newItems));\n    setSelectedItems(uniqueItems);\n    onChange && onChange(null as unknown as ChangeEvent, uniqueItems);\n  };\n\n  const handleInputSelect = (event: SyntheticEvent<HTMLInputElement>) => {\n    event.persist();\n    setSelectionChanged(true);\n\n    if (InputProps.onInputSelect) {\n      InputProps.onInputSelect(event);\n    }\n  };\n\n  const handleClear = () => {\n    setSelectedItems([]);\n  };\n\n  const stringToItem = (selected: Item[], value: string): Item | null => {\n    const trimmed = value.trim();\n    const item = stringToItemProp(selected, trimmed);\n    const isSelected = selected.map(itemToString).indexOf(trimmed) !== -1;\n\n    // Either allow free text item OR the item has to be in the source list\n    return !isSelected && (allowFreeText || labels.indexOf(trimmed) !== -1)\n      ? (item as Item)\n      : null;\n  };\n\n  // Reuse selectItem from list state for a controlled version of tokenized input\n  const {\n    inputRef,\n    inputProps,\n    state: inputState,\n    helpers: inputHelpers,\n  } = useTokenizedInput({\n    ...restProps,\n    ...InputProps,\n    disabled,\n    itemToString,\n    stringToItem,\n    selectedItems,\n    initialSelectedItems,\n    onInputFocus: handleInputFocus,\n    onInputBlur: handleInputBlur,\n    onInputChange: handleInputChange,\n    onInputSelect: handleInputSelect,\n    onChange: handleItemsChange,\n    onClear: handleClear,\n    onKeyDown: InputProps.onKeyDown as KeyboardEventHandler<\n      HTMLInputElement | HTMLButtonElement\n    >,\n  });\n\n  const handleFocusVisibleRef = useForkRef(focusVisibleRef, focusedRef);\n  const handleInputRef = useForkRef(inputRef, handleFocusVisibleRef);\n\n  const { setHighlightedIndex: setHighlightedPillIndex } = inputHelpers;\n\n  // Reset highlight when list closes\n  useEffect(() => {\n    if (!isListOpen) {\n      setHighlightedListIndex(undefined);\n      setQuickSelection(false);\n    }\n  }, [isListOpen, setHighlightedListIndex, setQuickSelection]);\n\n  const previousSelectedItems = usePrevious(selectedItems);\n\n  // Reset list highlight when selectItems change\n  useIsomorphicLayoutEffect(() => {\n    if (\n      selectedItems.some(\n        (item) => !(previousSelectedItems || []).includes(item)\n      )\n    ) {\n      setInputValue(\"\");\n    }\n\n    if (!selectedItems.length) {\n      setHighlightedListIndex(undefined);\n    }\n  }, [\n    selectedItems,\n    previousSelectedItems,\n    setInputValue,\n    setHighlightedListIndex,\n  ]);\n\n  // Remove highlight from list if a pill is highlighted\n  useEffect(() => {\n    if (\n      inputState.highlightedIndex != null &&\n      inputState.highlightedIndex >= 0\n    ) {\n      setHighlightedListIndex(undefined);\n      setQuickSelection(false);\n    }\n  }, [inputState.highlightedIndex, setHighlightedListIndex, setQuickSelection]);\n\n  const highlightedIndex = listState && listState.highlightedIndex;\n\n  // Remove highlight from pills if a list item is highlighted\n  useEffect(() => {\n    if (highlightedIndex != null && highlightedIndex >= 0) {\n      setHighlightedPillIndex(undefined);\n    }\n  }, [highlightedIndex, setHighlightedPillIndex]);\n\n  // Keep highlighted index in sync with the filtered source\n  useEffect(() => {\n    setHighlightedListIndex(undefined);\n  }, [source, setHighlightedListIndex]);\n\n  const handleFirstItemSelection = (event: KeyboardEvent | ChangeEvent) => {\n    if (\n      !allowFreeText &&\n      (event as KeyboardEvent).key === \"Enter\" &&\n      quickSelection\n    ) {\n      const newItem = source[0];\n      const newSelectedItems =\n        selectedItems.indexOf(newItem) === -1\n          ? selectedItems.concat(source.slice(0, 1))\n          : selectedItems.filter((item) => item !== newItem);\n      setSelectedItems(newSelectedItems);\n      onSelect && onSelect(event, newItem);\n      onChange && onChange(event as ChangeEvent, newSelectedItems);\n    }\n  };\n\n  const handleListOpenKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\n    if (\"Escape\" === event.key && inputProps.expanded) {\n      setTimeout(() => {\n        if (expandButtonRef.current) {\n          expandButtonRef.current.focus();\n        }\n      }, 250);\n    }\n\n    handleFirstItemSelection(event);\n\n    if (\n      \"Home\" !== event.key &&\n      \"End\" !== event.key &&\n      !(\" \" === event.key && !event.ctrlKey)\n    ) {\n      if (restListProps.onKeyDown) {\n        restListProps.onKeyDown(event);\n      }\n      setSelectionChanged(false);\n    }\n  };\n\n  const handleInputKeyDown = (\n    event: KeyboardEvent<HTMLInputElement | HTMLButtonElement | HTMLDivElement>\n  ) => {\n    if (\"Escape\" === event.key) {\n      setInputValue(\"\");\n      setHighlightedListIndex(undefined);\n    }\n\n    // Space key clashes with the remove action of TokenizedInput\n    // For combo box, pressing a space key should just add a space\n    if (\" \" === event.key && !event.ctrlKey) {\n      setHighlightedPillIndex(undefined);\n    } else {\n      if (inputProps.onKeyDown) {\n        inputProps.onKeyDown(\n          event as KeyboardEvent<HTMLInputElement | HTMLButtonElement>\n        );\n      }\n    }\n\n    if (\n      !isToggleList(event) &&\n      listState.highlightedIndex == null &&\n      REQUIRE_PREV_HIGHLIGHT.indexOf(event.key) !== -1\n    ) {\n      event.preventDefault();\n      // Initialize list highlight if there's no previous value\n      setHighlightedListIndex(\n        Math.min(quickSelection ? 1 : 0, source.length - 1)\n      );\n      setQuickSelection(false);\n      setSelectionChanged(false);\n    } else if (isListOpen) {\n      handleListOpenKeyDown(event as KeyboardEvent<HTMLDivElement>);\n    }\n\n    // Don't announce for deleting values\n    setAllowAnnouncement(\"Backspace\" !== event.key);\n    notifyPopper(event);\n  };\n\n  const handleListClick = (event: MouseEvent<HTMLDivElement>) => {\n    clearTimeout(\n      inputBlurTimeout.current == null ? undefined : inputBlurTimeout.current\n    );\n    const inputEl = inputRef && (inputRef as RefObject<HTMLElement>).current;\n    if (inputEl) {\n      inputEl.focus();\n    }\n\n    if (restListProps.onClick) {\n      restListProps.onClick(event);\n    }\n  };\n\n  const mergedInputProps = {\n    ...inputProps.InputProps,\n    inputProps: {\n      ...(inputProps.InputProps || {}).inputProps,\n      role: \"textbox\",\n      \"aria-roledescription\": \"MultiSelect Combobox\",\n    },\n  };\n\n  if (ariaActiveDescendant && !selectionChanged) {\n    // either null or undefined will prevent tokenized-input from\n    // setting active-descendant based on pill selection.\n    mergedInputProps.inputProps[\"aria-activedescendant\"] = ariaActiveDescendant;\n  }\n\n  const expandButtonProps = {\n    accessibleText: undefined,\n    role: \"button\",\n    \"aria-roledescription\": \"Expand combobox button\",\n    \"aria-labelledby\": [ariaLabelledBy, `${inputId}-input`]\n      .filter(Boolean)\n      .join(\" \"),\n  } as ExpandButtonProps;\n\n  return {\n    inputHelpers,\n    inputRef: handleInputRef,\n    listContext: {\n      state: listState,\n      helpers: listHelpers,\n    },\n    inputProps: {\n      ...inputProps,\n      selectedItems,\n      allowAnnouncement,\n      id: inputId,\n      value: inputValue,\n      ExpandButtonProps: expandButtonProps,\n      InputProps: mergedInputProps,\n      onKeyDown: handleInputKeyDown,\n    },\n    listProps: {\n      ...restListProps,\n      source,\n      itemToString,\n      itemTextHighlightPattern,\n      onClick: handleListClick,\n      isListOpen: isListOpen && Boolean(source.length),\n    },\n  };\n};\n"],"names":["getDefaultFilterRegex","defaultItemToString","useId","useControlled","usePopperStatus","useState","useRef","useMemo","getDefaultFilter","useList","useIsFocusVisible","useTokenizedInput","useForkRef","useEffect","usePrevious","useIsomorphicLayoutEffect","isToggleList"],"mappings":";;;;;;;;;;;;;;;;;;;;AA6BA,MAAM,sBAAyB,GAAA,CAAC,SAAW,EAAA,WAAA,EAAa,UAAU,UAAU,CAAA,CAAA;AAO/D,MAAA,sBAAA,GAAyB,CACpC,KACG,KAAA;AAEH,EAAM,MAAA;AAAA,IACJ,aAAA;AAAA,IACA,kBAAA;AAAA,IACA,WAAA;AAAA,IACA,QAAA;AAAA,IACA,eAAA;AAAA,IACA,MAAA;AAAA,IACA,OAAA;AAAA,IACA,QAAA;AAAA,IACA,QAAA;AAAA,IACA,aAAA;AAAA,IACA,YAAA;AAAA,IACA,WAAA;AAAA,IACA,aAAA;AAAA,IACA,EAAI,EAAA,MAAA;AAAA,IACJ,MAAQ,EAAA,UAAA;AAAA,IACR,YAAc,EAAA,gBAAA;AAAA,IACd,UAAY,EAAA,cAAA;AAAA,IACZ,WAAA;AAAA,IACA,mBAAqB,EAAA,oBAAA;AAAA,IACrB,iBAAmB,EAAA,cAAA;AAAA,IACnB,cAAiB,GAAAA,mCAAA;AAAA,IACjB,YAAe,GAAAC,uCAAA;AAAA,IACf,cAAc,gBAAmB,GAAA,CAAC,CAAQ,EAAA,KAAA,KAAkB,MAAM,IAAK,EAAA;AAAA,IACvE,UAAa,GAAA;AAAA,MACX,MAAA;AAAA,MACA,OAAA;AAAA,MACA,WAAA;AAAA,MACA,YAAA;AAAA,MACA,aAAA;AAAA,MACA,aAAA;AAAA,KACF;AAAA,IACA,YAAY,EAAC;AAAA,IACV,GAAA,SAAA;AAAA,GACD,GAAA,KAAA,CAAA;AAEJ,EAAM,MAAA,EAAA,GAAKC,WAAM,MAAM,CAAA,CAAA;AACvB,EAAA,MAAM,UAAU,CAAG,EAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACnB,EAAA,MAAM,SAAS,CAAG,EAAA,EAAA,CAAA,KAAA,CAAA,CAAA;AAElB,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAIC,kBAAc,CAAA;AAAA,IAChD,UAAY,EAAA,cAAA;AAAA,IACZ,OAAS,EAAA,EAAA;AAAA,IACT,IAAM,EAAA,qBAAA;AAAA,IACN,KAAO,EAAA,YAAA;AAAA,GACR,CAAA,CAAA;AAED,EAAA,MAAM,EAAE,MAAA,EAAQ,UAAY,EAAA,YAAA,KAAiBC,+BAAgB,CAAA;AAAA,IAC3D,WAAA;AAAA,IACA,aAAe,EAAA,IAAA;AAAA,GAChB,CAAA,CAAA;AAED,EAAA,MAAM,CAAC,gBAAA,EAAkB,mBAAmB,CAAA,GAAIC,eAAS,KAAK,CAAA,CAAA;AAC9D,EAAM,MAAA,gBAAA,GAAmBC,aAAe,IAAI,CAAA,CAAA;AAE5C,EAAA,MAAM,CAAC,iBAAA,EAAmB,oBAAoB,CAAA,GAAID,eAAS,KAAK,CAAA,CAAA;AAEhE,EAAA,MAAM,MAAS,GAAAE,aAAA;AAAA,IACb,MAAM,UAAW,CAAA,GAAA,CAAI,YAAY,CAAA;AAAA,IACjC,CAAC,YAAY,YAAY,CAAA;AAAA,GAC3B,CAAA;AAEA,EAAM,MAAA,MAAA,GAASA,cAAQ,MAAM;AAC3B,IAAA,IAAI,UAAc,IAAA,UAAA,CAAW,IAAK,EAAA,CAAE,MAAQ,EAAA;AAC1C,MAAM,MAAA,UAAA,GAAaC,8BAAiB,CAAA,UAAA,EAAY,cAAc,CAAA,CAAA;AAC9D,MAAO,OAAA,UAAA,CAAW,OAAO,CAAC,IAAA,KAAe,WAAW,YAAa,CAAA,IAAI,CAAC,CAAC,CAAA,CAAA;AAAA,KACzE;AACA,IAAO,OAAA,UAAA,CAAA;AAAA,KACN,CAAC,UAAA,EAAY,UAAY,EAAA,cAAA,EAAgB,YAAY,CAAC,CAAA,CAAA;AAEzD,EAAA,MAAM,wBAA2B,GAAAD,aAAA;AAAA,IAC/B,MACE,cAAc,UAAW,CAAA,IAAA,GAAO,MAC5B,GAAA,cAAA,CAAe,UAAU,CACzB,GAAA,KAAA,CAAA;AAAA,IACN,CAAC,YAAY,cAAc,CAAA;AAAA,GAC7B,CAAA;AAEA,EAAM,MAAA;AAAA,IACJ,UAAA;AAAA,IACA,SAAA;AAAA,IACA,KAAO,EAAA,SAAA;AAAA,IACP,OAAS,EAAA,WAAA;AAAA,MACPE,eAA0B,CAAA;AAAA,IAC5B,GAAG,SAAA;AAAA,IACH,MAAA;AAAA,IACA,QAAA;AAAA,IACA,WAAA;AAAA,IACA,YAAA;AAAA,IACA,kBAAA;AAAA,IACA,QAAA;AAAA,IACA,QAAA;AAAA,IACA,EAAI,EAAA,MAAA;AAAA,IACJ,YAAc,EAAA,IAAA;AAAA,IACd,gBAAkB,EAAA,IAAA;AAAA,IAClB,gBAAkB,EAAA,UAAA;AAAA,IAClB,mBAAqB,EAAA,oBAAA;AAAA,IACrB,YAAc,EAAA,gBAAA;AAAA,IACd,iBAAmB,EAAA,cAAA;AAAA,GACpB,CAAA,CAAA;AAED,EAAA,MAAM,EAAE,uBAAA,EAAyB,oBAAyB,EAAA,GAAA,aAAA,EACxD,GAAA,SAAA,CAAA;AACF,EAAM,MAAA,EAAE,cAAiB,GAAA,SAAA,CAAA;AACzB,EAAA,MAAM,CAAC,cAAA,EAAgB,iBAAiB,CAAA,GAAIJ,eAAS,KAAK,CAAA,CAAA;AAC1D,EAAM,MAAA;AAAA,IACJ,iBAAA;AAAA,IACA,OAAS,EAAA,kBAAA;AAAA,IACT,MAAQ,EAAA,iBAAA;AAAA,IACR,GAAK,EAAA,eAAA;AAAA,MACHK,sBAAkB,EAAA,CAAA;AACtB,EAAA,MAAM,aAAgB,GAAA,YAAA,CAAA;AACtB,EAAM,MAAA;AAAA,IACJ,eAAiB,EAAA,gBAAA;AAAA,IACjB,mBAAqB,EAAA,uBAAA;AAAA,GACnB,GAAA,WAAA,CAAA;AAEJ,EAAM,MAAA,gBAAA,GAAmB,CAAC,KAAwC,KAAA;AAChE,IAAA,kBAAA,CAAmB,KAAK,CAAA,CAAA;AACxB,IAAA,IAAI,kBAAkB,OAAS,EAAA;AAC7B,MAAA,WAAA,CAAY,gBAAgB,IAAI,CAAA,CAAA;AAAA,KAClC;AAEA,IAAA,IAAI,WAAW,YAAc,EAAA;AAC3B,MAAA,UAAA,CAAW,aAAa,KAAK,CAAA,CAAA;AAAA,KAC/B;AAEA,IAAA,YAAA,CAAa,KAAK,CAAA,CAAA;AAAA,GACpB,CAAA;AAEA,EAAM,MAAA,eAAA,GAAkB,CACtB,KACG,KAAA;AACH,IAAkB,iBAAA,EAAA,CAAA;AAClB,IAAA,oBAAA,CAAqB,KAAK,CAAA,CAAA;AAC1B,IAAA,aAAA,CAAc,EAAE,CAAA,CAAA;AAEhB,IAAA,IAAI,cAAc,MAAQ,EAAA;AACxB,MAAA,aAAA,CAAc,OAAO,KAAK,CAAA,CAAA;AAAA,KAC5B;AAEA,IAAA,IAAI,WAAW,WAAa,EAAA;AAC1B,MAAA,UAAA,CAAW,YAAY,KAAqC,CAAA,CAAA;AAAA,KAC9D;AAEA,IAAA,YAAA,CAAa,KAAK,CAAA,CAAA;AAAA,GACpB,CAAA;AAEA,EAAM,MAAA,iBAAA,GAAoB,CAAC,KAAyC,KAAA;AAClE,IAAc,aAAA,CAAA,KAAA,CAAM,OAAO,KAAK,CAAA,CAAA;AAEhC,IAAA,iBAAA,CAAkB,MAAM,MAAO,CAAA,KAAA,CAAM,MAAS,GAAA,CAAA,IAAK,CAAC,aAAa,CAAA,CAAA;AAEjE,IAAA,IAAI,WAAW,aAAe,EAAA;AAC5B,MAAA,UAAA,CAAW,cAAc,KAAK,CAAA,CAAA;AAAA,KAChC;AAAA,GACF,CAAA;AAEA,EAAM,MAAA,iBAAA,GAAoB,CAAC,QAAiC,KAAA;AAC1D,IAAA,MAAM,cAAc,KAAM,CAAA,IAAA,CAAK,IAAI,GAAA,CAAI,QAAQ,CAAC,CAAA,CAAA;AAChD,IAAA,gBAAA,CAAiB,WAAW,CAAA,CAAA;AAC5B,IAAY,QAAA,IAAA,QAAA,CAAS,MAAgC,WAAW,CAAA,CAAA;AAAA,GAClE,CAAA;AAEA,EAAM,MAAA,iBAAA,GAAoB,CAAC,KAA4C,KAAA;AACrE,IAAA,KAAA,CAAM,OAAQ,EAAA,CAAA;AACd,IAAA,mBAAA,CAAoB,IAAI,CAAA,CAAA;AAExB,IAAA,IAAI,WAAW,aAAe,EAAA;AAC5B,MAAA,UAAA,CAAW,cAAc,KAAK,CAAA,CAAA;AAAA,KAChC;AAAA,GACF,CAAA;AAEA,EAAA,MAAM,cAAc,MAAM;AACxB,IAAA,gBAAA,CAAiB,EAAE,CAAA,CAAA;AAAA,GACrB,CAAA;AAEA,EAAM,MAAA,YAAA,GAAe,CAAC,QAAA,EAAkB,KAA+B,KAAA;AACrE,IAAM,MAAA,OAAA,GAAU,MAAM,IAAK,EAAA,CAAA;AAC3B,IAAM,MAAA,IAAA,GAAO,gBAAiB,CAAA,QAAA,EAAU,OAAO,CAAA,CAAA;AAC/C,IAAA,MAAM,aAAa,QAAS,CAAA,GAAA,CAAI,YAAY,CAAE,CAAA,OAAA,CAAQ,OAAO,CAAM,KAAA,CAAA,CAAA,CAAA;AAGnE,IAAO,OAAA,CAAC,eAAe,aAAiB,IAAA,MAAA,CAAO,QAAQ,OAAO,CAAA,KAAM,MAC/D,IACD,GAAA,IAAA,CAAA;AAAA,GACN,CAAA;AAGA,EAAM,MAAA;AAAA,IACJ,QAAA;AAAA,IACA,UAAA;AAAA,IACA,KAAO,EAAA,UAAA;AAAA,IACP,OAAS,EAAA,YAAA;AAAA,MACPC,mCAAkB,CAAA;AAAA,IACpB,GAAG,SAAA;AAAA,IACH,GAAG,UAAA;AAAA,IACH,QAAA;AAAA,IACA,YAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,oBAAA;AAAA,IACA,YAAc,EAAA,gBAAA;AAAA,IACd,WAAa,EAAA,eAAA;AAAA,IACb,aAAe,EAAA,iBAAA;AAAA,IACf,aAAe,EAAA,iBAAA;AAAA,IACf,QAAU,EAAA,iBAAA;AAAA,IACV,OAAS,EAAA,WAAA;AAAA,IACT,WAAW,UAAW,CAAA,SAAA;AAAA,GAGvB,CAAA,CAAA;AAED,EAAM,MAAA,qBAAA,GAAwBC,eAAW,CAAA,eAAA,EAAiB,UAAU,CAAA,CAAA;AACpE,EAAM,MAAA,cAAA,GAAiBA,eAAW,CAAA,QAAA,EAAU,qBAAqB,CAAA,CAAA;AAEjE,EAAM,MAAA,EAAE,mBAAqB,EAAA,uBAAA,EAA4B,GAAA,YAAA,CAAA;AAGzD,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,UAAY,EAAA;AACf,MAAA,uBAAA,CAAwB,KAAS,CAAA,CAAA,CAAA;AACjC,MAAA,iBAAA,CAAkB,KAAK,CAAA,CAAA;AAAA,KACzB;AAAA,GACC,EAAA,CAAC,UAAY,EAAA,uBAAA,EAAyB,iBAAiB,CAAC,CAAA,CAAA;AAE3D,EAAM,MAAA,qBAAA,GAAwBC,iBAAY,aAAa,CAAA,CAAA;AAGvD,EAAAC,8BAAA,CAA0B,MAAM;AAC9B,IAAA,IACE,aAAc,CAAA,IAAA;AAAA,MACZ,CAAC,IAAS,KAAA,CAAA,CAAE,yBAAyB,EAAC,EAAG,SAAS,IAAI,CAAA;AAAA,KAExD,EAAA;AACA,MAAA,aAAA,CAAc,EAAE,CAAA,CAAA;AAAA,KAClB;AAEA,IAAI,IAAA,CAAC,cAAc,MAAQ,EAAA;AACzB,MAAA,uBAAA,CAAwB,KAAS,CAAA,CAAA,CAAA;AAAA,KACnC;AAAA,GACC,EAAA;AAAA,IACD,aAAA;AAAA,IACA,qBAAA;AAAA,IACA,aAAA;AAAA,IACA,uBAAA;AAAA,GACD,CAAA,CAAA;AAGD,EAAAF,eAAA,CAAU,MAAM;AACd,IAAA,IACE,UAAW,CAAA,gBAAA,IAAoB,IAC/B,IAAA,UAAA,CAAW,oBAAoB,CAC/B,EAAA;AACA,MAAA,uBAAA,CAAwB,KAAS,CAAA,CAAA,CAAA;AACjC,MAAA,iBAAA,CAAkB,KAAK,CAAA,CAAA;AAAA,KACzB;AAAA,KACC,CAAC,UAAA,CAAW,gBAAkB,EAAA,uBAAA,EAAyB,iBAAiB,CAAC,CAAA,CAAA;AAE5E,EAAM,MAAA,gBAAA,GAAmB,aAAa,SAAU,CAAA,gBAAA,CAAA;AAGhD,EAAAA,eAAA,CAAU,MAAM;AACd,IAAI,IAAA,gBAAA,IAAoB,IAAQ,IAAA,gBAAA,IAAoB,CAAG,EAAA;AACrD,MAAA,uBAAA,CAAwB,KAAS,CAAA,CAAA,CAAA;AAAA,KACnC;AAAA,GACC,EAAA,CAAC,gBAAkB,EAAA,uBAAuB,CAAC,CAAA,CAAA;AAG9C,EAAAA,eAAA,CAAU,MAAM;AACd,IAAA,uBAAA,CAAwB,KAAS,CAAA,CAAA,CAAA;AAAA,GAChC,EAAA,CAAC,MAAQ,EAAA,uBAAuB,CAAC,CAAA,CAAA;AAEpC,EAAM,MAAA,wBAAA,GAA2B,CAAC,KAAuC,KAAA;AACvE,IAAA,IACE,CAAC,aAAA,IACA,KAAwB,CAAA,GAAA,KAAQ,WACjC,cACA,EAAA;AACA,MAAA,MAAM,UAAU,MAAO,CAAA,CAAA,CAAA,CAAA;AACvB,MAAA,MAAM,mBACJ,aAAc,CAAA,OAAA,CAAQ,OAAO,CAAM,KAAA,CAAA,CAAA,GAC/B,cAAc,MAAO,CAAA,MAAA,CAAO,MAAM,CAAG,EAAA,CAAC,CAAC,CACvC,GAAA,aAAA,CAAc,OAAO,CAAC,IAAA,KAAS,SAAS,OAAO,CAAA,CAAA;AACrD,MAAA,gBAAA,CAAiB,gBAAgB,CAAA,CAAA;AACjC,MAAY,QAAA,IAAA,QAAA,CAAS,OAAO,OAAO,CAAA,CAAA;AACnC,MAAY,QAAA,IAAA,QAAA,CAAS,OAAsB,gBAAgB,CAAA,CAAA;AAAA,KAC7D;AAAA,GACF,CAAA;AAEA,EAAM,MAAA,qBAAA,GAAwB,CAAC,KAAyC,KAAA;AACtE,IAAA,IAAI,QAAa,KAAA,KAAA,CAAM,GAAO,IAAA,UAAA,CAAW,QAAU,EAAA;AACjD,MAAA,UAAA,CAAW,MAAM;AACf,QAAA,IAAI,gBAAgB,OAAS,EAAA;AAC3B,UAAA,eAAA,CAAgB,QAAQ,KAAM,EAAA,CAAA;AAAA,SAChC;AAAA,SACC,GAAG,CAAA,CAAA;AAAA,KACR;AAEA,IAAA,wBAAA,CAAyB,KAAK,CAAA,CAAA;AAE9B,IAAA,IACE,MAAW,KAAA,KAAA,CAAM,GACjB,IAAA,KAAA,KAAU,KAAM,CAAA,GAAA,IAChB,EAAE,GAAA,KAAQ,KAAM,CAAA,GAAA,IAAO,CAAC,KAAA,CAAM,OAC9B,CAAA,EAAA;AACA,MAAA,IAAI,cAAc,SAAW,EAAA;AAC3B,QAAA,aAAA,CAAc,UAAU,KAAK,CAAA,CAAA;AAAA,OAC/B;AACA,MAAA,mBAAA,CAAoB,KAAK,CAAA,CAAA;AAAA,KAC3B;AAAA,GACF,CAAA;AAEA,EAAM,MAAA,kBAAA,GAAqB,CACzB,KACG,KAAA;AACH,IAAI,IAAA,QAAA,KAAa,MAAM,GAAK,EAAA;AAC1B,MAAA,aAAA,CAAc,EAAE,CAAA,CAAA;AAChB,MAAA,uBAAA,CAAwB,KAAS,CAAA,CAAA,CAAA;AAAA,KACnC;AAIA,IAAA,IAAI,GAAQ,KAAA,KAAA,CAAM,GAAO,IAAA,CAAC,MAAM,OAAS,EAAA;AACvC,MAAA,uBAAA,CAAwB,KAAS,CAAA,CAAA,CAAA;AAAA,KAC5B,MAAA;AACL,MAAA,IAAI,WAAW,SAAW,EAAA;AACxB,QAAW,UAAA,CAAA,SAAA;AAAA,UACT,KAAA;AAAA,SACF,CAAA;AAAA,OACF;AAAA,KACF;AAEA,IAAA,IACE,CAACG,4BAAA,CAAa,KAAK,CAAA,IACnB,SAAU,CAAA,gBAAA,IAAoB,IAC9B,IAAA,sBAAA,CAAuB,OAAQ,CAAA,KAAA,CAAM,GAAG,CAAA,KAAM,CAC9C,CAAA,EAAA;AACA,MAAA,KAAA,CAAM,cAAe,EAAA,CAAA;AAErB,MAAA,uBAAA;AAAA,QACE,KAAK,GAAI,CAAA,cAAA,GAAiB,IAAI,CAAG,EAAA,MAAA,CAAO,SAAS,CAAC,CAAA;AAAA,OACpD,CAAA;AACA,MAAA,iBAAA,CAAkB,KAAK,CAAA,CAAA;AACvB,MAAA,mBAAA,CAAoB,KAAK,CAAA,CAAA;AAAA,eAChB,UAAY,EAAA;AACrB,MAAA,qBAAA,CAAsB,KAAsC,CAAA,CAAA;AAAA,KAC9D;AAGA,IAAqB,oBAAA,CAAA,WAAA,KAAgB,MAAM,GAAG,CAAA,CAAA;AAC9C,IAAA,YAAA,CAAa,KAAK,CAAA,CAAA;AAAA,GACpB,CAAA;AAEA,EAAM,MAAA,eAAA,GAAkB,CAAC,KAAsC,KAAA;AAC7D,IAAA,YAAA;AAAA,MACE,gBAAiB,CAAA,OAAA,IAAW,IAAO,GAAA,KAAA,CAAA,GAAY,gBAAiB,CAAA,OAAA;AAAA,KAClE,CAAA;AACA,IAAM,MAAA,OAAA,GAAU,YAAa,QAAoC,CAAA,OAAA,CAAA;AACjE,IAAA,IAAI,OAAS,EAAA;AACX,MAAA,OAAA,CAAQ,KAAM,EAAA,CAAA;AAAA,KAChB;AAEA,IAAA,IAAI,cAAc,OAAS,EAAA;AACzB,MAAA,aAAA,CAAc,QAAQ,KAAK,CAAA,CAAA;AAAA,KAC7B;AAAA,GACF,CAAA;AAEA,EAAA,MAAM,gBAAmB,GAAA;AAAA,IACvB,GAAG,UAAW,CAAA,UAAA;AAAA,IACd,UAAY,EAAA;AAAA,MACV,GAAI,CAAA,UAAA,CAAW,UAAc,IAAA,EAAI,EAAA,UAAA;AAAA,MACjC,IAAM,EAAA,SAAA;AAAA,MACN,sBAAwB,EAAA,sBAAA;AAAA,KAC1B;AAAA,GACF,CAAA;AAEA,EAAI,IAAA,oBAAA,IAAwB,CAAC,gBAAkB,EAAA;AAG7C,IAAA,gBAAA,CAAiB,WAAW,uBAA2B,CAAA,GAAA,oBAAA,CAAA;AAAA,GACzD;AAEA,EAAA,MAAM,iBAAoB,GAAA;AAAA,IACxB,cAAgB,EAAA,KAAA,CAAA;AAAA,IAChB,IAAM,EAAA,QAAA;AAAA,IACN,sBAAwB,EAAA,wBAAA;AAAA,IACxB,iBAAA,EAAmB,CAAC,cAAA,EAAgB,CAAG,EAAA,OAAA,CAAA,MAAA,CAAe,EACnD,MAAO,CAAA,OAAO,CACd,CAAA,IAAA,CAAK,GAAG,CAAA;AAAA,GACb,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,YAAA;AAAA,IACA,QAAU,EAAA,cAAA;AAAA,IACV,WAAa,EAAA;AAAA,MACX,KAAO,EAAA,SAAA;AAAA,MACP,OAAS,EAAA,WAAA;AAAA,KACX;AAAA,IACA,UAAY,EAAA;AAAA,MACV,GAAG,UAAA;AAAA,MACH,aAAA;AAAA,MACA,iBAAA;AAAA,MACA,EAAI,EAAA,OAAA;AAAA,MACJ,KAAO,EAAA,UAAA;AAAA,MACP,iBAAmB,EAAA,iBAAA;AAAA,MACnB,UAAY,EAAA,gBAAA;AAAA,MACZ,SAAW,EAAA,kBAAA;AAAA,KACb;AAAA,IACA,SAAW,EAAA;AAAA,MACT,GAAG,aAAA;AAAA,MACH,MAAA;AAAA,MACA,YAAA;AAAA,MACA,wBAAA;AAAA,MACA,OAAS,EAAA,eAAA;AAAA,MACT,UAAY,EAAA,UAAA,IAAc,OAAQ,CAAA,MAAA,CAAO,MAAM,CAAA;AAAA,KACjD;AAAA,GACF,CAAA;AACF;;;;"}