{"version":3,"file":"useComboBox.js","sources":["../src/combo-box-deprecated/internal/useComboBox.ts"],"sourcesContent":["import {\n  useControlled,\n  useForkRef,\n  useId,\n  useIsFocusVisible,\n} from \"@salt-ds/core\";\nimport {\n  ChangeEvent,\n  FocusEvent,\n  KeyboardEvent,\n  MouseEvent,\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useList } from \"../../list-deprecated\";\nimport { defaultItemToString } from \"../../tokenized-input/internal/defaultItemToString\";\nimport { getDefaultFilter, getDefaultFilterRegex } from \"../filterHelpers\";\nimport { DefaultComboBoxProps } from \"./DefaultComboBox\";\nimport { isToggleList, usePopperStatus } from \"./usePopperStatus\";\nimport { InputLegacyProps as InputProps } from \"../../input-legacy\";\n\nexport type UseComboBoxProps<Item> = Omit<\n  DefaultComboBoxProps<Item>,\n  | \"ListItem\"\n  | \"Tooltip\"\n  | \"tooltipEnterDelay\"\n  | \"tooltipLeaveDelay\"\n  | \"tooltipPlacement\"\n  | \"rootRef\"\n  | \"listRef\"\n  | \"inputRef\"\n  | \"rootWidth\"\n  | \"listWidth\"\n>;\n\nexport const useComboBox = <Item>(props: UseComboBoxProps<Item>) => {\n  // Deconstruct valid props for List, everything else will be passed to input using `restProps`\n  const {\n    initialOpen,\n    initialSelectedItem,\n    allowFreeText,\n    displayedItemCount,\n    virtualized,\n    disabled,\n    onBlur,\n    onFocus,\n    onChange,\n    onSelect,\n    onInputChange,\n    onInputFocus,\n    onInputBlur,\n    onInputSelect,\n    id: idProp,\n    source: sourceProp = [],\n    selectedItem: selectedItemProp,\n    inputValue: inputValueProp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    getFilterRegex = getDefaultFilterRegex,\n    itemToString = defaultItemToString,\n    stringToItem: stringToItemProp = (value) => (value ? value.trim() : value),\n    InputProps: inputProps = {\n      onBlur: onBlur || onInputBlur,\n      onFocus: onFocus || onInputFocus,\n      onChange: onInputChange,\n      onSelect: onInputSelect,\n    },\n    ListProps = {},\n    ...restProps\n  } = props;\n\n  const id = useId(idProp);\n  const inputId = `${id}-input`;\n  const listId = `${id}-list`;\n\n  const [inputValue, setInputValue] = useControlled({\n    controlled: inputValueProp,\n    default: \"\",\n    name: \"ComboBox\",\n    state: \"inputValue\",\n  });\n\n  const [selectionChanged, setSelectionChanged] = useState(false);\n  const inputRef = useRef<HTMLElement>(null);\n\n  const [allowAnnouncement, setAllowAnnouncement] = useState(false);\n\n  const labels = useMemo(\n    () => sourceProp.map(itemToString),\n    [sourceProp, itemToString]\n  );\n\n  const source = useMemo(() => {\n    if (inputValue && inputValue.trim().length) {\n      const itemFilter = getDefaultFilter(inputValue, getFilterRegex);\n      return sourceProp.filter((item) => itemFilter(itemToString(item)));\n    }\n    return sourceProp;\n  }, [inputValue, sourceProp, getFilterRegex, itemToString]);\n\n  const itemTextHighlightPattern = useMemo(\n    () =>\n      inputValue && inputValue.trim().length\n        ? getFilterRegex(inputValue)\n        : undefined,\n    [inputValue, getFilterRegex]\n  );\n\n  const { focusedRef, state, helpers, listProps } = useList({\n    ...ListProps,\n    source,\n    disabled,\n    virtualized,\n    itemToString,\n    initialSelectedItem,\n    selectedItem: selectedItemProp,\n    displayedItemCount,\n    onChange,\n    onSelect,\n    id: listId,\n    tabToSelect: true,\n    disableFocus: true,\n    disableMouseDown: true,\n    \"aria-labelledby\": ariaLabelledBy,\n  });\n\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef,\n  } = useIsFocusVisible();\n\n  const handleFocusVisibleRef = useForkRef(focusVisibleRef, focusedRef);\n  const handleInputRef = useForkRef(inputRef, handleFocusVisibleRef);\n\n  const { \"aria-activedescendant\": ariaActiveDescendant, ...restListProps } =\n    listProps;\n\n  const { selectedItem, highlightedIndex } = state;\n  const [quickSelection, setQuickSelection] = useState(false);\n  const { setFocusVisible, setSelectedItem, setHighlightedIndex } = helpers;\n\n  const reconcileInput = useCallback(() => {\n    setInputValue(selectedItem == null ? \"\" : itemToString(selectedItem));\n  }, [selectedItem, itemToString, setInputValue]);\n\n  const selectInputValue = (event: ChangeEvent) => {\n    const nextIndex = inputValue ? labels.indexOf(inputValue.trim()) : -1;\n\n    // Select the item if we can match its label; otherwise create a new one\n    const nextItem = (\n      nextIndex >= 0 ? sourceProp[nextIndex] : stringToItemProp(inputValue)\n    ) as Item;\n\n    if (onSelect) {\n      onSelect(event, nextItem);\n    }\n\n    if (nextItem !== selectedItem) {\n      setSelectedItem(nextItem);\n      onChange && onChange(event, nextItem);\n    }\n  };\n\n  const { isOpen: isListOpen, notifyPopper } = usePopperStatus({\n    initialOpen,\n  });\n\n  // Reconcile input when the function is updated - most likely to be a selectItem change\n  useEffect(reconcileInput, [reconcileInput]);\n\n  // Reset highlight when list closes\n  useEffect(() => {\n    if (!isListOpen) {\n      setHighlightedIndex(undefined);\n      setQuickSelection(false);\n    }\n  }, [isListOpen, setHighlightedIndex, quickSelection]);\n\n  const initHighlightedIndex = () => {\n    setHighlightedIndex(selectedItem ? source.indexOf(selectedItem) : -1);\n  };\n\n  const handleInputFocus = (event: FocusEvent<HTMLInputElement>) => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current) {\n      setFocusVisible(true);\n    }\n\n    if (highlightedIndex == null) {\n      initHighlightedIndex();\n    }\n\n    if (inputProps.onFocus) {\n      inputProps.onFocus(event);\n    }\n\n    notifyPopper(event);\n  };\n\n  const handleInputBlur = (event: FocusEvent<HTMLInputElement>) => {\n    console.log(\"BLUR\");\n    handleBlurVisible();\n    setAllowAnnouncement(false);\n\n    if (allowFreeText) {\n      selectInputValue(event as ChangeEvent);\n    } else {\n      reconcileInput();\n    }\n\n    if (restListProps.onBlur) {\n      restListProps.onBlur(event as FocusEvent<HTMLDivElement>);\n    }\n\n    if (inputProps.onBlur) {\n      inputProps.onBlur(event);\n    }\n\n    notifyPopper(event);\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n\n    setHighlightedIndex(undefined);\n    setQuickSelection(newValue.length > 0 && !allowFreeText);\n\n    // Clear the selection when input is cleared\n    if (newValue.length === 0) {\n      setSelectedItem(undefined);\n      onChange && onChange(event, null);\n    }\n\n    if (inputProps.onChange) {\n      inputProps.onChange(event, \"\");\n    }\n  };\n\n  const handleInputSelect = (event: SyntheticEvent<HTMLDivElement>) => {\n    console.log(`handleInputSelect setSelectionChanged = true`);\n    setSelectionChanged(true);\n    if (inputProps.onSelect) {\n      inputProps.onSelect(event);\n    }\n  };\n\n  const handleInputKeyDown = (event: KeyboardEvent) => {\n    if (\"Escape\" === event.key) {\n      setHighlightedIndex(undefined);\n\n      if (allowFreeText) {\n        setInputValue(\"\");\n      } else {\n        reconcileInput();\n      }\n    }\n\n    if (inputProps.onKeyDown) {\n      inputProps.onKeyDown(event as KeyboardEvent<HTMLInputElement>);\n    }\n  };\n\n  const handleFirstItemSelection = (event: KeyboardEvent | ChangeEvent) => {\n    if (\n      !allowFreeText &&\n      (event as KeyboardEvent).key === \"Enter\" &&\n      quickSelection\n    ) {\n      setSelectedItem(source[0]);\n      onSelect && onSelect(event, source[0]);\n      onChange && onChange(event as ChangeEvent, source[0]);\n    }\n  };\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    // Don't handle Alt modification key - pass it to popper as it should just toggle the open/close\n    if (isToggleList(event)) {\n      notifyPopper(event);\n      return;\n    }\n\n    if (\n      [\"ArrowUp\", \"ArrowDown\"].indexOf(event.key) !== -1 &&\n      highlightedIndex == null\n    ) {\n      initHighlightedIndex();\n    }\n\n    handleFirstItemSelection(event);\n\n    // Space, Home and End keydown should stay on input - don't pass it to list\n    if ([\" \", \"Home\", \"End\"].indexOf(event.key) === -1) {\n      if (restListProps.onKeyDown) {\n        restListProps.onKeyDown(event as KeyboardEvent<HTMLDivElement>);\n      }\n      console.log(`handleKeyDown ${event.key} setSelectionCHanged = false`);\n      setSelectionChanged(false);\n    }\n\n    // Don't announce for deleting values\n    setAllowAnnouncement(\"Backspace\" !== event.key);\n    handleInputKeyDown(event);\n    notifyPopper(event);\n  };\n\n  const handleListClick = (event: MouseEvent) => {\n    console.log(\"handle list click\");\n    const inputEl = inputRef.current;\n    if (inputEl != null) {\n      inputEl.focus();\n    }\n\n    if (restListProps.onClick) {\n      restListProps.onClick(event as MouseEvent<HTMLDivElement>);\n    }\n\n    notifyPopper(event);\n  };\n\n  const mergedInputProps = {\n    ...inputProps.inputProps,\n    role: \"combobox\",\n    \"aria-owns\": listId,\n    \"aria-label\": ariaLabel,\n    \"aria-expanded\": isListOpen,\n    \"aria-activedescendant\":\n      isListOpen && selectionChanged ? null : ariaActiveDescendant,\n  };\n\n  return {\n    inputRef: handleInputRef,\n    listContext: {\n      state,\n      helpers,\n    },\n    inputProps: {\n      ...restProps,\n      ...inputProps,\n      disabled,\n      allowAnnouncement,\n      id: inputId,\n      value: inputValue,\n      onFocus: handleInputFocus,\n      onBlur: handleInputBlur,\n      onChange: handleInputChange,\n      onKeyDown: handleKeyDown,\n      onSelect: handleInputSelect,\n      inputProps: mergedInputProps,\n    } as Partial<InputProps> & { allowAnnouncement: boolean },\n    listProps: {\n      ...restListProps,\n      source,\n      itemToString,\n      itemTextHighlightPattern,\n      onClick: handleListClick,\n      isListOpen: isListOpen && Boolean(source.length),\n    },\n  };\n};\n"],"names":["getDefaultFilterRegex","defaultItemToString","useId","useControlled","useState","useRef","useMemo","getDefaultFilter","useList","useIsFocusVisible","useForkRef","useCallback","usePopperStatus","useEffect","isToggleList"],"mappings":"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"}