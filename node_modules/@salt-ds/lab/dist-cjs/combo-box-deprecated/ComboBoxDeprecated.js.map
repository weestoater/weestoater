{"version":3,"file":"ComboBoxDeprecated.js","sources":["../src/combo-box-deprecated/ComboBoxDeprecated.tsx"],"sourcesContent":["import { makePrefixer, useForkRef, useId } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { ComponentType, forwardRef, Ref, useRef } from \"react\";\n\nimport {\n  DefaultComboBox,\n  DefaultComboBoxProps,\n} from \"./internal/DefaultComboBox\";\nimport {\n  MultiSelectComboBox,\n  MultiSelectComboBoxProps,\n} from \"./internal/MultiSelectComboBox\";\nimport { useWidth } from \"../list-deprecated/internal/useWidth\";\nimport { useFormFieldLegacyProps } from \"../form-field-context-legacy\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport comboBoxCss from \"./ComboBox.css\";\n\nconst withBaseName = makePrefixer(\"saltComboBox\");\n\nfunction getMultiSelect<Item>({\n  multiSelect,\n  initialSelectedItem,\n  selectedItem,\n}: {\n  multiSelect?: boolean;\n  initialSelectedItem?: Item | Item[];\n  selectedItem?: Item | Item[];\n}) {\n  return (\n    multiSelect ||\n    Array.isArray(initialSelectedItem) ||\n    Array.isArray(selectedItem)\n  );\n}\n\nconst validateProps = ({\n  isMultiSelect,\n  delimiter,\n}: {\n  isMultiSelect: boolean;\n  delimiter?: string | string[];\n}) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isMultiSelect && delimiter) {\n      console.warn(\"Delimiter can only be used for a multi-select combo-box.\");\n    }\n  }\n};\n\nexport type ComboBoxDeprecatedProps = Omit<\n  DefaultComboBoxProps<any> | MultiSelectComboBoxProps<any>,\n  \"rootRef\"\n> & {\n  rootRef?: Ref<HTMLElement>;\n  delimiter?: string | string[];\n};\n\nexport const ComboBoxDeprecated = forwardRef<\n  HTMLDivElement,\n  ComboBoxDeprecatedProps\n>(function ComboBox(props, ref) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-combo-box-deprecated\",\n    css: comboBoxCss,\n    window: targetWindow,\n  });\n\n  const {\n    inFormField,\n    a11yProps: {\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-required\": ariaRequired,\n      disabled: formFieldDisabled,\n    } = {},\n  } = useFormFieldLegacyProps();\n\n  const { current: isMultiSelect } = useRef(getMultiSelect(props));\n  validateProps({ isMultiSelect, ...props });\n\n  const {\n    inputRef,\n    listRef,\n    className,\n    disabled = formFieldDisabled,\n    source = [],\n    multiSelect,\n    initialSelectedItem,\n    selectedItem,\n    width,\n    listWidth,\n    id: idProp,\n    \"aria-label\": ariaLabel,\n    ...restProps\n  } = props;\n\n  const id = useId(idProp);\n  const [rootRef, rootWidth] = useWidth<HTMLDivElement>(\n    width == null && listWidth == null\n  );\n\n  const ComboBoxComponent = (\n    isMultiSelect ? MultiSelectComboBox : DefaultComboBox\n  ) as ComponentType<ComboBoxDeprecatedProps>;\n\n  return (\n    <div\n      className={clsx(\n        withBaseName(),\n        {\n          [withBaseName(\"disabled\")]: disabled,\n          [withBaseName(`field`)]: inFormField,\n        },\n        className\n      )}\n      id={id}\n      ref={useForkRef(ref, rootRef)}\n      style={{ width }}\n    >\n      <ComboBoxComponent\n        {...{\n          ...restProps,\n          id,\n          source,\n          disabled,\n          rootRef,\n          rootWidth,\n          inputRef,\n          listRef,\n          listWidth,\n          initialSelectedItem,\n          selectedItem,\n          \"aria-label\": clsx(ariaLabel),\n          \"aria-labelledby\": ariaLabelledBy,\n          \"aria-required\": ariaRequired,\n        }}\n      />\n    </div>\n  );\n});\n"],"names":["makePrefixer","forwardRef","ComboBox","useWindow","useComponentCssInjection","comboBoxCss","useFormFieldLegacyProps","useRef","useId","useWidth","MultiSelectComboBox","DefaultComboBox","jsx","clsx","useForkRef"],"mappings":";;;;;;;;;;;;;;;;;AAoBA,MAAM,YAAA,GAAeA,kBAAa,cAAc,CAAA,CAAA;AAEhD,SAAS,cAAqB,CAAA;AAAA,EAC5B,WAAA;AAAA,EACA,mBAAA;AAAA,EACA,YAAA;AACF,CAIG,EAAA;AACD,EAAA,OACE,eACA,KAAM,CAAA,OAAA,CAAQ,mBAAmB,CACjC,IAAA,KAAA,CAAM,QAAQ,YAAY,CAAA,CAAA;AAE9B,CAAA;AAEA,MAAM,gBAAgB,CAAC;AAAA,EACrB,aAAA;AAAA,EACA,SAAA;AACF,CAGM,KAAA;AACJ,EAAI,IAAA,OAAA,CAAQ,GAAI,CAAA,QAAA,KAAa,YAAc,EAAA;AACzC,IAAI,IAAA,CAAC,iBAAiB,SAAW,EAAA;AAC/B,MAAA,OAAA,CAAQ,KAAK,0DAA0D,CAAA,CAAA;AAAA,KACzE;AAAA,GACF;AACF,CAAA,CAAA;AAUO,MAAM,kBAAqB,GAAAC,gBAAA,CAGhC,SAASC,UAAA,CAAS,OAAO,GAAK,EAAA;AAC9B,EAAA,MAAM,eAAeC,gBAAU,EAAA,CAAA;AAC/B,EAAyBC,+BAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,2BAAA;AAAA,IACR,GAAK,EAAAC,QAAA;AAAA,IACL,MAAQ,EAAA,YAAA;AAAA,GACT,CAAA,CAAA;AAED,EAAM,MAAA;AAAA,IACJ,WAAA;AAAA,IACA,SAAW,EAAA;AAAA,MACT,iBAAmB,EAAA,cAAA;AAAA,MACnB,eAAiB,EAAA,YAAA;AAAA,MACjB,QAAU,EAAA,iBAAA;AAAA,QACR,EAAC;AAAA,MACHC,+CAAwB,EAAA,CAAA;AAE5B,EAAA,MAAM,EAAE,OAAS,EAAA,aAAA,KAAkBC,YAAO,CAAA,cAAA,CAAe,KAAK,CAAC,CAAA,CAAA;AAC/D,EAAA,aAAA,CAAc,EAAE,aAAA,EAAe,GAAG,KAAA,EAAO,CAAA,CAAA;AAEzC,EAAM,MAAA;AAAA,IACJ,QAAA;AAAA,IACA,OAAA;AAAA,IACA,SAAA;AAAA,IACA,QAAW,GAAA,iBAAA;AAAA,IACX,SAAS,EAAC;AAAA,IACV,WAAA;AAAA,IACA,mBAAA;AAAA,IACA,YAAA;AAAA,IACA,KAAA;AAAA,IACA,SAAA;AAAA,IACA,EAAI,EAAA,MAAA;AAAA,IACJ,YAAc,EAAA,SAAA;AAAA,IACX,GAAA,SAAA;AAAA,GACD,GAAA,KAAA,CAAA;AAEJ,EAAM,MAAA,EAAA,GAAKC,WAAM,MAAM,CAAA,CAAA;AACvB,EAAM,MAAA,CAAC,OAAS,EAAA,SAAS,CAAI,GAAAC,iBAAA;AAAA,IAC3B,KAAA,IAAS,QAAQ,SAAa,IAAA,IAAA;AAAA,GAChC,CAAA;AAEA,EAAM,MAAA,iBAAA,GACJ,gBAAgBC,uCAAsB,GAAAC,+BAAA,CAAA;AAGxC,EAAA,uBACGC,cAAA,CAAA,KAAA,EAAA;AAAA,IACC,SAAW,EAAAC,SAAA;AAAA,MACT,YAAa,EAAA;AAAA,MACb;AAAA,QACE,CAAC,YAAa,CAAA,UAAU,CAAI,GAAA,QAAA;AAAA,QAC5B,CAAC,YAAa,CAAA,CAAA,KAAA,CAAO,CAAI,GAAA,WAAA;AAAA,OAC3B;AAAA,MACA,SAAA;AAAA,KACF;AAAA,IACA,EAAA;AAAA,IACA,GAAA,EAAKC,eAAW,CAAA,GAAA,EAAK,OAAO,CAAA;AAAA,IAC5B,KAAA,EAAO,EAAE,KAAM,EAAA;AAAA,IAEf,QAAC,kBAAAF,cAAA,CAAA,iBAAA,EAAA;AAAA,MACE,GAAG;AAAA,QACF,GAAG,SAAA;AAAA,QACH,EAAA;AAAA,QACA,MAAA;AAAA,QACA,QAAA;AAAA,QACA,OAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,QACA,OAAA;AAAA,QACA,SAAA;AAAA,QACA,mBAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA,EAAcC,UAAK,SAAS,CAAA;AAAA,QAC5B,iBAAmB,EAAA,cAAA;AAAA,QACnB,eAAiB,EAAA,YAAA;AAAA,OACnB;AAAA,KACF,CAAA;AAAA,GACF,CAAA,CAAA;AAEJ,CAAC;;;;"}