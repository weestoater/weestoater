'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var core = require('@salt-ds/core');
var OverlayContext = require('./OverlayContext.js');

function OverlayTrigger(props) {
  const { children } = props;
  const { setOpen, reference, getReferenceProps, id } = OverlayContext.useOverlayContext();
  const triggerRef = core.useForkRef(
    React.isValidElement(children) ? children.ref : null,
    reference
  );
  if (!children || !React.isValidElement(children)) {
    return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
      children
    });
  }
  const handleClick = (event) => {
    setOpen(event, true);
  };
  const getTriggerProps = () => getReferenceProps({
    ref: reference,
    onClick: handleClick,
    id: `${id}-trigger`,
    "aria-controls": `${id}-panel`
  });
  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: React.cloneElement(children, {
      ...core.mergeProps(getTriggerProps(), children.props),
      ref: triggerRef
    })
  });
}

exports.OverlayTrigger = OverlayTrigger;
//# sourceMappingURL=OverlayTrigger.js.map
