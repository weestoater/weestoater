'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var OverlayContext = require('./OverlayContext.js');
var react = require('@floating-ui/react');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var OverlayPanel$1 = require('./OverlayPanel.css.js');

const withBaseName = core.makePrefixer("saltOverlayPanel");
const OverlayPanel = React.forwardRef(
  function OverlayPanel2(props, ref) {
    const {
      className,
      ["aria-labelledby"]: ariaLabelledby,
      children,
      ...rest
    } = props;
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-overlay-panel",
      css: OverlayPanel$1,
      window: targetWindow
    });
    const { Component: FloatingComponent } = core.useFloatingComponent();
    const {
      openState,
      floatingStyles,
      context,
      getFloatingProps,
      floating,
      arrowProps
    } = OverlayContext.useOverlayContext();
    const handleRef = core.useForkRef(floating, ref);
    const { top, left, width, height, position } = floatingStyles;
    return /* @__PURE__ */ jsxRuntime.jsxs(FloatingComponent, {
      open: openState,
      className: clsx.clsx(withBaseName(), className),
      "aria-modal": "true",
      ...getFloatingProps(),
      ref: handleRef,
      width,
      height,
      top,
      left,
      position,
      focusManagerProps: {
        context
      },
      "aria-labelledby": ariaLabelledby,
      children: [
        /* @__PURE__ */ jsxRuntime.jsxs("div", {
          ...rest,
          children: [
            " ",
            children,
            " "
          ]
        }),
        /* @__PURE__ */ jsxRuntime.jsx(react.FloatingArrow, {
          ...arrowProps,
          strokeWidth: 1,
          fill: "var(--overlay-background)",
          stroke: "var(--overlay-borderColor)",
          height: 5,
          width: 10
        })
      ]
    });
  }
);

exports.OverlayPanel = OverlayPanel;
//# sourceMappingURL=OverlayPanel.js.map
