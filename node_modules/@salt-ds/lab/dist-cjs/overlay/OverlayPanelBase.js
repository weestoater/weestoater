'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('@floating-ui/react');
var Overlay = require('./Overlay.css.js');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var core = require('@salt-ds/core');
var icons = require('@salt-ds/icons');
var OverlayContext = require('./OverlayContext.js');
var clsx = require('clsx');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var clsx__default = /*#__PURE__*/_interopDefaultLegacy(clsx);

const withBaseName = core.makePrefixer("saltOverlayPanelBase");
const OverlayPanelBase = (props) => {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-overlay",
    css: Overlay,
    window: targetWindow
  });
  const { arrowProps, handleCloseButton } = OverlayContext.useOverlayContext();
  const { children, className, ...rest } = props;
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsxs("div", {
        className: clsx__default["default"](withBaseName("container"), className),
        ...rest,
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(core.Button, {
            onClick: handleCloseButton,
            variant: "secondary",
            className: withBaseName("closeButton"),
            "aria-label": "Close Overlay",
            children: /* @__PURE__ */ jsxRuntime.jsx(icons.CloseIcon, {
              "aria-hidden": true
            })
          }),
          /* @__PURE__ */ jsxRuntime.jsx("div", {
            className: withBaseName("content"),
            children
          })
        ]
      }),
      /* @__PURE__ */ jsxRuntime.jsx(react.FloatingArrow, {
        ...arrowProps,
        strokeWidth: 1,
        fill: "var(--overlay-background)",
        stroke: "var(--overlay-borderColor)",
        height: 5,
        width: 10
      })
    ]
  });
};

exports.OverlayPanelBase = OverlayPanelBase;
//# sourceMappingURL=OverlayPanelBase.js.map
