{"version":3,"file":"CascadingMenuList.js","sources":["../src/cascading-menu/CascadingMenuList.tsx"],"sourcesContent":["import {\n  useFloatingUI,\n  UseFloatingUIProps,\n  useForkRef,\n  useIsomorphicLayoutEffect,\n} from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { forwardRef, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Portal } from \"../portal\";\nimport { List, ListProps } from \"../list-deprecated\";\n\nimport { DefaultMenuItem, MenuItemProps } from \"./CascadingMenuItem\";\nimport { CascadingMenuAction } from \"./internal/CascadingMenuAction\";\nimport { getKeyDownHandlers } from \"./internal/keydownHandlers\";\nimport {\n  getHeight,\n  getMaxHeight,\n  screenBounds,\n} from \"./internal/menuPositioning\";\nimport { hasIcon, hasSubMenu, menuState } from \"./internal/stateUtils\";\nimport { useMouseHandlers } from \"./internal/useMouseHandlers\";\nimport { refsManager } from \"./internal/useRefsManager\";\nimport { stateChangeTypes } from \"./stateChangeTypes\";\nimport { useWindow as usePortalWindow } from \"../window\";\n\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\n\nimport cascadingMenuListCss from \"./CascadingMenuList.css\";\n\nexport interface CascadingMenuListProps {\n  className?: string;\n  data: menuState;\n  delay?: number;\n  disableMouseOutInteractions?: boolean;\n  // TODO any\n  dispatch: (action: any) => void;\n  getBoundingClientRect?: (element: HTMLElement) => DOMRect;\n  getScreenBounds?: () => screenBounds;\n  height?: number;\n  highlightedItemIndex: number | null;\n  isChildMenuOpen: boolean;\n  itemToString: MenuItemProps[\"itemToString\"];\n  isNavigatingWithKeyboard: boolean;\n  isRoot: boolean;\n  maxWidth?: ListProps[\"maxWidth\"];\n  menuId: string;\n  menuTriggerRef: HTMLElement | null;\n  minWidth?: ListProps[\"minWidth\"];\n  onItemClick?: MenuItemProps[\"onItemClick\"];\n  parentElement?: HTMLElement | null;\n  refsManager: refsManager;\n  rootPlacement?: UseFloatingUIProps[\"placement\"];\n  rootPlacementOffset?: string;\n  rowHeight?: number;\n  setIsNavigatingWithKeyboard: (value: boolean) => void;\n  tooltipEnterDelay: number;\n  tooltipLeaveDelay: number;\n}\n\nexport const CascadingMenuList = forwardRef<\n  HTMLDivElement,\n  CascadingMenuListProps\n>(function CascadingMenuList(props, ref) {\n  const {\n    className,\n    maxWidth,\n    minWidth,\n    itemToString,\n    onItemClick,\n    refsManager,\n    dispatch,\n    rowHeight: rowHeightProp,\n    isNavigatingWithKeyboard,\n    data,\n    tooltipEnterDelay,\n    tooltipLeaveDelay,\n    height: heightProp,\n    isChildMenuOpen,\n    isRoot,\n    highlightedItemIndex,\n    menuId,\n    parentElement = null,\n    getScreenBounds,\n    disableMouseOutInteractions,\n    rootPlacementOffset,\n    rootPlacement = \"bottom-start\",\n  } = props;\n\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-cascading-menu-list\",\n    css: cascadingMenuListCss,\n    window: targetWindow,\n  });\n\n  const baseClass = \"saltCascadingMenuList\";\n\n  const [menuRef, setInternalMenuRef] = useState<HTMLElement | null>(null);\n  const setMenuRef = useCallback(\n    (node: HTMLElement) => {\n      refsManager.set(menuId, node);\n    },\n    [refsManager, menuId]\n  );\n\n  // TODO removed useCharacteristic here\n  const sizeStackable = 36;\n  const defaultRowHeight = sizeStackable;\n\n  // TODO removed useCharacteristic here\n  const spacing = 8;\n\n  const isMenuActiveState = useState(true);\n  const [isMenuActive, setIsMenuActive] = isMenuActiveState;\n  const listRef = useForkRef<HTMLElement>(ref, setInternalMenuRef);\n  const handleRef = useForkRef(setMenuRef, listRef);\n\n  useEffect(() => {\n    if (menuRef && menuRef.focus) {\n      // timeout prevents scrolling issue by waiting a split second\n      // and menu should be correctly positioned by then and\n      // focusing popper content offscreen will not scroll page\n      // it would be better to maybe use popper onUpdate callback\n      // or some kind of polling mechanism to confirm placement is\n      // correct before focus call\n      const id = setTimeout(() => {\n        menuRef.focus();\n      });\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [menuRef, rootPlacementOffset]);\n\n  const handleKeyDown = getKeyDownHandlers(props, setIsMenuActive);\n\n  const onFocusHandler = useCallback(() => {\n    setIsMenuActive(true);\n    // When navigating via keyboard on open highlight first time in the list\n    if (isNavigatingWithKeyboard) {\n      if (!highlightedItemIndex) {\n        dispatch({\n          type: CascadingMenuAction.SET_CURRENT_INTERACTED_ITEM,\n          cause: stateChangeTypes.KEYBOARD_NAV_AUTO_FOCUS,\n          targetId: menuId,\n          highlightedItemIndex: 0,\n        });\n      }\n    }\n  }, [\n    setIsMenuActive,\n    isNavigatingWithKeyboard,\n    highlightedItemIndex,\n    dispatch,\n    menuId,\n  ]);\n\n  const [handleMouseMove, handleMouseOut] = useMouseHandlers(\n    props,\n    isMenuActiveState,\n    menuRef\n  );\n\n  const hasEndAdornment = useMemo(\n    () => data.menuItems.some(hasSubMenu),\n    [data]\n  );\n  const hasStartAdornment = useMemo(() => data.menuItems.some(hasIcon), [data]);\n  const rowHeight = rowHeightProp != null ? rowHeightProp : defaultRowHeight;\n  const maxHeight = getMaxHeight(heightProp, spacing, getScreenBounds);\n  const calculatedMenuHeight = rowHeight * data.menuItems.length;\n  const menuHeight = getHeight(heightProp, calculatedMenuHeight, maxHeight);\n  const hasScrollbar = menuHeight >= maxHeight;\n\n  // menu container size is 2px larger than the list to include the border\n  const menuContainerHeight = menuHeight + 2;\n  const Window = usePortalWindow();\n  const { reference, floating, x, y, strategy } = useFloatingUI({\n    placement: isRoot ? rootPlacement : \"right-start\",\n  });\n  useIsomorphicLayoutEffect(() => {\n    if (parentElement) {\n      reference(\n        isRoot\n          ? parentElement\n          : parentElement.querySelector(\n              `#${\n                parentElement.getAttribute(\"aria-activedescendant\") as string\n              }`\n            )\n      );\n    }\n  }, [reference, isRoot, parentElement]);\n\n  if (parentElement === null) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Window\n        className={`${baseClass}-popper`}\n        id={menuId}\n        style={{\n          top: y ?? 0,\n          left: x ?? 0,\n          position: strategy,\n        }}\n        ref={floating}\n      >\n        <List\n          className={clsx(baseClass, className)}\n          height={menuContainerHeight}\n          highlightedIndex={\n            highlightedItemIndex === null ? -1 : highlightedItemIndex\n          }\n          id={menuId}\n          itemHeight={rowHeight}\n          itemToString={itemToString}\n          key={menuId}\n          listRef={handleRef}\n          maxWidth={maxWidth}\n          minWidth={minWidth}\n          onFocus={onFocusHandler}\n          onKeyDown={handleKeyDown}\n          onMouseOut={disableMouseOutInteractions ? undefined : handleMouseOut}\n          role=\"menu\"\n          width=\"auto\"\n        >\n          {data.menuItems.map((menuItem, idx) => {\n            const isInteracted = highlightedItemIndex === idx;\n            return (\n              <DefaultMenuItem\n                blurSelected={!isMenuActive && isInteracted}\n                hasEndAdornment={hasEndAdornment}\n                hasScrollbar={hasScrollbar}\n                hasStartAdornment={hasStartAdornment}\n                hasSubMenu={hasSubMenu(menuItem)}\n                isChildMenuOpen={isChildMenuOpen}\n                isInteracted={isInteracted}\n                isNavigatingWithKeyboard={isNavigatingWithKeyboard}\n                itemToString={itemToString}\n                key={idx}\n                onItemClick={onItemClick}\n                onMouseMove={() => handleMouseMove(idx)}\n                sourceItem={menuItem}\n                tooltipEnterDelay={tooltipEnterDelay}\n                tooltipLeaveDelay={tooltipLeaveDelay}\n              />\n            );\n          })}\n        </List>\n      </Window>\n    </Portal>\n  );\n});\n"],"names":["forwardRef","CascadingMenuList","refsManager","useWindow","useComponentCssInjection","cascadingMenuListCss","useState","useCallback","useForkRef","useEffect","getKeyDownHandlers","CascadingMenuAction","stateChangeTypes","useMouseHandlers","useMemo","hasSubMenu","hasIcon","getMaxHeight","getHeight","usePortalWindow","useFloatingUI","useIsomorphicLayoutEffect","jsx","Portal","List","clsx","DefaultMenuItem"],"mappings":"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"}