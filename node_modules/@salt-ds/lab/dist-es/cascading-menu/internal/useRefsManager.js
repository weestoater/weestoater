import { useRef, useReducer, useCallback, useMemo } from 'react';

function useRefsManager() {
  const refs = useRef(/* @__PURE__ */ new Map());
  const [, forceUpdate] = useReducer((x) => !x, false);
  const get = useCallback((key) => refs.current.get(key), []);
  const set = useCallback((key, value) => {
    refs.current.set(key, value);
    forceUpdate();
  }, []);
  const values = useCallback(() => {
    const vals = [];
    refs.current.forEach((value) => vals.push(value));
    return vals;
  }, []);
  return useMemo(() => ({ get, set, values }), [get, set, values]);
}

export { useRefsManager };
//# sourceMappingURL=useRefsManager.js.map
