const ID_SEPARATOR = "-";
function deriveFlatStateFromTree(tree, parentId = null, level = 0, generatedId = "salt-cascading-menu") {
  const { id = generatedId, menuItems = [] } = tree;
  return menuItems.reduce(
    (menuStructure, menuItem, index) => {
      if (hasSubMenu(menuItem)) {
        const generatedChildId = [generatedId, index].join(ID_SEPARATOR);
        menuStructure[id].childMenus[index] = menuItem.id || generatedChildId;
        const innerState = deriveFlatStateFromTree(
          menuItem,
          id,
          level + 1,
          generatedChildId
        );
        return { ...menuStructure, ...innerState };
      } else {
        return menuStructure;
      }
    },
    {
      [id]: {
        id,
        parentId,
        childMenus: {},
        menuItems: tree.menuItems,
        level
      }
    }
  );
}
function hasSubMenu(item) {
  return item != null && !!item.menuItems && item.menuItems.length > 0;
}
function isMenuItem(item) {
  return item != null && !item.menuItems;
}
function hasIcon(item) {
  return item != null && !!item.icon;
}

export { deriveFlatStateFromTree, hasIcon, hasSubMenu, isMenuItem };
//# sourceMappingURL=stateUtils.js.map
