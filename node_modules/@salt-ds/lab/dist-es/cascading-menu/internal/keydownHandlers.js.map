{"version":3,"file":"keydownHandlers.js","sources":["../src/cascading-menu/internal/keydownHandlers.ts"],"sourcesContent":["import { stateChangeTypes } from \"../stateChangeTypes\";\nimport { CascadingMenuAction } from \"./CascadingMenuAction\";\nimport { hasSubMenu, isMenuItem } from \"./stateUtils\";\nimport { CascadingMenuListProps } from \"../CascadingMenuList\";\nimport { Dispatch, SetStateAction, KeyboardEvent } from \"react\";\n\ninterface getKeyDownHandlersProps extends CascadingMenuListProps {\n  keyDownHandlersOverride?: Record<string, (event: Event) => void>;\n}\n\nexport function getKeyDownHandlers(\n  props: getKeyDownHandlersProps,\n  setIsMenuActive: Dispatch<SetStateAction<boolean>>\n) {\n  const {\n    keyDownHandlersOverride,\n    onItemClick,\n    dispatch,\n    isNavigatingWithKeyboard,\n    setIsNavigatingWithKeyboard,\n    data,\n    menuTriggerRef,\n    highlightedItemIndex,\n    menuId,\n    parentElement,\n    isRoot,\n  } = props;\n\n  const rowCount = data.menuItems.length;\n  const isIndexDisabled = () =>\n    highlightedItemIndex\n      ? data.menuItems?.[highlightedItemIndex]?.disabled\n      : false;\n\n  const handlers: Record<string, (event: KeyboardEvent<HTMLElement>) => void> =\n    {\n      Enter(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n\n        if (highlightedItemIndex === null || isIndexDisabled()) {\n          return;\n        }\n        // If it is an actionable item -> execute action, close cascading menu and move focus to menu trigger\n        const selectedItem = data.menuItems[highlightedItemIndex];\n        const subMenuId = data.childMenus[highlightedItemIndex];\n        if (isMenuItem(selectedItem)) {\n          onItemClick?.(selectedItem, event);\n\n          dispatch({\n            type: CascadingMenuAction.CLOSE_CASCADING_MENU,\n            cause: stateChangeTypes.ITEM_KEYDOWN_ENTER,\n            targetId: menuId,\n          });\n          if (menuTriggerRef && menuTriggerRef.focus) {\n            menuTriggerRef.focus();\n          }\n        } else if (hasSubMenu(selectedItem)) {\n          setIsMenuActive(false);\n          dispatch({\n            type: CascadingMenuAction.OPEN_MENU,\n            cause: stateChangeTypes.ITEM_KEYDOWN_ENTER,\n            targetId: subMenuId,\n          });\n        }\n      },\n      ArrowRight(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n\n        // User is switching from mouse to keyboard interaction\n        if (highlightedItemIndex === null && !isNavigatingWithKeyboard) {\n          // Move focus to first item in the list\n          dispatch({\n            type: CascadingMenuAction.SET_CURRENT_INTERACTED_ITEM,\n            cause: stateChangeTypes.ITEM_KEYDOWN_ARROW_RIGHT,\n            targetId: menuId,\n            highlightedItemIndex: 0,\n          });\n          return;\n        }\n\n        if (highlightedItemIndex === null || isIndexDisabled()) {\n          return;\n        }\n\n        const selectedItem = data.menuItems[highlightedItemIndex];\n        const subMenuId = data.childMenus[highlightedItemIndex];\n        if (hasSubMenu(selectedItem)) {\n          setIsMenuActive(false);\n          dispatch({\n            type: CascadingMenuAction.OPEN_MENU,\n            cause: stateChangeTypes.ITEM_KEYDOWN_ARROW_RIGHT,\n            targetId: subMenuId,\n          });\n        }\n      },\n      \" \": (event: KeyboardEvent<HTMLElement>) => {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n\n        if (highlightedItemIndex === null || isIndexDisabled()) {\n          return;\n        }\n\n        const selectedItem = data.menuItems[highlightedItemIndex];\n        const subMenuId = data.childMenus[highlightedItemIndex];\n        if (isMenuItem(selectedItem)) {\n          onItemClick?.(selectedItem, event);\n        } else if (hasSubMenu(selectedItem)) {\n          setIsMenuActive(false);\n          dispatch({\n            type: CascadingMenuAction.OPEN_MENU,\n            cause: stateChangeTypes.ITEM_KEYDOWN_SPACEBAR,\n            targetId: subMenuId,\n          });\n        }\n      },\n      Tab() {\n        // On tab close the cascading menu and focus the menu trigger so that focus event bubbling can either select\n        // next element in tab order for Tab key or previous one for Tab + Shift key\n        setIsNavigatingWithKeyboard(true);\n        dispatch({\n          type: CascadingMenuAction.CLOSE_CASCADING_MENU,\n          cause: stateChangeTypes.ITEM_KEYDOWN_TAB,\n          targetId: menuId,\n        });\n        if (menuTriggerRef && menuTriggerRef.focus) {\n          menuTriggerRef.focus();\n        }\n      },\n      ArrowLeft(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n        if (parentElement && !isRoot) {\n          parentElement.focus();\n          dispatch({\n            type: CascadingMenuAction.CLOSE_MENU,\n            cause: stateChangeTypes.ITEM_KEYDOWN_ARROW_LEFT,\n            targetId: menuId,\n          });\n        }\n      },\n      Escape(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n        dispatch({\n          type: CascadingMenuAction.CLOSE_MENU,\n          cause: stateChangeTypes.ITEM_KEYDOWN_ESCAPE,\n          targetId: menuId,\n        });\n\n        if (parentElement) {\n          parentElement.focus();\n        }\n      },\n      ArrowDown(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n        let indexAfterMovement =\n          highlightedItemIndex === null ? 0 : highlightedItemIndex + 1;\n        indexAfterMovement =\n          indexAfterMovement > rowCount - 1 ? 0 : indexAfterMovement;\n\n        // Move to next item or first item if at the end of the list\n        dispatch({\n          type: CascadingMenuAction.SET_CURRENT_INTERACTED_ITEM,\n          cause: stateChangeTypes.ITEM_KEYDOWN_ARROW_DOWN,\n          targetId: menuId,\n          highlightedItemIndex: indexAfterMovement,\n        });\n      },\n      ArrowUp(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n        let indexAfterMovement =\n          highlightedItemIndex === null\n            ? rowCount - 1\n            : highlightedItemIndex - 1;\n        indexAfterMovement =\n          indexAfterMovement < 0 ? rowCount - 1 : indexAfterMovement;\n\n        // Move to previous item or last item if at the start of the list\n        dispatch({\n          type: CascadingMenuAction.SET_CURRENT_INTERACTED_ITEM,\n          cause: stateChangeTypes.ITEM_KEYDOWN_ARROW_UP,\n          targetId: menuId,\n          highlightedItemIndex: indexAfterMovement,\n        });\n      },\n      Home(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n        if (highlightedItemIndex === 0) {\n          return;\n        }\n\n        // Move focus to first item in the list\n        dispatch({\n          type: CascadingMenuAction.SET_CURRENT_INTERACTED_ITEM,\n          cause: stateChangeTypes.ITEM_KEYDOWN_HOME,\n          targetId: menuId,\n          highlightedItemIndex: 0,\n        });\n      },\n\n      End(event: KeyboardEvent<HTMLElement>) {\n        event.preventDefault();\n        setIsNavigatingWithKeyboard(true);\n        if (highlightedItemIndex === rowCount - 1) {\n          return;\n        }\n\n        // Move focus to last item in the list\n        dispatch({\n          type: CascadingMenuAction.SET_CURRENT_INTERACTED_ITEM,\n          cause: stateChangeTypes.ITEM_KEYDOWN_ESCAPE,\n          targetId: menuId,\n          highlightedItemIndex: rowCount - 1,\n        });\n      },\n      ...keyDownHandlersOverride,\n    };\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLElement>) => {\n    handlers[event.key]?.(event);\n  };\n\n  return handleKeyDown;\n}\n"],"names":[],"mappings":"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"}