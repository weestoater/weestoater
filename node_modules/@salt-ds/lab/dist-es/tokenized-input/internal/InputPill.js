import { jsxs, jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { memo, useRef } from 'react';
import { makePrefixer, useIsomorphicLayoutEffect, Pill } from '@salt-ds/core';
import { getWidth } from './useWidth.js';
import { CloseIcon } from '@salt-ds/icons';

const withBaseName = makePrefixer("saltInputPill");
const InputPill = memo(function InputPill2(props) {
  const {
    active,
    className,
    disabled,
    hidden,
    highlighted,
    index,
    label,
    lastVisible,
    onDelete,
    pillsRef,
    ...restProps
  } = props;
  const ref = useRef(null);
  const isRemovable = Boolean(onDelete);
  useIsomorphicLayoutEffect(() => {
    if (!isRemovable && pillsRef.current) {
      pillsRef.current[index] = getWidth(ref.current);
    }
  }, [pillsRef, index, isRemovable, lastVisible]);
  useIsomorphicLayoutEffect(
    () => () => {
      pillsRef.current[index] = void 0;
    },
    [pillsRef, index]
  );
  const handleDelete = () => {
    onDelete == null ? void 0 : onDelete(index);
  };
  return /* @__PURE__ */ jsxs(Pill, {
    className: clsx(
      withBaseName(),
      {
        [withBaseName("pillActive")]: active || highlighted,
        [withBaseName("pillLastVisible")]: lastVisible,
        [withBaseName("hidden")]: hidden
      },
      className
    ),
    disabled,
    tabIndex: -1,
    onClick: isRemovable ? handleDelete : void 0,
    ref,
    role: "option",
    ...restProps,
    children: [
      /* @__PURE__ */ jsx("span", {
        className: withBaseName("label"),
        children: label
      }),
      isRemovable && /* @__PURE__ */ jsx(CloseIcon, {})
    ]
  });
});

export { InputPill };
//# sourceMappingURL=InputPill.js.map
