{"version":3,"file":"useCalendar.js","sources":["../src/calendar/useCalendar.ts"],"sourcesContent":["import {\n  DateValue,\n  endOfMonth,\n  endOfYear,\n  getLocalTimeZone,\n  isSameDay,\n  startOfMonth,\n  startOfYear,\n  today,\n} from \"@internationalized/date\";\nimport { useControlled } from \"@salt-ds/core\";\nimport { SyntheticEvent, useCallback, useEffect, useState } from \"react\";\nimport {\n  UseMultiSelectionCalendarProps,\n  UseOffsetSelectionCalendarProps,\n  UseRangeSelectionCalendarProps,\n  useSelectionCalendar,\n  useSelectionCalendarProps,\n  UseSingleSelectionCalendarProps,\n} from \"./useSelection\";\n\ninterface BaseUseCalendarProps {\n  defaultVisibleMonth?: DateValue;\n  onVisibleMonthChange?: (\n    event: SyntheticEvent,\n    visibleMonth: DateValue\n  ) => void;\n  isDayUnselectable?: (date: DateValue) => string | false | void;\n  isDayHighlighted?: (date: DateValue) => string | false | void;\n  isDayDisabled?: (date: DateValue) => boolean;\n  visibleMonth?: DateValue;\n  hideOutOfRangeDates?: boolean;\n  hideYearDropdown?: boolean;\n  minDate?: DateValue;\n  maxDate?: DateValue;\n}\n\nexport type useCalendarProps = (\n  | Omit<UseSingleSelectionCalendarProps, \"isDaySelectable\">\n  | Omit<UseMultiSelectionCalendarProps, \"isDaySelectable\">\n  | Omit<UseRangeSelectionCalendarProps, \"isDaySelectable\">\n  | Omit<UseOffsetSelectionCalendarProps, \"isDaySelectable\">\n) &\n  BaseUseCalendarProps;\n\nconst defaultIsDayUnselectable = (): string | false => false;\nconst defaultIsDayHighlighted = (): string | false => false;\nconst defaultIsDayDisabled = (): false => false;\n\nexport function useCalendar(props: useCalendarProps) {\n  const {\n    selectedDate,\n    defaultSelectedDate,\n    visibleMonth: visibleMonthProp,\n    hideYearDropdown,\n    hideOutOfRangeDates,\n    defaultVisibleMonth = today(getLocalTimeZone()),\n    onSelectedDateChange,\n    onVisibleMonthChange,\n    isDayUnselectable = defaultIsDayUnselectable,\n    isDayHighlighted = defaultIsDayHighlighted,\n    isDayDisabled = defaultIsDayDisabled,\n    minDate = hideYearDropdown\n      ? startOfYear(today(getLocalTimeZone()))\n      : undefined,\n    maxDate = hideYearDropdown\n      ? endOfYear(today(getLocalTimeZone()))\n      : undefined,\n    selectionVariant,\n    onHoveredDateChange,\n    hoveredDate,\n    // startDateOffset,\n    // endDateOffset,\n  } = props;\n  const [visibleMonth, setVisibleMonthState] = useControlled({\n    controlled: visibleMonthProp ? startOfMonth(visibleMonthProp) : undefined,\n    default: startOfMonth(defaultVisibleMonth),\n    name: \"Calendar\",\n    state: \"visibleMonth\",\n  });\n\n  const isOutsideAllowedDates = useCallback(\n    (date: DateValue) => {\n      return (\n        (minDate != null && date.compare(minDate) < 0) ||\n        (maxDate != null && date.compare(maxDate) > 0)\n      );\n    },\n    [maxDate, minDate]\n  );\n\n  const isOutsideAllowedMonths = (date: DateValue) => {\n    return (\n      (minDate != null && endOfMonth(date).compare(minDate) < 0) ||\n      (maxDate != null && startOfMonth(date).compare(maxDate) > 0)\n    );\n  };\n\n  const isOutsideAllowedYears = (date: DateValue) => {\n    return (\n      (minDate != null && endOfYear(date).compare(minDate) < 0) ||\n      (maxDate != null && startOfYear(date).compare(maxDate) > 0)\n    );\n  };\n\n  const isDaySelectable = useCallback(\n    (date?: DateValue) =>\n      !(\n        date &&\n        (isDayUnselectable(date) ||\n          isDayDisabled(date) ||\n          isOutsideAllowedDates(date))\n      ),\n    [isDayUnselectable, isDayDisabled, isOutsideAllowedDates]\n  );\n\n  const selectionManager = useSelectionCalendar({\n    defaultSelectedDate: defaultSelectedDate,\n    selectedDate,\n    onSelectedDateChange,\n    startDateOffset:\n      props.selectionVariant === \"offset\"\n        ? props.startDateOffset\n        : (date) => date,\n    endDateOffset:\n      props.selectionVariant === \"offset\"\n        ? props.endDateOffset\n        : (date) => date,\n    isDaySelectable,\n    selectionVariant,\n    onHoveredDateChange,\n    hoveredDate,\n  } as useSelectionCalendarProps);\n\n  const [calendarFocused, setCalendarFocused] = useState(false);\n\n  const [focusedDate, setFocusedDateState] = useState<DateValue>(\n    startOfMonth(visibleMonth)\n  );\n\n  const isDayVisible = useCallback(\n    (date: DateValue) => {\n      const startInsideDays = startOfMonth(visibleMonth);\n\n      if (date.compare(startInsideDays) < 0) return false;\n\n      const endInsideDays = endOfMonth(visibleMonth);\n\n      return !(date.compare(endInsideDays) > 0);\n    },\n    [visibleMonth]\n  );\n\n  const setVisibleMonth = useCallback(\n    (event: SyntheticEvent, newVisibleMonth: DateValue) => {\n      setVisibleMonthState(newVisibleMonth);\n      onVisibleMonthChange?.(event, newVisibleMonth);\n    },\n    [onVisibleMonthChange, setVisibleMonthState]\n  );\n\n  const setFocusedDate = useCallback(\n    (event: SyntheticEvent, date: DateValue) => {\n      if (isSameDay(date, focusedDate) || isOutsideAllowedDates(date)) return;\n\n      setFocusedDateState(date);\n\n      const shouldTransition =\n        !isDayVisible(date) &&\n        isDaySelectable(date) &&\n        !isOutsideAllowedDates(date);\n      if (shouldTransition) {\n        setVisibleMonth(event, startOfMonth(date));\n      }\n    },\n    [\n      focusedDate,\n      isDaySelectable,\n      isDayVisible,\n      isOutsideAllowedDates,\n      setVisibleMonth,\n    ]\n  );\n\n  useEffect(() => {\n    if (!isDayVisible(focusedDate)) {\n      setFocusedDateState(startOfMonth(visibleMonth));\n    }\n  }, [isDayVisible, focusedDate, visibleMonth]);\n\n  return {\n    state: {\n      visibleMonth,\n      focusedDate,\n      minDate,\n      maxDate,\n      selectionVariant,\n      hideOutOfRangeDates,\n      calendarFocused,\n      ...selectionManager.state,\n    },\n    helpers: {\n      setVisibleMonth,\n      setFocusedDate,\n      setCalendarFocused,\n      isDayUnselectable,\n      isDayHighlighted,\n      isDayDisabled,\n      isDayVisible,\n      isOutsideAllowedDates,\n      isOutsideAllowedMonths,\n      isOutsideAllowedYears,\n      ...selectionManager.helpers,\n    },\n  };\n}\n"],"names":[],"mappings":";;;;;AA6CA,MAAM,2BAA2B,MAAsB,KAAA,CAAA;AACvD,MAAM,0BAA0B,MAAsB,KAAA,CAAA;AACtD,MAAM,uBAAuB,MAAa,KAAA,CAAA;AAEnC,SAAS,YAAY,KAAyB,EAAA;AACnD,EAAM,MAAA;AAAA,IACJ,YAAA;AAAA,IACA,mBAAA;AAAA,IACA,YAAc,EAAA,gBAAA;AAAA,IACd,gBAAA;AAAA,IACA,mBAAA;AAAA,IACA,mBAAA,GAAsB,KAAM,CAAA,gBAAA,EAAkB,CAAA;AAAA,IAC9C,oBAAA;AAAA,IACA,oBAAA;AAAA,IACA,iBAAoB,GAAA,wBAAA;AAAA,IACpB,gBAAmB,GAAA,uBAAA;AAAA,IACnB,aAAgB,GAAA,oBAAA;AAAA,IAChB,UAAU,gBACN,GAAA,WAAA,CAAY,MAAM,gBAAiB,EAAC,CAAC,CACrC,GAAA,KAAA,CAAA;AAAA,IACJ,UAAU,gBACN,GAAA,SAAA,CAAU,MAAM,gBAAiB,EAAC,CAAC,CACnC,GAAA,KAAA,CAAA;AAAA,IACJ,gBAAA;AAAA,IACA,mBAAA;AAAA,IACA,WAAA;AAAA,GAGE,GAAA,KAAA,CAAA;AACJ,EAAA,MAAM,CAAC,YAAA,EAAc,oBAAoB,CAAA,GAAI,aAAc,CAAA;AAAA,IACzD,UAAY,EAAA,gBAAA,GAAmB,YAAa,CAAA,gBAAgB,CAAI,GAAA,KAAA,CAAA;AAAA,IAChE,OAAA,EAAS,aAAa,mBAAmB,CAAA;AAAA,IACzC,IAAM,EAAA,UAAA;AAAA,IACN,KAAO,EAAA,cAAA;AAAA,GACR,CAAA,CAAA;AAED,EAAA,MAAM,qBAAwB,GAAA,WAAA;AAAA,IAC5B,CAAC,IAAoB,KAAA;AACnB,MAAA,OACG,OAAW,IAAA,IAAA,IAAQ,IAAK,CAAA,OAAA,CAAQ,OAAO,CAAA,GAAI,CAC3C,IAAA,OAAA,IAAW,IAAQ,IAAA,IAAA,CAAK,OAAQ,CAAA,OAAO,CAAI,GAAA,CAAA,CAAA;AAAA,KAEhD;AAAA,IACA,CAAC,SAAS,OAAO,CAAA;AAAA,GACnB,CAAA;AAEA,EAAM,MAAA,sBAAA,GAAyB,CAAC,IAAoB,KAAA;AAClD,IAAA,OACG,WAAW,IAAQ,IAAA,UAAA,CAAW,IAAI,CAAA,CAAE,QAAQ,OAAO,CAAA,GAAI,CACvD,IAAA,OAAA,IAAW,QAAQ,YAAa,CAAA,IAAI,CAAE,CAAA,OAAA,CAAQ,OAAO,CAAI,GAAA,CAAA,CAAA;AAAA,GAE9D,CAAA;AAEA,EAAM,MAAA,qBAAA,GAAwB,CAAC,IAAoB,KAAA;AACjD,IAAA,OACG,WAAW,IAAQ,IAAA,SAAA,CAAU,IAAI,CAAA,CAAE,QAAQ,OAAO,CAAA,GAAI,CACtD,IAAA,OAAA,IAAW,QAAQ,WAAY,CAAA,IAAI,CAAE,CAAA,OAAA,CAAQ,OAAO,CAAI,GAAA,CAAA,CAAA;AAAA,GAE7D,CAAA;AAEA,EAAA,MAAM,eAAkB,GAAA,WAAA;AAAA,IACtB,CAAC,IACC,KAAA,EACE,IACC,KAAA,iBAAA,CAAkB,IAAI,CAAA,IACrB,aAAc,CAAA,IAAI,CAClB,IAAA,qBAAA,CAAsB,IAAI,CAAA,CAAA,CAAA;AAAA,IAEhC,CAAC,iBAAmB,EAAA,aAAA,EAAe,qBAAqB,CAAA;AAAA,GAC1D,CAAA;AAEA,EAAA,MAAM,mBAAmB,oBAAqB,CAAA;AAAA,IAC5C,mBAAA;AAAA,IACA,YAAA;AAAA,IACA,oBAAA;AAAA,IACA,iBACE,KAAM,CAAA,gBAAA,KAAqB,WACvB,KAAM,CAAA,eAAA,GACN,CAAC,IAAS,KAAA,IAAA;AAAA,IAChB,eACE,KAAM,CAAA,gBAAA,KAAqB,WACvB,KAAM,CAAA,aAAA,GACN,CAAC,IAAS,KAAA,IAAA;AAAA,IAChB,eAAA;AAAA,IACA,gBAAA;AAAA,IACA,mBAAA;AAAA,IACA,WAAA;AAAA,GAC4B,CAAA,CAAA;AAE9B,EAAA,MAAM,CAAC,eAAA,EAAiB,kBAAkB,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AAE5D,EAAM,MAAA,CAAC,WAAa,EAAA,mBAAmB,CAAI,GAAA,QAAA;AAAA,IACzC,aAAa,YAAY,CAAA;AAAA,GAC3B,CAAA;AAEA,EAAA,MAAM,YAAe,GAAA,WAAA;AAAA,IACnB,CAAC,IAAoB,KAAA;AACnB,MAAM,MAAA,eAAA,GAAkB,aAAa,YAAY,CAAA,CAAA;AAEjD,MAAI,IAAA,IAAA,CAAK,OAAQ,CAAA,eAAe,CAAI,GAAA,CAAA;AAAG,QAAO,OAAA,KAAA,CAAA;AAE9C,MAAM,MAAA,aAAA,GAAgB,WAAW,YAAY,CAAA,CAAA;AAE7C,MAAA,OAAO,EAAE,IAAA,CAAK,OAAQ,CAAA,aAAa,CAAI,GAAA,CAAA,CAAA,CAAA;AAAA,KACzC;AAAA,IACA,CAAC,YAAY,CAAA;AAAA,GACf,CAAA;AAEA,EAAA,MAAM,eAAkB,GAAA,WAAA;AAAA,IACtB,CAAC,OAAuB,eAA+B,KAAA;AACrD,MAAA,oBAAA,CAAqB,eAAe,CAAA,CAAA;AACpC,MAAA,oBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,oBAAA,CAAuB,KAAO,EAAA,eAAA,CAAA,CAAA;AAAA,KAChC;AAAA,IACA,CAAC,sBAAsB,oBAAoB,CAAA;AAAA,GAC7C,CAAA;AAEA,EAAA,MAAM,cAAiB,GAAA,WAAA;AAAA,IACrB,CAAC,OAAuB,IAAoB,KAAA;AAC1C,MAAA,IAAI,SAAU,CAAA,IAAA,EAAM,WAAW,CAAA,IAAK,sBAAsB,IAAI,CAAA;AAAG,QAAA,OAAA;AAEjE,MAAA,mBAAA,CAAoB,IAAI,CAAA,CAAA;AAExB,MAAM,MAAA,gBAAA,GACJ,CAAC,YAAA,CAAa,IAAI,CAAA,IAClB,gBAAgB,IAAI,CAAA,IACpB,CAAC,qBAAA,CAAsB,IAAI,CAAA,CAAA;AAC7B,MAAA,IAAI,gBAAkB,EAAA;AACpB,QAAgB,eAAA,CAAA,KAAA,EAAO,YAAa,CAAA,IAAI,CAAC,CAAA,CAAA;AAAA,OAC3C;AAAA,KACF;AAAA,IACA;AAAA,MACE,WAAA;AAAA,MACA,eAAA;AAAA,MACA,YAAA;AAAA,MACA,qBAAA;AAAA,MACA,eAAA;AAAA,KACF;AAAA,GACF,CAAA;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA,CAAC,YAAa,CAAA,WAAW,CAAG,EAAA;AAC9B,MAAoB,mBAAA,CAAA,YAAA,CAAa,YAAY,CAAC,CAAA,CAAA;AAAA,KAChD;AAAA,GACC,EAAA,CAAC,YAAc,EAAA,WAAA,EAAa,YAAY,CAAC,CAAA,CAAA;AAE5C,EAAO,OAAA;AAAA,IACL,KAAO,EAAA;AAAA,MACL,YAAA;AAAA,MACA,WAAA;AAAA,MACA,OAAA;AAAA,MACA,OAAA;AAAA,MACA,gBAAA;AAAA,MACA,mBAAA;AAAA,MACA,eAAA;AAAA,MACA,GAAG,gBAAiB,CAAA,KAAA;AAAA,KACtB;AAAA,IACA,OAAS,EAAA;AAAA,MACP,eAAA;AAAA,MACA,cAAA;AAAA,MACA,kBAAA;AAAA,MACA,iBAAA;AAAA,MACA,gBAAA;AAAA,MACA,aAAA;AAAA,MACA,YAAA;AAAA,MACA,qBAAA;AAAA,MACA,sBAAA;AAAA,MACA,qBAAA;AAAA,MACA,GAAG,gBAAiB,CAAA,OAAA;AAAA,KACtB;AAAA,GACF,CAAA;AACF;;;;"}