import { jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { makePrefixer } from '@salt-ds/core';
import { CalendarDay } from './CalendarDay.js';
import { generateVisibleDays, formatDate } from './utils.js';
import css_248z from './CalendarMonth.css.js';
import { useCalendarContext } from './CalendarContext.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';

const withBaseName = makePrefixer("saltCalendarMonth");
const CalendarMonth = forwardRef(
  function CalendarMonth2(props, ref) {
    const {
      className,
      date,
      renderDayContents,
      onMouseLeave,
      TooltipProps,
      ...rest
    } = props;
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-calendar-month",
      css: css_248z,
      window: targetWindow
    });
    const days = generateVisibleDays(date);
    const {
      helpers: { setHoveredDate }
    } = useCalendarContext();
    const handleMouseLeave = (event) => {
      setHoveredDate(event, null);
      onMouseLeave == null ? void 0 : onMouseLeave(event);
    };
    return /* @__PURE__ */ jsx("div", {
      className: clsx(withBaseName(), className),
      ref,
      onMouseLeave: handleMouseLeave,
      ...rest,
      children: /* @__PURE__ */ jsx("div", {
        "data-testid": "CalendarDateGrid",
        className: withBaseName("dateGrid"),
        children: days.map((day) => {
          return /* @__PURE__ */ jsx(CalendarDay, {
            day: day.date,
            renderDayContents,
            month: date,
            TooltipProps
          }, formatDate(day.date));
        })
      })
    });
  }
);

export { CalendarMonth };
//# sourceMappingURL=CalendarMonth.js.map
