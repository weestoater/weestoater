{"version":3,"file":"utils.js","sources":["../src/calendar/internal/utils.ts"],"sourcesContent":["import {\n  createCalendar,\n  DateFormatter,\n  DateValue,\n  getLocalTimeZone,\n  isSameMonth,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  today,\n} from \"@internationalized/date\";\n\nconst localTimezone = getLocalTimeZone();\n\nexport function getCurrentLocale() {\n  return navigator.languages[0];\n}\n\nexport function getDateFormatter(options?: Intl.DateTimeFormatOptions) {\n  return new DateFormatter(getCurrentLocale(), options);\n}\n\nexport function formatDate(\n  date: DateValue,\n  options?: Intl.DateTimeFormatOptions\n) {\n  const formatter = getDateFormatter(options);\n  return formatter.format(date.toDate(localTimezone));\n}\n\nexport function getCalender() {\n  const calendarIdentifier = getDateFormatter().resolvedOptions().calendar;\n  return createCalendar(calendarIdentifier);\n}\n\ntype WeekdayFormat = Intl.DateTimeFormatOptions[\"weekday\"];\n\nexport function daysForLocale(weekday: WeekdayFormat = \"long\") {\n  return [...Array(7).keys()].map((day) =>\n    formatDate(\n      startOfWeek(today(getLocalTimeZone()), getCurrentLocale()).add({\n        days: day,\n      }),\n      { weekday }\n    )\n  );\n}\n\nexport function monthsForLocale(currentYear: DateValue) {\n  const calendar = getCalender();\n  return [...Array(calendar.getMonthsInYear(currentYear)).keys()].map((month) =>\n    startOfYear(currentYear).add({ months: month })\n  );\n}\n\nfunction mapDate(currentDate: DateValue, currentMonth: DateValue) {\n  return {\n    date: currentDate,\n    dateOfMonth: currentDate.month,\n    isCurrentMonth: isSameMonth(currentDate, currentMonth),\n  };\n}\n\nexport function generateVisibleDays(currentMonth: DateValue) {\n  const totalDays = 6 * 7;\n  const currentLocale = getCurrentLocale();\n  const startDate = startOfWeek(startOfMonth(currentMonth), currentLocale);\n\n  return [...Array(totalDays).keys()].map((dayDelta) => {\n    const day = startDate.add({ days: dayDelta });\n    return mapDate(day, currentMonth);\n  });\n}\n\nexport function monthDiff(a: DateValue, b: DateValue) {\n  return b.month - a.month + 12 * (b.year - a.year);\n}\n"],"names":[],"mappings":";;AAYA,MAAM,gBAAgB,gBAAiB,EAAA,CAAA;AAEhC,SAAS,gBAAmB,GAAA;AACjC,EAAA,OAAO,UAAU,SAAU,CAAA,CAAA,CAAA,CAAA;AAC7B,CAAA;AAEO,SAAS,iBAAiB,OAAsC,EAAA;AACrE,EAAA,OAAO,IAAI,aAAA,CAAc,gBAAiB,EAAA,EAAG,OAAO,CAAA,CAAA;AACtD,CAAA;AAEgB,SAAA,UAAA,CACd,MACA,OACA,EAAA;AACA,EAAM,MAAA,SAAA,GAAY,iBAAiB,OAAO,CAAA,CAAA;AAC1C,EAAA,OAAO,SAAU,CAAA,MAAA,CAAO,IAAK,CAAA,MAAA,CAAO,aAAa,CAAC,CAAA,CAAA;AACpD,CAAA;AAEO,SAAS,WAAc,GAAA;AAC5B,EAAA,MAAM,kBAAqB,GAAA,gBAAA,EAAmB,CAAA,eAAA,EAAkB,CAAA,QAAA,CAAA;AAChE,EAAA,OAAO,eAAe,kBAAkB,CAAA,CAAA;AAC1C,CAAA;AAIgB,SAAA,aAAA,CAAc,UAAyB,MAAQ,EAAA;AAC7D,EAAA,OAAO,CAAC,GAAG,KAAA,CAAM,CAAC,CAAE,CAAA,IAAA,EAAM,CAAE,CAAA,GAAA;AAAA,IAAI,CAAC,GAC/B,KAAA,UAAA;AAAA,MACE,WAAA,CAAY,MAAM,gBAAiB,EAAC,GAAG,gBAAiB,EAAC,EAAE,GAAI,CAAA;AAAA,QAC7D,IAAM,EAAA,GAAA;AAAA,OACP,CAAA;AAAA,MACD,EAAE,OAAQ,EAAA;AAAA,KACZ;AAAA,GACF,CAAA;AACF,CAAA;AAEO,SAAS,gBAAgB,WAAwB,EAAA;AACtD,EAAA,MAAM,WAAW,WAAY,EAAA,CAAA;AAC7B,EAAO,OAAA,CAAC,GAAG,KAAA,CAAM,QAAS,CAAA,eAAA,CAAgB,WAAW,CAAC,CAAA,CAAE,IAAK,EAAC,CAAE,CAAA,GAAA;AAAA,IAAI,CAAC,UACnE,WAAY,CAAA,WAAW,EAAE,GAAI,CAAA,EAAE,MAAQ,EAAA,KAAA,EAAO,CAAA;AAAA,GAChD,CAAA;AACF,CAAA;AAEA,SAAS,OAAA,CAAQ,aAAwB,YAAyB,EAAA;AAChE,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,WAAA;AAAA,IACN,aAAa,WAAY,CAAA,KAAA;AAAA,IACzB,cAAA,EAAgB,WAAY,CAAA,WAAA,EAAa,YAAY,CAAA;AAAA,GACvD,CAAA;AACF,CAAA;AAEO,SAAS,oBAAoB,YAAyB,EAAA;AAC3D,EAAA,MAAM,YAAY,CAAI,GAAA,CAAA,CAAA;AACtB,EAAA,MAAM,gBAAgB,gBAAiB,EAAA,CAAA;AACvC,EAAA,MAAM,SAAY,GAAA,WAAA,CAAY,YAAa,CAAA,YAAY,GAAG,aAAa,CAAA,CAAA;AAEvE,EAAO,OAAA,CAAC,GAAG,KAAA,CAAM,SAAS,CAAA,CAAE,MAAM,CAAA,CAAE,GAAI,CAAA,CAAC,QAAa,KAAA;AACpD,IAAA,MAAM,MAAM,SAAU,CAAA,GAAA,CAAI,EAAE,IAAA,EAAM,UAAU,CAAA,CAAA;AAC5C,IAAO,OAAA,OAAA,CAAQ,KAAK,YAAY,CAAA,CAAA;AAAA,GACjC,CAAA,CAAA;AACH,CAAA;AAEgB,SAAA,SAAA,CAAU,GAAc,CAAc,EAAA;AACpD,EAAA,OAAO,EAAE,KAAQ,GAAA,CAAA,CAAE,QAAQ,EAAM,IAAA,CAAA,CAAE,OAAO,CAAE,CAAA,IAAA,CAAA,CAAA;AAC9C;;;;"}