{"version":3,"file":"useSelection.js","sources":["../src/calendar/useSelection.ts"],"sourcesContent":["import { makePrefixer, useControlled } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { KeyboardEventHandler, MouseEventHandler, SyntheticEvent } from \"react\";\nimport { isPlainObject } from \"../utils\";\nimport { useCalendarContext } from \"./internal/CalendarContext\";\nimport { CalendarDate, DateValue, isSameDay } from \"@internationalized/date\";\n\ninterface BaseUseSelectionCalendarProps<SelectionVariantType> {\n  hoveredDate?: DateValue | null;\n  selectedDate?: SelectionVariantType | null;\n  defaultSelectedDate?: SelectionVariantType;\n  onSelectedDateChange?: (\n    event: SyntheticEvent,\n    selectedDate: SelectionVariantType\n  ) => void;\n  isDaySelectable: (date?: DateValue) => boolean;\n  onHoveredDateChange?: (\n    event: SyntheticEvent,\n    hoveredDate: DateValue | null\n  ) => void;\n}\n\ntype SingleSelectionValueType = DateValue;\ntype MultiSelectionValueType = DateValue[];\ntype RangeSelectionValueType = {\n  startDate?: DateValue;\n  endDate?: DateValue;\n};\ntype OffsetSelectionValueType = {\n  startDate?: DateValue;\n  endDate?: DateValue;\n};\n\ntype AllSelectionValueType =\n  | SingleSelectionValueType\n  | MultiSelectionValueType\n  | RangeSelectionValueType\n  | OffsetSelectionValueType\n  | null;\n\nexport interface UseOffsetSelectionCalendarProps\n  extends Omit<\n    BaseUseSelectionCalendarProps<OffsetSelectionValueType>,\n    \"startDateOffset\" | \"endDateOffset\"\n  > {\n  selectionVariant: \"offset\";\n  startDateOffset?: (date: DateValue) => DateValue;\n  endDateOffset?: (date: DateValue) => DateValue;\n}\n\nexport interface UseRangeSelectionCalendarProps\n  extends BaseUseSelectionCalendarProps<RangeSelectionValueType> {\n  selectionVariant: \"range\";\n}\n\nexport interface UseMultiSelectionCalendarProps\n  extends BaseUseSelectionCalendarProps<MultiSelectionValueType> {\n  selectionVariant: \"multiselect\";\n}\n\nexport interface UseSingleSelectionCalendarProps\n  extends BaseUseSelectionCalendarProps<SingleSelectionValueType> {\n  selectionVariant: \"default\";\n}\n\nexport type useSelectionCalendarProps =\n  | UseSingleSelectionCalendarProps\n  | UseMultiSelectionCalendarProps\n  | UseRangeSelectionCalendarProps\n  | UseOffsetSelectionCalendarProps;\n\nfunction addOrRemoveFromArray(\n  array: AllSelectionValueType | null = [],\n  item: DateValue\n) {\n  if (Array.isArray(array)) {\n    if (array.find((element) => isSameDay(element, item))) {\n      return array.filter((element) => !isSameDay(element, item));\n    }\n    return array.concat(item);\n  }\n  return [item];\n}\n\nconst defaultOffset = (date: DateValue) => date;\n\nfunction isRangeOrOffsetSelectionValue(\n  selectionValue?: AllSelectionValueType\n): selectionValue is RangeSelectionValueType | OffsetSelectionValueType {\n  return selectionValue != null && isPlainObject(selectionValue);\n}\n\nconst withBaseName = makePrefixer(\"saltCalendarDay\");\n\nexport function useSelectionCalendar(props: useSelectionCalendarProps) {\n  const {\n    hoveredDate: hoveredDateProp,\n    selectedDate: selectedDateProp,\n    defaultSelectedDate,\n    // onSelectedDateChange,\n    onHoveredDateChange,\n    isDaySelectable,\n    selectionVariant,\n    // startDateOffset,\n    // endDateOffset,\n  } = props;\n  const [selectedDate, setSelectedDateState] = useControlled({\n    controlled: selectedDateProp,\n    default: defaultSelectedDate,\n    name: \"Calendar\",\n    state: \"selectedDate\",\n  });\n\n  const getStartDateOffset = (date: DateValue) => {\n    if (props.selectionVariant === \"offset\" && props.startDateOffset) {\n      return props.startDateOffset(date);\n    } else {\n      return defaultOffset(date);\n    }\n  };\n\n  const getEndDateOffset = (date: DateValue) => {\n    if (props.selectionVariant === \"offset\" && props.endDateOffset) {\n      return props.endDateOffset(date);\n    } else {\n      return defaultOffset(date);\n    }\n  };\n\n  const setSelectedDate = (\n    event: SyntheticEvent<HTMLButtonElement>,\n    newSelectedDate: DateValue\n  ) => {\n    if (isDaySelectable(newSelectedDate)) {\n      switch (props.selectionVariant) {\n        case \"default\":\n          setSelectedDateState(newSelectedDate);\n          props.onSelectedDateChange?.(event, newSelectedDate);\n          break;\n        case \"multiselect\":\n          const newDates = addOrRemoveFromArray(selectedDate, newSelectedDate);\n          setSelectedDateState(newDates);\n          props.onSelectedDateChange?.(event, newDates);\n          break;\n        case \"range\":\n          let base = selectedDate;\n          if (isRangeOrOffsetSelectionValue(base)) {\n            if (base?.startDate && base?.endDate) {\n              base = { startDate: newSelectedDate };\n            } else if (\n              base?.startDate &&\n              newSelectedDate.compare(base.startDate) > 0\n            ) {\n              base = { ...base, endDate: newSelectedDate };\n            } else {\n              base = { startDate: newSelectedDate };\n            }\n          } else {\n            base = { startDate: newSelectedDate };\n          }\n          setSelectedDateState(base);\n          props.onSelectedDateChange?.(event, base);\n          break;\n        case \"offset\":\n          const newRange = {\n            startDate: getStartDateOffset(newSelectedDate),\n            endDate: getEndDateOffset(newSelectedDate),\n          };\n          setSelectedDateState(newRange);\n          props.onSelectedDateChange?.(event, newRange);\n      }\n    }\n  };\n\n  const isSelected = (date: DateValue) => {\n    switch (selectionVariant) {\n      case \"default\":\n        return (\n          selectedDate instanceof CalendarDate && isSameDay(selectedDate, date)\n        );\n      case \"multiselect\":\n        return (\n          Array.isArray(selectedDate) &&\n          !!selectedDate.find((element) => isSameDay(element, date))\n        );\n      default:\n        return false;\n    }\n  };\n\n  const [hoveredDate, setHoveredDateState] = useControlled({\n    controlled: hoveredDateProp,\n    default: undefined,\n    name: \"Calendar\",\n    state: \"hoveredDate\",\n  });\n\n  const setHoveredDate = (event: SyntheticEvent, date: DateValue | null) => {\n    setHoveredDateState(date);\n    onHoveredDateChange?.(event, date);\n  };\n\n  const isHovered = (date: DateValue) => {\n    return !!hoveredDate && isSameDay(date, hoveredDate);\n  };\n\n  const isSelectedSpan = (date: DateValue) => {\n    if (\n      (selectionVariant === \"range\" || selectionVariant === \"offset\") &&\n      isRangeOrOffsetSelectionValue(selectedDate) &&\n      selectedDate?.startDate &&\n      selectedDate?.endDate\n    ) {\n      return (\n        date.compare(selectedDate.startDate) > 0 &&\n        date.compare(selectedDate.endDate) < 0\n      );\n    }\n    return false;\n  };\n  const isHoveredSpan = (date: DateValue) => {\n    if (\n      (selectionVariant === \"range\" || selectionVariant === \"offset\") &&\n      isRangeOrOffsetSelectionValue(selectedDate) &&\n      selectedDate.startDate &&\n      !selectedDate.endDate &&\n      hoveredDate\n    ) {\n      const isForwardRange =\n        hoveredDate.compare(selectedDate.startDate) > 0 &&\n        ((date.compare(selectedDate.startDate) > 0 &&\n          date.compare(hoveredDate) < 0) ||\n          isSameDay(date, hoveredDate));\n\n      const isValidDayHovered = isDaySelectable(hoveredDate);\n\n      return isForwardRange && isValidDayHovered;\n    }\n    return false;\n  };\n\n  const isSelectedStart = (date: DateValue) => {\n    if (\n      (selectionVariant === \"range\" || selectionVariant === \"offset\") &&\n      isRangeOrOffsetSelectionValue(selectedDate) &&\n      selectedDate.startDate\n    ) {\n      return isSameDay(selectedDate.startDate, date);\n    }\n    return false;\n  };\n\n  const isSelectedEnd = (date: DateValue) => {\n    if (\n      (selectionVariant === \"range\" || selectionVariant === \"offset\") &&\n      isRangeOrOffsetSelectionValue(selectedDate) &&\n      selectedDate.endDate\n    ) {\n      return isSameDay(selectedDate.endDate, date);\n    }\n    return false;\n  };\n\n  const isHoveredOffset = (date: DateValue) => {\n    if (hoveredDate && selectionVariant === \"offset\") {\n      const startDate = getStartDateOffset(hoveredDate);\n      const endDate = getEndDateOffset(hoveredDate);\n\n      return (\n        date.compare(startDate) >= 0 &&\n        date.compare(endDate) <= 0 &&\n        isDaySelectable(date)\n      );\n    }\n\n    return false;\n  };\n\n  return {\n    state: {\n      selectedDate,\n      hoveredDate,\n    },\n    helpers: {\n      setSelectedDate,\n      isSelected,\n      setHoveredDate,\n      isHovered,\n      isSelectedSpan,\n      isHoveredSpan,\n      isSelectedStart,\n      isSelectedEnd,\n      isHoveredOffset,\n    },\n  };\n}\n\nexport function useSelectionDay({ date }: { date: DateValue }) {\n  const {\n    helpers: {\n      setSelectedDate,\n      isSelected,\n      setHoveredDate,\n      isSelectedSpan,\n      isHoveredSpan,\n      isSelectedStart,\n      isSelectedEnd,\n      isHovered,\n      isHoveredOffset,\n      isDayUnselectable,\n    },\n  } = useCalendarContext();\n\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (event) => {\n    setSelectedDate(event, date);\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLButtonElement> = (event) => {\n    switch (event.key) {\n      case \"Space\":\n      case \"Enter\":\n        setSelectedDate(event, date);\n        event.preventDefault();\n    }\n  };\n\n  const handleMouseOver: MouseEventHandler<HTMLButtonElement> = (event) => {\n    setHoveredDate(event, date);\n  };\n\n  const handleMouseLeave: MouseEventHandler<HTMLButtonElement> = (event) => {\n    setHoveredDate(event, null);\n  };\n\n  const selected = isSelected(date);\n  const selectedSpan = isSelectedSpan(date);\n  const hoveredSpan = isHoveredSpan(date);\n  const selectedStart = isSelectedStart(date);\n  const selectedEnd = isSelectedEnd(date);\n  const hovered = isHovered(date);\n  const hoveredOffset = isHoveredOffset(date);\n\n  return {\n    handleClick,\n    handleKeyDown,\n    handleMouseOver,\n    handleMouseLeave,\n    status: {\n      selected,\n      selectedSpan,\n      hoveredSpan,\n      selectedStart,\n      selectedEnd,\n      hovered,\n      hoveredOffset,\n    },\n    dayProps: {\n      className: clsx({\n        [withBaseName(\"selected\")]: selected,\n        [withBaseName(\"selectedSpan\")]: selectedSpan,\n        [withBaseName(\"hoveredSpan\")]: hoveredSpan,\n        [withBaseName(\"selectedStart\")]: selectedStart,\n        [withBaseName(\"selectedEnd\")]: selectedEnd,\n        [withBaseName(\"hovered\")]: hovered,\n        [withBaseName(\"hoveredOffset\")]: hoveredOffset,\n      }),\n      \"aria-pressed\":\n        selected || selectedEnd || selectedStart || selectedSpan\n          ? \"true\"\n          : undefined,\n      \"aria-disabled\": !!isDayUnselectable(date) ? \"true\" : undefined,\n    },\n  };\n}\n"],"names":[],"mappings":"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"}