import { jsxs, jsx } from 'react/jsx-runtime';
import { useCallback } from 'react';
import { makePrefixer } from '@salt-ds/core';
import '../../list/Highlighter.js';
import { ListItem } from '../../list/ListItem.js';
import { List } from '../../list/List.js';
import { ListItemGroup } from '../../list/ListItemGroup.js';
import '../../common-hooks/collectionProvider.js';
import '../../common-hooks/keyUtils.js';
import '../../responsive/useResizeObserver.js';
import '../../list/VirtualizedList.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from '../QueryInput.css.js';

const withBaseName = makePrefixer("saltQueryInputSearchList");
function itemToString(item) {
  return [item.category, item.value].join(": ");
}
function SearchList(props) {
  const {
    inputValue,
    selectedItems,
    onChange: onChangeProp,
    rootWidth,
    highlightedIndex,
    setHighlightedIndex,
    visibleCategories
  } = props;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-query-input",
    css: css_248z,
    window: targetWindow
  });
  const onChange = useCallback(
    (event, items) => {
      onChangeProp(items || []);
    },
    [onChangeProp]
  );
  return /* @__PURE__ */ jsxs(List, {
    checkable: false,
    "data-testid": "search-list",
    highlightedIndex,
    itemTextHighlightPattern: inputValue,
    itemToString,
    onHighlight: setHighlightedIndex,
    onSelectionChange: onChange,
    selectionStrategy: "multiple",
    selected: selectedItems,
    width: rootWidth,
    children: [
      visibleCategories.map((inputCategory) => {
        return /* @__PURE__ */ jsx(ListItemGroup, {
          label: inputCategory.name,
          children: inputCategory.values.map((label) => /* @__PURE__ */ jsx(ListItem, {
            label
          }, label))
        }, inputCategory.name);
      }),
      /* @__PURE__ */ jsx(ListItem, {
        className: withBaseName("addKeyword"),
        children: `Add keyword: "${inputValue}"`
      })
    ]
  });
}

export { SearchList };
//# sourceMappingURL=SearchList.js.map
