import { jsxs, jsx } from 'react/jsx-runtime';
import { makePrefixer } from '@salt-ds/core';
import { ChevronRightIcon } from '@salt-ds/icons';
import { useRef, useMemo } from 'react';
import '../../list/Highlighter.js';
import { ListItem } from '../../list/ListItem.js';
import '../../list/List.js';
import '../../common-hooks/collectionProvider.js';
import '../../common-hooks/keyUtils.js';
import '../../responsive/useResizeObserver.js';
import '../../list/VirtualizedList.js';
import { useCategoryListContext } from './CategoryListContext.js';

const withBaseName = makePrefixer("saltCategoryListItem");
const CategoryListItem = function CategoryListItem2({ item: category, ...props }) {
  const textRef = useRef(null);
  const context = useCategoryListContext();
  const textStyle = useMemo(
    () => ({
      minWidth: context.width
    }),
    [context.width]
  );
  return /* @__PURE__ */ jsxs(ListItem, {
    ...props,
    label: category == null ? void 0 : category.name,
    children: [
      /* @__PURE__ */ jsx("div", {
        ref: textRef,
        className: withBaseName("text"),
        style: textStyle,
        children: category == null ? void 0 : category.name
      }),
      /* @__PURE__ */ jsxs("div", {
        className: withBaseName("valuesContainer"),
        children: [
          /* @__PURE__ */ jsx("span", {
            children: "("
          }),
          /* @__PURE__ */ jsx("span", {
            className: withBaseName("values"),
            children: category == null ? void 0 : category.values.join(", ")
          }),
          /* @__PURE__ */ jsx("span", {
            children: ")"
          })
        ]
      }),
      /* @__PURE__ */ jsx(ChevronRightIcon, {
        className: withBaseName("chevron")
      })
    ]
  });
};

export { CategoryListItem };
//# sourceMappingURL=CategoryListItem.js.map
