{"version":3,"file":"ParentChildLayout.js","sources":["../src/parent-child-layout/ParentChildLayout.tsx"],"sourcesContent":["import {\n  Breakpoints,\n  FlexLayout,\n  FlexItem,\n  FlexLayoutProps,\n  makePrefixer,\n} from \"@salt-ds/core\";\n\nimport { clsx } from \"clsx\";\nimport { forwardRef, ReactNode, useEffect } from \"react\";\nimport { useIsViewportLargerThanBreakpoint } from \"../utils\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport parentChildLayoutCss from \"./ParentChildLayout.css\";\n\nexport type StackedViewElement = \"parent\" | \"child\";\n\nexport interface ParentChildLayoutProps extends FlexLayoutProps<\"div\"> {\n  /**\n   * Breakpoint at which the parent and child will stack.\n   */\n  collapseAtBreakpoint?: keyof Breakpoints;\n  /**\n   * Change element that is displayed when in staked view.\n   */\n  collapsedViewElement?: StackedViewElement;\n  /**\n   * Disable all animations.\n   */\n  disableAnimations?: boolean;\n  /**\n   * Position of the parent component within the layout.\n   */\n  parentPosition?: \"left\" | \"right\";\n  /**\n   * Parent component to be rendered\n   */\n  parent: ReactNode;\n  /**\n   * Child component to be rendered\n   */\n  child: ReactNode;\n  onCollapseChange?: (isCollapsed: boolean) => void;\n}\n\nconst withBaseName = makePrefixer(\"saltParentChildLayout\");\n\nexport const ParentChildLayout = forwardRef<\n  HTMLDivElement,\n  ParentChildLayoutProps\n>(function ParentChildLayout(\n  {\n    collapseAtBreakpoint = \"sm\",\n    collapsedViewElement = \"parent\",\n    disableAnimations = false,\n    parentPosition = \"left\",\n    parent,\n    child,\n    gap = 0,\n    className,\n    onCollapseChange,\n    ...rest\n  },\n  ref\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-parent-child-layout\",\n    css: parentChildLayoutCss,\n    window: targetWindow,\n  });\n\n  const isCollapsed = useIsViewportLargerThanBreakpoint(collapseAtBreakpoint);\n\n  const collapsedViewChildren = {\n    parent: (\n      <FlexItem\n        className={clsx(withBaseName(\"parent\"), {\n          [\"saltFlexItem-stacked\"]: isCollapsed,\n        })}\n      >\n        {parent}\n      </FlexItem>\n    ),\n    child: (\n      <FlexItem\n        className={clsx(withBaseName(\"child\"), {\n          [\"saltFlexItem-stacked\"]: isCollapsed,\n        })}\n      >\n        {child}\n      </FlexItem>\n    ),\n  };\n\n  useEffect(() => {\n    onCollapseChange?.(isCollapsed);\n  }, [isCollapsed, onCollapseChange]);\n\n  return (\n    <FlexLayout\n      ref={ref}\n      className={clsx(\n        withBaseName(),\n        {\n          [withBaseName(`no-animations`)]: disableAnimations,\n          [withBaseName(`reversed`)]: parentPosition === \"right\",\n        },\n        className\n      )}\n      gap={gap}\n      {...rest}\n    >\n      {isCollapsed ? (\n        collapsedViewChildren[collapsedViewElement]\n      ) : (\n        <>\n          <FlexItem grow={0}>{parent}</FlexItem>\n          <FlexItem grow={2}>{child}</FlexItem>\n        </>\n      )}\n    </FlexLayout>\n  );\n});\n"],"names":["ParentChildLayout","parentChildLayoutCss"],"mappings":";;;;;;;;;AA+CA,MAAM,YAAA,GAAe,aAAa,uBAAuB,CAAA,CAAA;AAE5C,MAAA,iBAAA,GAAoB,UAG/B,CAAA,SAASA,kBACT,CAAA;AAAA,EACE,oBAAuB,GAAA,IAAA;AAAA,EACvB,oBAAuB,GAAA,QAAA;AAAA,EACvB,iBAAoB,GAAA,KAAA;AAAA,EACpB,cAAiB,GAAA,MAAA;AAAA,EACjB,MAAA;AAAA,EACA,KAAA;AAAA,EACA,GAAM,GAAA,CAAA;AAAA,EACN,SAAA;AAAA,EACA,gBAAA;AAAA,EACG,GAAA,IAAA;AACL,CAAA,EACA,GACA,EAAA;AACA,EAAA,MAAM,eAAe,SAAU,EAAA,CAAA;AAC/B,EAAyB,wBAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,0BAAA;AAAA,IACR,GAAK,EAAAC,QAAA;AAAA,IACL,MAAQ,EAAA,YAAA;AAAA,GACT,CAAA,CAAA;AAED,EAAM,MAAA,WAAA,GAAc,kCAAkC,oBAAoB,CAAA,CAAA;AAE1E,EAAA,MAAM,qBAAwB,GAAA;AAAA,IAC5B,wBACG,GAAA,CAAA,QAAA,EAAA;AAAA,MACC,SAAW,EAAA,IAAA,CAAK,YAAa,CAAA,QAAQ,CAAG,EAAA;AAAA,QACtC,CAAC,sBAAyB,GAAA,WAAA;AAAA,OAC3B,CAAA;AAAA,MAEA,QAAA,EAAA,MAAA;AAAA,KACH,CAAA;AAAA,IAEF,uBACG,GAAA,CAAA,QAAA,EAAA;AAAA,MACC,SAAW,EAAA,IAAA,CAAK,YAAa,CAAA,OAAO,CAAG,EAAA;AAAA,QACrC,CAAC,sBAAyB,GAAA,WAAA;AAAA,OAC3B,CAAA;AAAA,MAEA,QAAA,EAAA,KAAA;AAAA,KACH,CAAA;AAAA,GAEJ,CAAA;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAmB,gBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAA,WAAA,CAAA,CAAA;AAAA,GAClB,EAAA,CAAC,WAAa,EAAA,gBAAgB,CAAC,CAAA,CAAA;AAElC,EAAA,uBACG,GAAA,CAAA,UAAA,EAAA;AAAA,IACC,GAAA;AAAA,IACA,SAAW,EAAA,IAAA;AAAA,MACT,YAAa,EAAA;AAAA,MACb;AAAA,QACE,CAAC,YAAa,CAAA,CAAA,aAAA,CAAe,CAAI,GAAA,iBAAA;AAAA,QACjC,CAAC,YAAA,CAAa,CAAU,QAAA,CAAA,CAAA,GAAI,cAAmB,KAAA,OAAA;AAAA,OACjD;AAAA,MACA,SAAA;AAAA,KACF;AAAA,IACA,GAAA;AAAA,IACC,GAAG,IAAA;AAAA,IAEH,QAAA,EAAA,WAAA,GACC,sBAAsB,oBAEtB,CAAA,mBAAA,IAAA,CAAA,QAAA,EAAA;AAAA,MACE,QAAA,EAAA;AAAA,wBAAC,GAAA,CAAA,QAAA,EAAA;AAAA,UAAS,IAAM,EAAA,CAAA;AAAA,UAAI,QAAA,EAAA,MAAA;AAAA,SAAO,CAAA;AAAA,wBAC1B,GAAA,CAAA,QAAA,EAAA;AAAA,UAAS,IAAM,EAAA,CAAA;AAAA,UAAI,QAAA,EAAA,KAAA;AAAA,SAAM,CAAA;AAAA,OAAA;AAAA,KAC5B,CAAA;AAAA,GAEJ,CAAA,CAAA;AAEJ,CAAC;;;;"}