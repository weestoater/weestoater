import { useRef, useEffect } from 'react';

const defaultTriggerEvents = ["mousedown"];
function useClickOutside(handler, triggerEvents, containers) {
  const ref = useRef(null);
  useEffect(() => {
    const handleEvent = (event) => {
      var _a;
      if (Array.isArray(containers)) {
        const shouldCallHandler = containers.every((node) => {
          return !(node == null ? void 0 : node.contains(event.target));
        });
        shouldCallHandler && handler();
      } else if (!((_a = ref.current) == null ? void 0 : _a.contains(event.target))) {
        handler();
      }
    };
    const events = triggerEvents != null ? triggerEvents : defaultTriggerEvents;
    events.forEach((event) => {
      document.addEventListener(event, handleEvent);
    });
    return () => {
      events.forEach((event) => {
        document.removeEventListener(event, handleEvent);
      });
    };
  }, [handler, containers, triggerEvents]);
  return ref;
}

export { useClickOutside };
//# sourceMappingURL=useClickOutside.js.map
