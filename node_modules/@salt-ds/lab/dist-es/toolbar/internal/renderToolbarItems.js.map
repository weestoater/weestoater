{"version":3,"file":"renderToolbarItems.js","sources":["../src/toolbar/internal/renderToolbarItems.tsx"],"sourcesContent":["import React, { HTMLAttributes, ReactElement } from \"react\";\n\nimport { ToolbarAlignmentProps } from \"../ToolbarProps\";\nimport { ToolbarField, ToolbarFieldProps } from \"../toolbar-field\";\n\nimport { Tooltray } from \"../Tooltray\";\n\nimport {\n  isCollapsedOrCollapsing,\n  liftResponsivePropsToFormField,\n  orientationType,\n  OverflowCollectionHookResult,\n  OverflowItem,\n} from \"../../responsive\";\n\n// These are the props we use for item alignment, either from individual element\n// declarations - e.g Tooltray (alignLeft etc) or generic data- attributes\ninterface ToolbarElementProps\n  extends ToolbarAlignmentProps,\n    HTMLAttributes<HTMLDivElement> {\n  \"data-align-center\"?: boolean;\n  \"data-align-end\"?: boolean;\n  \"data-align-start\"?: boolean;\n  \"data-priority\"?: number;\n}\n\nexport const renderToolbarItems = (\n  collectionHook: OverflowCollectionHookResult,\n  overflowedItems: OverflowItem[] = [],\n  orientation: orientationType\n): JSX.Element[] => {\n  let centerAlign = false;\n  let rightAlign = false;\n\n  const items = collectionHook.data;\n  const collapseItems = items.filter(isCollapsedOrCollapsing);\n\n  return items\n    .filter((item) => !item.isOverflowIndicator)\n    .map((item: OverflowItem, index) => {\n      const props = item.element.props as ToolbarElementProps;\n      const overflowed =\n        overflowedItems.findIndex((item) => item.index === index) === -1\n          ? undefined\n          : true;\n      const collapseItem = collapseItems.find((item) => item.index === index);\n      const collapsed = collapseItem?.collapsed || undefined;\n      const collapsing = collapseItem?.collapsing || undefined;\n\n      const {\n        alignCenter: alignCenterProp,\n        alignEnd: alignEndProp,\n        alignStart: alignStartProp,\n        \"data-align-center\": alignCenter = alignCenterProp,\n        \"data-align-end\": alignEnd = alignEndProp,\n        \"data-align-start\": alignStart = alignStartProp,\n      } = props;\n\n      let dataPadStart = false;\n      let dataPadEnd = false;\n      if (alignCenter && !centerAlign) {\n        centerAlign = true;\n        dataPadStart = true;\n      } else if (centerAlign && !alignCenter) {\n        rightAlign = true;\n        dataPadStart = true;\n      } else if (alignEnd && !rightAlign) {\n        rightAlign = true;\n        dataPadStart = true;\n      } else if (alignStart) {\n        dataPadEnd = true;\n      }\n\n      const toolbarItemProps = {\n        id: item.id,\n        key: item.id,\n        \"data-index\": index,\n        \"data-priority\": props[\"data-priority\"] ?? 2,\n        \"data-pad-start\": dataPadStart || undefined,\n        \"data-pad-end\": dataPadEnd || undefined,\n        \"data-collapsed\": collapsed,\n        \"data-collapsing\": collapsing,\n        \"data-overflowed\": overflowed,\n        orientation,\n      };\n\n      if (item.element.type === Tooltray) {\n        return React.cloneElement(item.element, toolbarItemProps);\n      } else {\n        switch (item.element.type) {\n          case ToolbarField:\n            const props = item.element.props as ToolbarFieldProps;\n            return React.cloneElement(item.element, {\n              ...toolbarItemProps,\n              children: React.cloneElement(props.children as ReactElement, {\n                // Inject an id that nested Control can use to query status via context\n                id: `toolbar-control-${item.id}`,\n              }),\n            } as ToolbarFieldProps);\n          default:\n            const [responsiveProps, componentProps] =\n              liftResponsivePropsToFormField(item.element.props);\n\n            return (\n              <ToolbarField {...responsiveProps} {...toolbarItemProps}>\n                {React.cloneElement(item.element, {\n                  ...componentProps,\n                  // Inject an id that nested Control can use to query status via context\n                  id: `toolbar-control-${item.id}`,\n                })}\n              </ToolbarField>\n            );\n        }\n      }\n    });\n};\n"],"names":["item","props"],"mappings":"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"}