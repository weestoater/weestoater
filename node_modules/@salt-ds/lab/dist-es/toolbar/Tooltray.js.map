{"version":3,"file":"Tooltray.js","sources":["../src/toolbar/Tooltray.tsx"],"sourcesContent":["import { useIdMemo } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { cloneElement } from \"react\";\nimport { OverflowPanel } from \"./overflow-panel/OverflowPanel\";\n\nimport { TooltrayProps } from \"./TooltrayProps\";\n\nimport { useOverflowCollectionItems } from \"../responsive/useOverflowCollectionItems\";\nimport { useOverflowLayout } from \"../responsive/useOverflowLayout\";\n\nimport { renderTrayTools } from \"./internal/renderTrayTools\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport tooltrayCss from \"./Tooltray.css\";\n\nexport const Tooltray = (props: TooltrayProps) => {\n  const {\n    \"aria-label\": ariaLabel,\n    // Tooltray itself doesn't use these alignment props directly,\n    // they are read and used by the parent Toolbar\n    alignEnd,\n    alignStart,\n    children,\n    className: classNameProp,\n    collapse: collapseProp,\n    collapsed: collapsedProp,\n    \"data-collapsible\": collapse = collapseProp,\n    \"data-collapsed\": collapsed = collapsedProp,\n    id: idProp,\n    isInsidePanel = false,\n    overflowButtonIcon,\n    overflowButtonLabel,\n    orientation = \"horizontal\",\n    ...rest\n  } = props;\n\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-tooltray\",\n    css: tooltrayCss,\n    window: targetWindow,\n  });\n  const tooltrayId = useIdMemo(idProp);\n\n  const className = clsx(\n    \"saltTooltray\",\n    classNameProp,\n    `saltTooltray-${orientation}`,\n    { \"saltTooltray-tooltrayOverflowed\": isInsidePanel }\n  );\n\n  const collectionHook = useOverflowCollectionItems({\n    children,\n    id: tooltrayId,\n    label: \"Tooltray\",\n    orientation,\n  });\n\n  const [innerContainerRef] = useOverflowLayout({\n    collectionHook,\n    id: tooltrayId,\n    orientation,\n    label: \"Tooltray\",\n  });\n  const overflowedItems = collapsed\n    ? collectionHook.data.filter((item) => !item.isOverflowIndicator)\n    : collectionHook.data.filter((item) => item.overflowed);\n\n  const overflowMenuItems = overflowedItems\n    .map((i) =>\n      cloneElement(collectionHook.data[i.index].element, {\n        \"data-is-inside-panel\": true,\n        key: i.index,\n      })\n    )\n    .reverse();\n\n  const overflowIndicator = collectionHook.data.find(\n    (i) => i.isOverflowIndicator\n  );\n\n  // bring them back when we get into overflow\n  const tooltrayProps = {\n    className,\n    \"data-collapsed\": collapsed,\n    \"data-collapsible\": collapse,\n  };\n\n  return (\n    <div {...rest} {...tooltrayProps} id={tooltrayId}>\n      <div className={clsx(\"Responsive-inner\")} ref={innerContainerRef}>\n        {renderTrayTools(\n          collectionHook,\n          overflowedItems,\n          orientation,\n          collapsed\n        )}\n        {overflowIndicator || collapsed ? (\n          <OverflowPanel\n            className={clsx(\"saltToolbarField\")}\n            data-index={collectionHook.data.length}\n            data-overflow-indicator\n            data-priority={1}\n            id={overflowIndicator?.id}\n            triggerButtonIcon={overflowButtonIcon}\n            triggerButtonLabel={overflowButtonLabel}\n          >\n            {overflowMenuItems}\n          </OverflowPanel>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n"],"names":["tooltrayCss"],"mappings":"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"}