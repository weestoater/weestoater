import { jsx } from 'react/jsx-runtime';
import { createContext, useMemo, useContext } from 'react';

const defaultSteppedTrackerContext = {
  activeStep: 0,
  totalSteps: 1,
  isWithinSteppedTracker: false
};
const SteppedTrackerContext = createContext(
  defaultSteppedTrackerContext
);
const SteppedTrackerProvider = ({
  activeStep,
  totalSteps,
  children
}) => {
  const steppedTrackerContextValue = useMemo(
    () => ({
      activeStep,
      totalSteps,
      isWithinSteppedTracker: true
    }),
    [activeStep, totalSteps]
  );
  return /* @__PURE__ */ jsx(SteppedTrackerContext.Provider, {
    value: steppedTrackerContextValue,
    children
  });
};
const useSteppedTrackerContext = () => useContext(SteppedTrackerContext);
const TrackerStepContext = createContext(0);
const useTrackerStepContext = () => useContext(TrackerStepContext);
const TrackerStepProvider = ({
  children,
  stepNumber
}) => {
  return /* @__PURE__ */ jsx(TrackerStepContext.Provider, {
    value: stepNumber,
    children
  });
};

export { SteppedTrackerProvider, TrackerStepProvider, useSteppedTrackerContext, useTrackerStepContext };
//# sourceMappingURL=SteppedTrackerContext.js.map
