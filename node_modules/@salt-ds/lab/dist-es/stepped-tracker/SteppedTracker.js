import { jsx } from 'react/jsx-runtime';
import { forwardRef, Children, useEffect, isValidElement } from 'react';
import { clsx } from 'clsx';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { makePrefixer } from '@salt-ds/core';
import { SteppedTrackerProvider, TrackerStepProvider } from './SteppedTrackerContext.js';
import css_248z from './SteppedTracker.css.js';

const withBaseName = makePrefixer("saltSteppedTracker");
const useCheckInvalidChildren = (children) => {
  useEffect(() => {
    if (process.env.NODE_ENV !== "production") {
      let hasInvalidChild = false;
      Children.forEach(children, (child) => {
        if (!isValidElement(child)) {
          hasInvalidChild = true;
        }
      });
      if (hasInvalidChild) {
        console.error(
          "Invalid child: children of SteppedTracker must be a TrackerStep component"
        );
      }
    }
  }, [children]);
};
const SteppedTracker = forwardRef(
  function SteppedTracker2({
    children,
    className,
    activeStep,
    orientation = "horizontal",
    ...restProps
  }, ref) {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-stepped-tracker",
      css: css_248z,
      window: targetWindow
    });
    useCheckInvalidChildren(children);
    const totalSteps = Children.count(children);
    return /* @__PURE__ */ jsx(SteppedTrackerProvider, {
      totalSteps,
      activeStep,
      children: /* @__PURE__ */ jsx("ul", {
        className: clsx(withBaseName(), className, withBaseName(orientation)),
        ref,
        ...restProps,
        children: Children.map(children, (child, i) => /* @__PURE__ */ jsx(TrackerStepProvider, {
          stepNumber: i,
          children: child
        }))
      })
    });
  }
);

export { SteppedTracker };
//# sourceMappingURL=SteppedTracker.js.map
