{"version":3,"file":"useOverflowCollectionItems.js","sources":["../src/responsive/useOverflowCollectionItems.ts"],"sourcesContent":["import {\n  useCallback,\n  useReducer,\n  useRef,\n  Children,\n  ReactElement,\n  ReactNode,\n  isValidElement,\n} from \"react\";\nimport { useIsomorphicLayoutEffect } from \"@salt-ds/core\";\n\nimport {\n  OverflowItem,\n  OverflowCollectionOptions,\n  OverflowCollectionHookProps,\n  OverflowCollectionHookResult,\n  OverflowSource,\n} from \"./overflowTypes\";\nimport { measureOverflowItems } from \"./overflowUtils\";\nimport {\n  reducerInitialiser,\n  OverflowAction,\n  overflowReducer,\n  OverflowReducer,\n  OverflowReducerInitialisationProps,\n} from \"./OverflowReducer\";\n\nconst defaultOptions: OverflowCollectionOptions = {};\n\ntype WithLabel = { label?: string };\n\nconst defaultChildIdentity = (children: ReactNode) => {\n  const childLabels: string[] = [];\n  Children.forEach(children, (child) => {\n    if (isValidElement(child)) {\n      childLabels.push((child as ReactElement<WithLabel>).props.label ?? \"\");\n    }\n  });\n  return `${childLabels.length}:${childLabels.join(\":\")}`;\n};\n\nconst defaultSourceIdentity = (source: WithLabel[]): string => {\n  const labels = source.map(({ label }) => label).join(\":\");\n  return `${source.length}:${labels}`;\n};\n// We need to track structural changes to controlled source or child elements.\n// Simple identity won't work as child elements will be different on every render.\n// structural changes are addition or removal of items, reordering items.\n// Question, what if user changes prop in declarative TabPanel ?\nconst getItemsIdentity = (\n  defaultSource?: OverflowSource[],\n  source?: OverflowSource[],\n  children?: ReactNode\n): string => {\n  let identity;\n  if (Array.isArray(defaultSource)) {\n    identity = defaultSourceIdentity(defaultSource);\n  } else if (Array.isArray(source)) {\n    identity = defaultSourceIdentity(source);\n  } else {\n    identity = defaultChildIdentity(children);\n  }\n  return identity;\n};\n\ntype OverflowCollectionHook = (\n  props: OverflowCollectionHookProps\n) => OverflowCollectionHookResult;\n\nexport const useOverflowCollectionItems: OverflowCollectionHook = ({\n  children,\n  defaultSource,\n  id: idRoot,\n  injectedItems = [],\n  options = defaultOptions,\n  orientation,\n  label = \"\",\n  source,\n}) => {\n  const dataRef = useRef<OverflowItem[]>([]);\n  const versionRef = useRef(0);\n  const measureTimeout = useRef<number | null>(null);\n  const previousIdentityRef = useRef(\"\");\n  const fontsLoaded = useRef(false);\n  const identity = getItemsIdentity(defaultSource, source, children);\n  const isControlled = Array.isArray(source) || Children.count(children) > 0;\n  if (isControlled && defaultSource !== undefined) {\n    throw Error(\n      \"useOverflowCollectionItems: defaultSource prop should not be used in combination with either source prop or children \"\n    );\n  }\n\n  const [data, dispatch] = useReducer<\n    OverflowReducer,\n    OverflowReducerInitialisationProps\n  >(\n    overflowReducer,\n    {\n      children,\n      source: source || defaultSource,\n      injectedItems,\n      idRoot,\n      options,\n    },\n    reducerInitialiser\n  );\n\n  dataRef.current = data;\n\n  const measureManagedItems = useCallback(\n    (defer = false) => {\n      if (measureTimeout.current) {\n        window.clearTimeout(measureTimeout.current);\n        measureTimeout.current = null;\n      }\n      if (defer) {\n        measureTimeout.current = window.setTimeout(measureManagedItems, 30);\n      } else {\n        // If fonts have not yet loaded, measurements WILL be incorrect\n        if (fontsLoaded.current) {\n          const dimension = orientation === \"horizontal\" ? \"width\" : \"height\";\n          const overflowItems = measureOverflowItems(\n            dataRef.current,\n            dimension\n          );\n          // TODO if measurements have not changed, do nothing\n          // Track the generation of measured items. This can be used to trigger\n          // side effects when measurement takes place.\n          versionRef.current += 1;\n          dispatch({\n            type: \"init\",\n            overflowItems,\n          });\n        }\n      }\n    },\n    [orientation]\n  );\n\n  // Take the initial measurements of overflow items. All subsequent re-measurement will be\n  // triggered by either manipulation of the items or item state or updated source.\n  useIsomorphicLayoutEffect(() => {\n    async function measure(): Promise<void> {\n      const { fonts } = document;\n      if (fonts) {\n        await fonts.ready;\n        fontsLoaded.current = true;\n      } else {\n        fontsLoaded.current = true;\n      }\n      measureManagedItems();\n    }\n\n    measure().catch((err) => {\n      console.warn(`error occurred measuring Overflow Items`, err);\n    });\n  }, [measureManagedItems]);\n\n  const dispatchOverflowAction = useCallback(\n    (action: OverflowAction | { type: \"reset\" }) => {\n      if (action.type === \"reset\") {\n        measureManagedItems();\n      } else {\n        dispatch(action);\n\n        if (action.type.endsWith(\"overflow-indicator\")) {\n          measureManagedItems(true);\n        }\n      }\n    },\n    [measureManagedItems]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (previousIdentityRef.current !== \"\") {\n      const overflowItems = reducerInitialiser({\n        children,\n        source: source || defaultSource,\n        injectedItems,\n        idRoot,\n        options,\n      });\n\n      dispatch({ type: \"init\", overflowItems });\n      measureManagedItems(true);\n    }\n    previousIdentityRef.current = identity;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [identity]);\n\n  return {\n    data,\n    dispatch: dispatchOverflowAction,\n    isControlled,\n    version: versionRef.current,\n  };\n};\n"],"names":[],"mappings":"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"}