{"version":3,"file":"utils.js","sources":["../src/responsive/utils.ts"],"sourcesContent":["const COLLAPSIBLE = \"data-collapsible\";\n\nexport type dataPadDirection = \"data-pad-start\" | \"data-pad-end\";\n\nconst RESPONSIVE_ATTRIBUTE: { [key: string]: boolean } = {\n  [COLLAPSIBLE]: true,\n  \"data-pad-start\": true,\n  \"data-pad-end\": true,\n};\n\nexport const isResponsiveAttribute = (propName: string): boolean =>\n  RESPONSIVE_ATTRIBUTE[propName] ?? false;\n\nconst isCollapsible = (propName: string) => propName === COLLAPSIBLE;\n\nconst COLLAPSIBLE_VALUE: { [key: string]: string } = {\n  dynamic: \"dynamic\",\n  instant: \"instant\",\n  true: \"instant\",\n};\n\nconst collapsibleValue = (value: string) => COLLAPSIBLE_VALUE[value] ?? \"none\";\n\ntype AnyProps = Record<string, unknown>;\ntype ResponsivePropsTuple = [AnyProps, AnyProps];\n/**\n * data- attributes can be used to manage item overflow behaviour. Users may\n * speficy these attributes directly on a Toolbar component, which ultimately\n * gets wrapped by a FormField. We need to 'lift' these attributes to the form\n * field and remove them from the props of the nested component.\n * @param props\n * @returns\n */\nexport const liftResponsivePropsToFormField = (\n  props: AnyProps\n): ResponsivePropsTuple => {\n  const propNames = Object.keys(props);\n  if (propNames.some(isResponsiveAttribute)) {\n    return propNames.reduce<ResponsivePropsTuple>(\n      (tuple, propName): ResponsivePropsTuple => {\n        const [toolbarProps, rest] = tuple;\n        const propValue = props[propName];\n        if (isResponsiveAttribute(propName)) {\n          const value = isCollapsible(propName)\n            ? collapsibleValue(propValue as string)\n            : propValue;\n\n          toolbarProps[propName] = value;\n          rest[propName] = undefined;\n        }\n        return tuple;\n      },\n      [{}, {}]\n    );\n  } else {\n    return [{}, props];\n  }\n};\n"],"names":[],"mappings":"AAAA,MAAM,WAAc,GAAA,kBAAA,CAAA;AAIpB,MAAM,oBAAmD,GAAA;AAAA,EACvD,CAAC,WAAc,GAAA,IAAA;AAAA,EACf,gBAAkB,EAAA,IAAA;AAAA,EAClB,cAAgB,EAAA,IAAA;AAClB,CAAA,CAAA;AAEa,MAAA,qBAAA,GAAwB,CAAC,QAA2B,KAAA;AAVjE,EAAA,IAAA,EAAA,CAAA;AAWE,EAAA,OAAA,CAAA,EAAA,GAAA,oBAAA,CAAqB,cAArB,IAAkC,GAAA,EAAA,GAAA,KAAA,CAAA;AAAA,EAAA;AAEpC,MAAM,aAAA,GAAgB,CAAC,QAAA,KAAqB,QAAa,KAAA,WAAA,CAAA;AAEzD,MAAM,iBAA+C,GAAA;AAAA,EACnD,OAAS,EAAA,SAAA;AAAA,EACT,OAAS,EAAA,SAAA;AAAA,EACT,IAAM,EAAA,SAAA;AACR,CAAA,CAAA;AAEA,MAAM,gBAAA,GAAmB,CAAC,KAAe,KAAA;AArBzC,EAAA,IAAA,EAAA,CAAA;AAqB4C,EAAA,OAAA,CAAA,EAAA,GAAA,iBAAA,CAAkB,WAAlB,IAA4B,GAAA,EAAA,GAAA,MAAA,CAAA;AAAA,CAAA,CAAA;AAY3D,MAAA,8BAAA,GAAiC,CAC5C,KACyB,KAAA;AACzB,EAAM,MAAA,SAAA,GAAY,MAAO,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AACnC,EAAI,IAAA,SAAA,CAAU,IAAK,CAAA,qBAAqB,CAAG,EAAA;AACzC,IAAA,OAAO,SAAU,CAAA,MAAA;AAAA,MACf,CAAC,OAAO,QAAmC,KAAA;AACzC,QAAM,MAAA,CAAC,YAAc,EAAA,IAAI,CAAI,GAAA,KAAA,CAAA;AAC7B,QAAA,MAAM,YAAY,KAAM,CAAA,QAAA,CAAA,CAAA;AACxB,QAAI,IAAA,qBAAA,CAAsB,QAAQ,CAAG,EAAA;AACnC,UAAA,MAAM,QAAQ,aAAc,CAAA,QAAQ,CAChC,GAAA,gBAAA,CAAiB,SAAmB,CACpC,GAAA,SAAA,CAAA;AAEJ,UAAA,YAAA,CAAa,QAAY,CAAA,GAAA,KAAA,CAAA;AACzB,UAAA,IAAA,CAAK,QAAY,CAAA,GAAA,KAAA,CAAA,CAAA;AAAA,SACnB;AACA,QAAO,OAAA,KAAA,CAAA;AAAA,OACT;AAAA,MACA,CAAC,EAAI,EAAA,EAAE,CAAA;AAAA,KACT,CAAA;AAAA,GACK,MAAA;AACL,IAAO,OAAA,CAAC,EAAC,EAAG,KAAK,CAAA,CAAA;AAAA,GACnB;AACF;;;;"}