{"version":3,"file":"OverflowReducer.js","sources":["../src/responsive/OverflowReducer.ts"],"sourcesContent":["/**\n * This reducer manages a collection of items that represent the content of an overflowable container.\n * The items are mostly content configured by the caller of the container, either data passed though\n * the source prop or as child elements. We also support 'injected' items. These allow for additional UI\n * controls to be inserted into the container, eg an 'Add Item' button.\n */\nimport React, { isValidElement, ReactElement, ReactNode, Reducer } from \"react\";\n\nimport {\n  InjectedChildItem,\n  InjectedSourceItem,\n  OverflowItem,\n  OverflowItems,\n  OverflowCollectionOptions,\n  OverflowSource,\n} from \"./overflowTypes\";\n\ninterface InitAction {\n  type: \"init\";\n  overflowItems?: OverflowItem[];\n}\n\ninterface SourceAction {\n  type: \"add-source-item\";\n  idRoot: string;\n  source: any;\n}\ninterface AddChildAction {\n  type: \"add-child-item\";\n  idRoot: string;\n  indexPosition?: number;\n  element: ReactElement;\n}\ninterface RemoveItemAction {\n  type: \"remove-item\";\n  indexPosition: number;\n}\n\ninterface MultiItemAction {\n  type: \"update-items\" | \"update-items-remove-overflow-indicator\";\n  overflowItems: Partial<Omit<OverflowItem, \"id\">> & Pick<OverflowItem, \"id\">[];\n}\ninterface SingleItemAction {\n  type:\n    | \"add-overflow-indicator\"\n    | \"replace-item\"\n    | \"collapsing-item\"\n    | \"uncollapse-dynamic-item\"\n    | \"collapse-instant-item\";\n\n  overflowItem: OverflowItem;\n}\n\ninterface CombinedItemAction {\n  type: \"update-items-add-overflow-indicator\";\n  overflowItem: OverflowItem<any>;\n  overflowItems: OverflowItem[];\n}\n\ninterface EmptyPayloadAction {\n  type: \"restore-collapsing-item\";\n}\ninterface DynamicCollapseAction extends Omit<SingleItemAction, \"type\"> {\n  type: \"collapse-dynamic-item\";\n  collapsedSize: number;\n  minSize: number;\n}\n\nexport type OverflowAction =\n  | AddChildAction\n  | CombinedItemAction\n  | DynamicCollapseAction\n  | EmptyPayloadAction\n  | InitAction\n  | MultiItemAction\n  | RemoveItemAction\n  | SingleItemAction\n  | SourceAction;\n\nconst DEFAULT_PRIORITY = 3;\n\nconst mapReactElementChildren = (\n  children: ReactNode,\n  fn: (el: ReactElement, index: number) => OverflowItem\n): OverflowItem[] => {\n  const childElements: OverflowItem[] = [];\n  React.Children.forEach(children, (child, i) => {\n    if (isValidElement(child)) {\n      childElements.push(fn(child, i));\n    }\n  });\n  return childElements;\n};\n\nconst sourceItem = (\n  item: OverflowSource,\n  id: string,\n  index: number,\n  options?: OverflowCollectionOptions\n): OverflowItem<\"source\"> => {\n  const priority =\n    options?.getPriority?.(item, index) ?? item.priority ?? DEFAULT_PRIORITY;\n\n  return {\n    //TODO editable closeable configurable via item\n    closeable: item.closeable || options?.closeable,\n    editable: options?.editable,\n    element: null,\n    fullSize: null,\n    id: item.id ?? id,\n    index,\n    label: item.label,\n    position: item.position,\n    priority,\n    size: 0,\n    source: item,\n    type: \"source\",\n  };\n};\n\nconst createSourceItems = (\n  source: any,\n  idRoot: string,\n  options?: OverflowCollectionOptions\n): OverflowItem<\"source\">[] | undefined => {\n  if (Array.isArray(source)) {\n    return source.map((item, index) => {\n      const priority = options?.getPriority?.(source, index);\n      return sourceItem(item, `${idRoot}-${index}`, index, options);\n    });\n  }\n};\n\ntype OverflowChild = {\n  closeable?: boolean;\n  disabled?: boolean;\n  id?: string;\n  label?: string;\n  \"data-collapsible\"?: boolean;\n  \"data-editable\"?: boolean;\n  \"data-position\"?: number;\n  \"data-priority\"?: string;\n};\n\nconst childItem = (\n  child: ReactElement,\n  id: string,\n  index: number,\n  options?: OverflowCollectionOptions\n): OverflowItem<\"child\"> => {\n  const {\n    closeable,\n    disabled,\n    id: idProp,\n    label,\n    \"data-collapsible\": collapsible,\n    \"data-editable\": editable,\n    \"data-position\": dataPosition,\n    \"data-priority\": dataPriority = \"2\",\n  } = child.props as OverflowChild;\n\n  const priority = options?.getPriority?.(child, index);\n\n  return {\n    closeable: closeable || options?.closeable,\n    collapsible,\n    editable: editable ? true : options?.editable,\n    disabled,\n    fullSize: null,\n    id: idProp ?? id,\n    index,\n    element: child,\n    label,\n    position: dataPosition,\n    priority: priority ?? parseInt(dataPriority),\n    size: 0,\n    source: null,\n    type: \"child\",\n  } as OverflowItem;\n};\n\nconst createChildItems = (\n  children: React.ReactNode,\n  idRoot: string,\n  options?: OverflowCollectionOptions\n): OverflowItem<\"child\">[] | undefined => {\n  if (children) {\n    return mapReactElementChildren(children, (child, index) => {\n      const id = `${idRoot}-${index}`;\n      return childItem(child, id, index, options);\n    });\n  }\n};\n\nconst createInjectedContent = (\n  items: Array<InjectedSourceItem | InjectedChildItem>,\n  idRoot: string,\n  startIndex: number\n): OverflowItem<\"source\" | \"child\">[] => {\n  return items.map((item, i) => {\n    const index = startIndex + i;\n    const id = `${idRoot}-${index}`;\n    const { source } = item as InjectedSourceItem;\n    if (source) {\n      const injectedItem = sourceItem(source, id, index);\n      injectedItem.isInjectedItem = true;\n      return injectedItem;\n    } else {\n      const { element } = item as InjectedChildItem;\n      const injectedItem = childItem(element, id, index);\n      injectedItem.isInjectedItem = true;\n      return injectedItem;\n    }\n  });\n};\n\nexport type OverflowReducer = Reducer<OverflowItems, OverflowAction>;\n\nconst defaultOptions = {};\n\nexport type OverflowReducerInitialisationProps = {\n  children?: ReactNode;\n  source?: OverflowSource[];\n  injectedItems?: any[];\n  idRoot: string;\n  options?: OverflowCollectionOptions;\n};\n\nexport const reducerInitialiser: (\n  props: OverflowReducerInitialisationProps\n) => OverflowItems = ({\n  children,\n  source,\n  injectedItems = [],\n  idRoot,\n  options = defaultOptions,\n}) => {\n  const providedContent: OverflowItems =\n    createChildItems(children, idRoot, options) ||\n    createSourceItems(source, idRoot, options) ||\n    [];\n  const injectedContent = createInjectedContent(\n    injectedItems,\n    idRoot,\n    providedContent.length\n  );\n  return providedContent.concat(injectedContent);\n};\n\nconst collapsingItem = (\n  items: OverflowItem[],\n  { overflowItem }: SingleItemAction\n) =>\n  items.map((item) =>\n    item === overflowItem\n      ? {\n          ...item,\n          collapsing: true,\n        }\n      : item\n  );\n\nconst uncollapseDynamicItem = (\n  items: OverflowItem[],\n  { overflowItem }: SingleItemAction\n) =>\n  items.map((item) =>\n    item === overflowItem\n      ? {\n          ...item,\n          collapsed: false,\n          collapsing: true,\n          size: item.fullSize as number,\n          fullSize: null,\n        }\n      : item\n  );\n\nconst collapseInstantItem = (\n  items: OverflowItem[],\n  { overflowItem }: SingleItemAction\n) =>\n  items.map((item) =>\n    item === overflowItem\n      ? {\n          ...item,\n          collapsed: true,\n        }\n      : item\n  );\n\nconst replaceItem = (\n  items: OverflowItem[],\n  { overflowItem }: SingleItemAction\n) =>\n  items.map((item) =>\n    item.index === overflowItem?.index ? overflowItem : item\n  );\n\nconst updateItems = (\n  items: OverflowItem[],\n  { overflowItems = [] }: MultiItemAction\n) => {\n  return items.map((item) => {\n    const targetItem = overflowItems.find((i) => i.id === item.id);\n    return targetItem ? { ...item, ...targetItem } : item;\n  });\n};\n\nconst restoreCollapsingItem = (items: OverflowItem[]) => {\n  const collapsingItem = items.find(\n    ({ collapsible, collapsing }) => collapsible === \"dynamic\" && collapsing\n  );\n  const collapsedItem = items.find(\n    ({ collapsible, collapsed }) => collapsible === \"dynamic\" && collapsed\n  );\n  return items.map((item) => {\n    if (item === collapsingItem) {\n      return {\n        ...item,\n        collapsing: false,\n      };\n    } else if (item === collapsedItem) {\n      return {\n        ...item,\n        collapsed: false,\n        collapsing: true,\n      };\n    } else {\n      return item;\n    }\n  });\n};\n\nconst collapseDynamicItem = (\n  items: OverflowItem[],\n  { overflowItem, collapsedSize = 0, minSize = 0 }: DynamicCollapseAction\n) => {\n  const remainingUncollpasedItems = items.filter(\n    (i) => i.collapsible === \"dynamic\" && !i.collapsed && i !== overflowItem\n  );\n  const lastUncollapsedItem = remainingUncollpasedItems.pop();\n\n  return items.map((item) => {\n    if (item === overflowItem) {\n      return {\n        ...item,\n        collapsing: false,\n        collapsed: true,\n        fullSize: item.size,\n        minSize,\n        size: collapsedSize,\n      };\n    } else if (item === lastUncollapsedItem) {\n      return {\n        ...item,\n        collapsing: true,\n      };\n    } else {\n      return item;\n    }\n  });\n};\n\nconst addSourceItem = (\n  items: OverflowItem<any>[],\n  { idRoot, source }: SourceAction\n): OverflowItem[] => {\n  const index = items.length;\n  return items.concat(sourceItem(source, `${idRoot}-${index}`, index));\n};\n\nconst removeItem = (\n  items: OverflowItem<any>[],\n  { indexPosition }: RemoveItemAction\n): OverflowItem[] => {\n  return items.slice(0, indexPosition).concat(items.slice(indexPosition + 1));\n};\n\nconst addOverflowIndicator = (\n  items: OverflowItem<any>[],\n  { overflowItem }: SingleItemAction\n) => {\n  // Guard against accidental duplicate overflowIndicator\n  if (!items.find((i) => i.isOverflowIndicator)) {\n    if (items.find((i) => i.label === \"Add Tab\")) {\n      const [addTab] = items.slice(-1);\n      return items\n        .slice(0, -1)\n        .concat({ ...overflowItem, index: addTab.index })\n        .concat({ ...addTab, index: overflowItem.index });\n    } else {\n      return items.concat(overflowItem);\n    }\n  } else {\n    return items;\n  }\n};\n\nexport const overflowReducer: OverflowReducer = (state, action) => {\n  switch (action.type) {\n    case \"init\":\n      return action.overflowItems ?? state;\n    case \"add-overflow-indicator\":\n      return addOverflowIndicator(state, action);\n\n    case \"update-items\":\n      return updateItems(state, action);\n\n    case \"replace-item\":\n      return replaceItem(state, action);\n\n    case \"update-items-add-overflow-indicator\":\n      return addOverflowIndicator(\n        updateItems(state, {\n          type: \"update-items\",\n          overflowItems: action.overflowItems,\n        }),\n        { type: \"add-overflow-indicator\", overflowItem: action.overflowItem }\n      );\n\n    case \"update-items-remove-overflow-indicator\":\n      return updateItems(state, {\n        type: \"update-items\",\n        overflowItems: action.overflowItems,\n      }).filter((item) => !item.isOverflowIndicator);\n\n    case \"collapsing-item\":\n      return collapsingItem(state, action);\n\n    case \"collapse-dynamic-item\":\n      return collapseDynamicItem(state, action);\n\n    case \"uncollapse-dynamic-item\":\n      return uncollapseDynamicItem(state, action);\n\n    case \"restore-collapsing-item\":\n      return restoreCollapsingItem(state);\n\n    case \"collapse-instant-item\":\n      return collapseInstantItem(state, action);\n\n    case \"add-source-item\":\n      return addSourceItem(state, action);\n\n    case \"remove-item\":\n      return removeItem(state, action);\n\n    default:\n      return state;\n  }\n};\n"],"names":["collapsingItem"],"mappings":"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"}