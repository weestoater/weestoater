import { jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { forwardRef, useRef, useMemo } from 'react';
import { makePrefixer, useId, useForkRef } from '@salt-ds/core';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './DeckItem.css.js';

const withBaseName = makePrefixer("saltDeckItem");
const DeckItem = forwardRef(
  function DeckItem2({
    activeIndex = 0,
    animation,
    children,
    className,
    index,
    role = "group",
    id: idProp,
    ...rest
  }, ref) {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-deck-item",
      css: css_248z,
      window: targetWindow
    });
    const sliderRef = useRef(null);
    const isCurrent = activeIndex === index;
    const position = useMemo(() => {
      return isCurrent ? "current" : activeIndex < index ? "next" : "previous";
    }, [activeIndex, index, isCurrent]);
    const classesIndex = animation && position === "current" ? 0 : 1;
    const getActiveClasses = [
      `${animation || "fade"}-in`,
      `${animation || "fade"}-out`
    ];
    const id = useId(idProp);
    return /* @__PURE__ */ jsx("div", {
      className: clsx(
        withBaseName(),
        withBaseName(`${animation ? animation : "static"}-${position}`),
        {
          [withBaseName(getActiveClasses[classesIndex])]: animation === "fade"
        },
        className
      ),
      ref: useForkRef(ref, sliderRef),
      role,
      tabIndex: isCurrent ? 0 : -1,
      id,
      ...rest,
      children
    });
  }
);

export { DeckItem };
//# sourceMappingURL=DeckItem.js.map
