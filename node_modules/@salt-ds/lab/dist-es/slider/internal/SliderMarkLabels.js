import { jsx } from 'react/jsx-runtime';
import { makePrefixer } from '@salt-ds/core';
import { createSliderMarkLabelsStyle, createSliderMarkLabelStyles } from './styles.js';
import { isLabeledMark } from './utils.js';
import { useMemo } from 'react';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from '../Slider.css.js';

const withBaseName = makePrefixer("saltSliderMarkLabels");
function SliderMarkLabels(props) {
  const { min, max, marks } = props;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-slider",
    css: css_248z,
    window: targetWindow
  });
  const style = useMemo(
    () => createSliderMarkLabelsStyle(min, max, marks),
    [min, max, marks]
  );
  const labelStyles = useMemo(
    () => createSliderMarkLabelStyles(marks),
    [marks]
  );
  return /* @__PURE__ */ jsx("div", {
    className: withBaseName(),
    style,
    children: marks.map((mark, i) => {
      return /* @__PURE__ */ jsx("div", {
        className: withBaseName("label"),
        style: labelStyles[i],
        children: isLabeledMark(mark) ? mark.label : `${mark}`
      }, i);
    })
  });
}

export { SliderMarkLabels };
//# sourceMappingURL=SliderMarkLabels.js.map
