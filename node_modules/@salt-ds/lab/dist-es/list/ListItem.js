import { jsx, jsxs } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { makePrefixer, CheckboxIcon } from '@salt-ds/core';
import { Highlighter } from './Highlighter.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './ListItem.css.js';

const withBaseName = makePrefixer("saltListItem");
const ListItemProxy = forwardRef(function ListItemNextProxy(props, forwardedRef) {
  return /* @__PURE__ */ jsx("div", {
    "aria-hidden": true,
    className: clsx(withBaseName(), withBaseName("proxy")),
    ref: forwardedRef
  });
});
const ListItem = forwardRef(
  function ListItem2({
    children,
    className: classNameProp,
    disabled,
    tabIndex,
    item,
    itemHeight,
    itemTextHighlightPattern,
    label,
    selectable: _notUsed,
    selected,
    showCheckbox,
    style: styleProp,
    ...props
  }, forwardedRef) {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-list-item",
      css: css_248z,
      window: targetWindow
    });
    const className = clsx(withBaseName(), classNameProp, {
      saltDisabled: disabled,
      [withBaseName("checkbox")]: showCheckbox
    });
    const style = itemHeight !== void 0 ? {
      ...styleProp,
      height: itemHeight
    } : styleProp;
    return /* @__PURE__ */ jsxs("div", {
      className,
      ...props,
      "aria-disabled": disabled || void 0,
      "aria-selected": selected || void 0,
      ref: forwardedRef,
      style,
      children: [
        showCheckbox && /* @__PURE__ */ jsx(CheckboxIcon, {
          "aria-hidden": true,
          checked: selected
        }),
        children && typeof children !== "string" ? children : itemTextHighlightPattern == null ? /* @__PURE__ */ jsx("span", {
          className: withBaseName("textWrapper"),
          children: label || children
        }) : /* @__PURE__ */ jsx(Highlighter, {
          matchPattern: itemTextHighlightPattern,
          text: label || children
        })
      ]
    });
  }
);

export { ListItem, ListItemProxy };
//# sourceMappingURL=ListItem.js.map
