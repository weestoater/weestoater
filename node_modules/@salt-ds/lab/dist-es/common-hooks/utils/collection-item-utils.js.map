{"version":3,"file":"collection-item-utils.js","sources":["../src/common-hooks/utils/collection-item-utils.ts"],"sourcesContent":["import { isValidElement, Children, ReactElement, ReactNode } from \"react\";\n\nimport {\n  CollectionItem,\n  CollectionOptions,\n  SourceGroup,\n} from \"../collectionTypes\";\n// TODO how do we configure these\nimport { ListItemGroup } from \"../../list/ListItemGroup\";\nimport { ListItemHeader } from \"../../list/ListItemHeader\";\nimport { itemToString as defaultItemToString } from \"../itemToString\";\n\ntype NonFocusableElement = ReactElement<{ focusable: false }>;\ntype DisablableElement = ReactElement<{ disabled: boolean }>;\ntype SelectableElement = ReactElement<{ selectable: boolean }>;\n\nexport const sourceItemHasProp = (\n  item: unknown,\n  propertyName: string\n): boolean => {\n  return (\n    item !== null && Object.prototype.hasOwnProperty.call(item, propertyName)\n  );\n};\n\nexport const isHeader = (item: unknown): boolean =>\n  sourceItemHasProp(item, \"header\");\n\nexport const isGroupNode = (item: unknown): boolean =>\n  sourceItemHasProp(item, \"childNodes\");\n\nconst childItemHasProp = (item: ReactElement, propertyName: string) => {\n  return item && Object.prototype.hasOwnProperty.call(item.props, propertyName);\n};\n\nexport const isDisabled = (item: unknown): boolean => {\n  if (isValidElement(item as DisablableElement)) {\n    if (childItemHasProp(item as DisablableElement, \"disabled\")) {\n      return (item as DisablableElement).props.disabled === true;\n    }\n  } else if (sourceItemHasProp(item, \"disabled\")) {\n    return (item as { disabled: boolean }).disabled === true;\n  }\n\n  return false;\n};\n\nexport const isFocusable = (item: unknown): boolean => {\n  if (isValidElement(item as NonFocusableElement)) {\n    if (childItemHasProp(item as NonFocusableElement, \"focusable\")) {\n      return (item as NonFocusableElement).props.focusable;\n    }\n  }\n  return true;\n};\n\nexport const countChildItems = <Item>(\n  item: CollectionItem<Item>,\n  items: CollectionItem<Item>[],\n  idx: number\n): number => {\n  if (item.childNodes) {\n    return item.childNodes.length;\n  } else if (item.header) {\n    let i = idx + 1;\n    let count = 0;\n    while (i < items.length && !items[i].header) {\n      count++;\n      i++;\n    }\n    return count;\n  } else {\n    return 0;\n  }\n};\n\nexport const getChildLabel = (\n  element: ReactElement<{\n    children?: ReactNode;\n    label?: string;\n    title?: string;\n  }>\n): string | undefined => {\n  if (typeof element.props.children === \"string\") {\n    return element.props.children;\n  } else if (element.props.title) {\n    return element.props.title;\n  } else if (element.props.label) {\n    return element.props.label;\n  }\n};\n\nconst childIsHeader = (child: ReactElement) =>\n  child.type === ListItemHeader || childItemHasProp(child, \"data-header\");\n\nexport const childIsGroup = (child: ReactElement): boolean =>\n  child.type === ListItemGroup || childItemHasProp(child, \"data-group\");\n\nconst childIsSelectable = (child: ReactElement) => {\n  if (childItemHasProp(child, \"selectable\")) {\n    return (child as SelectableElement).props.selectable === true;\n  } else {\n    return !childIsGroup(child) && !childIsHeader(child);\n  }\n};\n\nexport const getChildNodes = (\n  element: ReactElement\n): CollectionItem<ReactElement>[] | undefined => {\n  if (childIsGroup(element)) {\n    const {\n      props: { children },\n    } = element as ReactElement<{ children?: ReactNode }>;\n    if (typeof children !== \"string\") {\n      return childItems(children);\n    }\n  }\n};\n\nconst mapReactElementChildren = (\n  children: ReactNode,\n  fn: (el: ReactElement) => CollectionItem<ReactElement>\n): CollectionItem<ReactElement>[] => {\n  const childElements: CollectionItem<ReactElement>[] = [];\n  Children.forEach(children, (child) => {\n    if (isValidElement(child)) {\n      childElements.push(fn(child));\n    }\n  });\n  return childElements;\n};\n\ntype ListItemElementProps = {\n  \"data-id\"?: string;\n  disabled?: boolean;\n  id?: string;\n  \"data-expanded\"?: boolean;\n  expanded?: boolean;\n};\n\ntype CollectionItemWithoutId<T> = Omit<CollectionItem<T>, \"id\">;\n\nexport const sourceItems = <T>(\n  source?: ReadonlyArray<T>,\n  options?: CollectionOptions<T>\n): CollectionItemWithoutId<T>[] | undefined => {\n  if (Array.isArray(source)) {\n    if (source.length === 0 && options?.noChildrenLabel) {\n      return [\n        {\n          label: options.noChildrenLabel,\n          value: null,\n        },\n      ];\n    } else {\n      return source.map(\n        (item: { description?: string; expanded?: boolean }, index) =>\n          ({\n            childNodes: sourceItems(\n              (item as unknown as SourceGroup<T>).childNodes,\n              options\n            ),\n            description: item.description,\n            expanded: item.expanded,\n            value: item,\n            label:\n              options?.itemToString?.(item as T) ?? defaultItemToString(item),\n          } as CollectionItemWithoutId<T>)\n      );\n    }\n  } else if (source) {\n    throw Error(\"list-child-items expects source to be an array\");\n  }\n};\n\nexport const childItems = (\n  children: ReactNode\n): CollectionItem<ReactElement>[] | undefined => {\n  if (children) {\n    return mapReactElementChildren(children, (child) => {\n      const {\n        \"data-id\": dataId,\n        disabled,\n        id = dataId,\n        \"data-expanded\": dataExpanded,\n        expanded = dataExpanded,\n      } = (child as ReactElement<ListItemElementProps>).props;\n      return {\n        childNodes: getChildNodes(child),\n        disabled,\n        expanded,\n        header: childIsHeader(child),\n        id,\n        label: getChildLabel(child),\n        selectable: childIsSelectable(child),\n        value: child,\n      } as CollectionItem<ReactElement>;\n    });\n  }\n};\n\nconst PathSeparators = new Set<string>([\"/\", \"-\", \".\"]);\n// TODO where do we define or identify separators\nconst isPathSeparator = (char: string) => PathSeparators.has(char);\n\nexport const isParentPath = (parentPath: string, childPath: string): boolean =>\n  childPath.startsWith(parentPath) &&\n  isPathSeparator(childPath[parentPath.length]);\n\nconst PATH_SEPARATORS = new Set([\".\", \"/\"]);\n\nfunction isDescendantOf(basePath: string, targetPath: string) {\n  if (!targetPath.startsWith(basePath)) {\n    return false;\n  } else {\n    return PATH_SEPARATORS.has(targetPath.charAt(basePath.length));\n  }\n}\n\nexport function replaceCollectionItem<Item>(\n  nodes: CollectionItem<Item>[],\n  id: string,\n  props: Partial<CollectionItem<Item>>\n): CollectionItem<Item>[] {\n  let childNodes: CollectionItem<Item>[];\n  const newNodes: CollectionItem<Item>[] = nodes.map((node) => {\n    if (node.id === id) {\n      return {\n        ...node,\n        ...props,\n      };\n    } else if (isDescendantOf(node.id, id) && node.childNodes) {\n      childNodes = replaceCollectionItem<Item>(node.childNodes, id, props);\n      return {\n        ...node,\n        childNodes,\n      };\n    } else {\n      return node;\n    }\n  });\n\n  return newNodes;\n}\n"],"names":["defaultItemToString"],"mappings":"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"}