import { jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { makePrefixer } from '@salt-ds/core';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { Color } from './Color.js';
import { isTransparent } from './color-utils.js';
import css_248z from './Swatch.css.js';

const withBaseName = makePrefixer("saltColorChooserSwatch");
const Swatch = ({
  color,
  onClick,
  active,
  alpha,
  onDialogClosed,
  transparent = false
}) => {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-swatch",
    css: css_248z,
    window: targetWindow
  });
  const handleClick = () => {
    const newColor = Color.makeColorFromHex(color);
    isTransparent(color) ? newColor == null ? void 0 : newColor.setAlpha(0) : newColor == null ? void 0 : newColor.setAlpha(alpha);
    onClick(newColor, true);
    onDialogClosed();
  };
  const handleKeyDown = (e) => {
    var _a;
    const newColor = (_a = Color.makeColorFromHex(color)) == null ? void 0 : _a.setAlpha(alpha);
    e.key === "ENTER" && onClick(newColor, true);
    onDialogClosed();
  };
  const isBlackOrgray = (color2) => {
    return color2.toLowerCase() === "black" || color2.toUpperCase().startsWith("#2F3136") || color2.toUpperCase().startsWith("#2A2C2F") || color2.toUpperCase().startsWith("#242526") || color2.toUpperCase().startsWith("#161616");
  };
  const isWhite = (color2) => color2 === "white";
  const getBackgroundColor = () => {
    const backgroundColor = Color.makeColorFromHex(color);
    return backgroundColor == null ? void 0 : backgroundColor.setAlpha(alpha).hex;
  };
  return /* @__PURE__ */ jsx("div", {
    "data-testid": `swatch-${color}`,
    style: {
      background: getBackgroundColor()
    },
    className: clsx({
      [withBaseName("active")]: active,
      [withBaseName("transparent")]: transparent,
      [withBaseName("graySwatch")]: isBlackOrgray(color),
      [withBaseName("whiteSwatch")]: isWhite(color),
      [withBaseName("swatch")]: !isWhite(color) && !isBlackOrgray(color)
    }),
    onClick: handleClick,
    tabIndex: 0,
    onKeyDown: handleKeyDown
  });
};

export { Swatch };
//# sourceMappingURL=Swatch.js.map
