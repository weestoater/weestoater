import { jsxs, jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { useState, useEffect } from 'react';
import { makePrefixer } from '@salt-ds/core';
import { isValidHex } from './ColorHelpers.js';
import { InputLegacy } from '../input-legacy/InputLegacy.js';
import '../input-legacy/StaticInputAdornment.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './HexInput.css.js';

const withBaseName = makePrefixer("saltColorChooserHexInput");
const HexInput = ({
  hexValue,
  disableAlphaChooser,
  onSubmit
}) => {
  var _a;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-hex-input",
    css: css_248z,
    window: targetWindow
  });
  const [hexInputValue, setHexInputValue] = useState(
    hexValue
  );
  useEffect(() => {
    setHexInputValue(hexValue);
  }, [hexValue]);
  const handleHexInputChange = (event, value) => {
    if (disableAlphaChooser && value.length < 7) {
      setHexInputValue("#" + value);
    }
    if (!disableAlphaChooser) {
      setHexInputValue("#" + value);
    }
  };
  const handleKeyDownHex = (e) => {
    if (e.key === "Enter") {
      isValidHex(hexInputValue) && onSubmit(hexInputValue);
    }
  };
  const handleOnBlurHex = (e) => {
    isValidHex(hexInputValue) && onSubmit(hexInputValue, e);
  };
  return /* @__PURE__ */ jsxs("div", {
    className: clsx(withBaseName()),
    children: [
      /* @__PURE__ */ jsx("span", {
        className: clsx(withBaseName("hashSign")),
        children: "#"
      }),
      /* @__PURE__ */ jsx(InputLegacy, {
        "data-testid": "hex-input",
        className: clsx(withBaseName("input")),
        value: (_a = hexInputValue == null ? void 0 : hexInputValue.toString().replace("#", "").toUpperCase()) != null ? _a : "",
        onChange: handleHexInputChange,
        onKeyDown: handleKeyDownHex,
        onBlur: handleOnBlurHex
      })
    ]
  });
};

export { HexInput };
//# sourceMappingURL=HexInput.js.map
