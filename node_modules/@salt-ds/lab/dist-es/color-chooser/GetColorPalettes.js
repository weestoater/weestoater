import { saltColorMap } from './colorMap.js';

function makePalette(colorScheme, saltColorOverrides) {
  const colorNames = Array.from(
    Object.keys(saltColorOverrides != null ? saltColorOverrides : saltColorMap)
  );
  const colorArray = [];
  for (const colorName of colorNames) {
    if (colorName.includes(colorScheme) && !(colorName === colorScheme)) {
      colorArray.push(
        saltColorOverrides ? saltColorOverrides[colorName] : saltColorMap[colorName]
      );
    }
  }
  return colorArray;
}
const bluePalette = (saltColorOverrides) => makePalette("blue", saltColorOverrides);
const greenPalette = (saltColorOverrides) => makePalette("green", saltColorOverrides);
const redPalette = (saltColorOverrides) => makePalette("red", saltColorOverrides);
const orangePalette = (saltColorOverrides) => makePalette("orange", saltColorOverrides);
const tealPalette = (saltColorOverrides) => makePalette("teal", saltColorOverrides);
const purplePalette = (saltColorOverrides) => makePalette("purple", saltColorOverrides);
const grayPalette = (saltColorOverrides) => makePalette("gray", saltColorOverrides);
function getColorPalettes(saltColorOverrides) {
  return [
    bluePalette(saltColorOverrides).slice(0, 7),
    bluePalette(saltColorOverrides).slice(7, 14),
    greenPalette(saltColorOverrides).slice(0, 7),
    greenPalette(saltColorOverrides).slice(7, 14),
    tealPalette(saltColorOverrides).slice(0, 7),
    tealPalette(saltColorOverrides).slice(7, 14),
    orangePalette(saltColorOverrides).slice(0, 7),
    orangePalette(saltColorOverrides).slice(7, 14),
    redPalette(saltColorOverrides).slice(0, 7),
    redPalette(saltColorOverrides).slice(7, 14),
    purplePalette(saltColorOverrides).slice(0, 7),
    purplePalette(saltColorOverrides).slice(7, 14),
    grayPalette(saltColorOverrides).slice(0, 7),
    grayPalette(saltColorOverrides).slice(7, 14),
    [
      saltColorOverrides ? saltColorOverrides.saltwhite ? saltColorOverrides.saltwhite : "rgb(255, 255, 255)" : saltColorMap.saltwhite,
      ...grayPalette(saltColorOverrides).slice(14, 18),
      saltColorOverrides ? saltColorOverrides.saltblack ? saltColorOverrides.saltblack : "rgb(0, 0, 0)" : saltColorMap.saltblack,
      "rgba(0, 0, 0, 0)"
    ]
  ];
}

export { getColorPalettes, makePalette };
//# sourceMappingURL=GetColorPalettes.js.map
