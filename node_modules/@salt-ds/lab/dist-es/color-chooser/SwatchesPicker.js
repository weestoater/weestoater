import { jsx } from 'react/jsx-runtime';
import { Swatch } from './Swatch.js';
import { convertColorMapValueToHex } from './ColorHelpers.js';
import { isTransparent } from './color-utils.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './Swatch.css.js';

const SwatchesGroup = ({
  swatchGroup,
  onClick,
  onDialogClosed,
  selectedColor,
  alpha
}) => {
  var _a;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-swatches",
    css: css_248z,
    window: targetWindow
  });
  const isBlackOrWhite = (color) => {
    return (selectedColor ? selectedColor.startsWith("#000000") : false) && color.toLowerCase() === "black" || (selectedColor ? selectedColor.toLowerCase().startsWith("#ffffff") : false) && color.toLowerCase() === "white";
  };
  const isActive = (color) => {
    return color.toLowerCase() === (selectedColor == null ? void 0 : selectedColor.substring(0, 7).toString().toLowerCase()) || isBlackOrWhite(color);
  };
  return /* @__PURE__ */ jsx("div", {
    style: { display: "flex", flexDirection: "column" },
    children: (_a = swatchGroup == null ? void 0 : swatchGroup.map((color) => {
      return convertColorMapValueToHex(color);
    })) == null ? void 0 : _a.map((color) => /* @__PURE__ */ jsx(Swatch, {
      active: isActive(color),
      color,
      onClick,
      onDialogClosed,
      alpha,
      transparent: isTransparent(color)
    }, color.toString()))
  });
};
const SwatchesPicker = ({
  allColors,
  color,
  alpha = 1,
  onChange,
  onDialogClosed
}) => {
  return /* @__PURE__ */ jsx("div", {
    "data-testid": "swatches-picker",
    style: { display: "flex", flexDirection: "row" },
    children: allColors == null ? void 0 : allColors.map((swatchGroup) => /* @__PURE__ */ jsx(SwatchesGroup, {
      swatchGroup,
      selectedColor: color == null ? void 0 : color.hex,
      onClick: onChange,
      onDialogClosed,
      alpha
    }, swatchGroup.toString()))
  });
};

export { SwatchesPicker };
//# sourceMappingURL=SwatchesPicker.js.map
