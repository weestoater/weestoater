import { jsx } from 'react/jsx-runtime';
import { forwardRef, useEffect } from 'react';
import { makePrefixer, Avatar } from '@salt-ds/core';
import './internal/FavoriteToggleWithTooltip.js';
import { useContactDetailsContext } from './internal/ContactDetailsContext.js';
import { clsx } from 'clsx';

const withBaseName = makePrefixer("saltContactAvatar");
const ContactAvatar = forwardRef(
  function(props, ref) {
    const { className, ...restProps } = props;
    const context = useContactDetailsContext();
    const { variant, primary, isStacked, setHasAvatar } = context;
    useEffect(() => {
      setHasAvatar(true);
      return () => {
        setHasAvatar(false);
      };
    }, [setHasAvatar]);
    if (variant === "mini") {
      return null;
    }
    const avatarSize = variant === "default" ? 3 : 2;
    return /* @__PURE__ */ jsx(Avatar, {
      ...restProps,
      ref,
      "aria-hidden": true,
      className: clsx(
        withBaseName(),
        {
          [withBaseName("stacked")]: isStacked
        },
        className
      ),
      size: avatarSize,
      children: primary ? primary.split(" ").map((x) => x.charAt(0)).slice(0, 2) : null
    });
  }
);

export { ContactAvatar };
//# sourceMappingURL=ContactAvatar.js.map
