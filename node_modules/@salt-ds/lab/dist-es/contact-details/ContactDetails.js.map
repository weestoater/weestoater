{"version":3,"file":"ContactDetails.js","sources":["../src/contact-details/ContactDetails.tsx"],"sourcesContent":["import { makePrefixer, useForkRef } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { forwardRef, HTMLAttributes, useState } from \"react\";\nimport { ContactDetailsContext, useComponentSize } from \"./internal\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport contactDetailsCss from \"./ContactDetails.css\";\n\nconst withBaseName = makePrefixer(\"saltContactDetails\");\n\nexport type ContactDetailsVariant = \"default\" | \"compact\" | \"mini\";\n\nexport interface ContactDetailsProps extends HTMLAttributes<HTMLDivElement> {\n  variant?: ContactDetailsVariant;\n  stackAtBreakpoint?: number;\n  embedded?: boolean;\n}\n\nfunction getClassName(variant: ContactDetailsVariant, isStacked?: boolean) {\n  return withBaseName(`${variant}${isStacked ? \"-stacked\" : \"\"}`);\n}\n\nexport const ContactDetails = forwardRef<HTMLDivElement, ContactDetailsProps>(\n  function ContactDetails(props, externalRef) {\n    const {\n      children,\n      variant = \"default\",\n      className,\n      stackAtBreakpoint = 300,\n      embedded,\n      ...restProps\n    } = props;\n\n    const targetWindow = useWindow();\n    useComponentCssInjection({\n      testId: \"salt-contact-details\",\n      css: contactDetailsCss,\n      window: targetWindow,\n    });\n\n    const [hasAvatar, setHasAvatar] = useState<boolean>(false);\n    const [primary, setPrimary] = useState<string>();\n    const [primaryId, setPrimaryId] = useState<string>();\n\n    const [secondary, setSecondary] = useState<string>();\n    const [secondaryId, setSecondaryId] = useState<string>();\n\n    const [tertiary, setTertiary] = useState<string>();\n    const [tertiaryId, setTertiaryId] = useState<string>();\n\n    const [containerRef, componentSize] =\n      useComponentSize<HTMLDivElement>(stackAtBreakpoint);\n\n    const isStacked = componentSize && componentSize.width < stackAtBreakpoint;\n\n    variant === \"compact\" &&\n      isStacked &&\n      console.log(\"componentSize\", componentSize.width, containerRef.current);\n\n    const ref = useForkRef(externalRef, containerRef);\n\n    const contextValue = {\n      variant,\n      hasAvatar,\n      setHasAvatar,\n      isStacked,\n      primary,\n      setPrimary,\n      primaryId,\n      setPrimaryId,\n      secondary,\n      setSecondary,\n      secondaryId,\n      setSecondaryId,\n      tertiary,\n      setTertiary,\n      tertiaryId,\n      setTertiaryId,\n    };\n\n    const showNoAvatar = !hasAvatar && !embedded && variant !== \"mini\";\n\n    return (\n      <ContactDetailsContext.Provider value={contextValue}>\n        <div\n          {...restProps}\n          ref={ref}\n          className={clsx(\n            withBaseName(),\n            getClassName(variant, isStacked),\n            {\n              [withBaseName(\"embedded\")]: embedded,\n              [withBaseName(\"noAvatar\")]: showNoAvatar,\n            },\n            className\n          )}\n          role=\"article\"\n          aria-roledescription=\"Contact Card\"\n        >\n          {children}\n          {showNoAvatar ? (\n            <div className={withBaseName(\"noAvatar-indicator\")} />\n          ) : null}\n        </div>\n      </ContactDetailsContext.Provider>\n    );\n  }\n);\n"],"names":["ContactDetails","contactDetailsCss"],"mappings":"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"}