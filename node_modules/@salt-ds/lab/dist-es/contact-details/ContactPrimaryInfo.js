import { jsx } from 'react/jsx-runtime';
import { makePrefixer, useId, Text } from '@salt-ds/core';
import { clsx } from 'clsx';
import { forwardRef, useEffect } from 'react';
import './internal/FavoriteToggleWithTooltip.js';
import { useContactDetailsContext } from './internal/ContactDetailsContext.js';

const withBaseName = makePrefixer("saltContactPrimaryInfo");
const ContactPrimaryInfo = forwardRef(function ContactPrimaryInfo2(props, ref) {
  const {
    id: idProp,
    text,
    className,
    "aria-level": ariaLevel = 2,
    ...restProps
  } = props;
  const { setPrimary, setPrimaryId, secondaryId, tertiaryId, variant } = useContactDetailsContext();
  const id = useId(idProp);
  useEffect(() => {
    setPrimary(text || "");
    setPrimaryId(id);
    return () => {
      setPrimary(void 0);
      setPrimaryId(void 0);
    };
  }, [setPrimary, id, text, setPrimaryId]);
  return /* @__PURE__ */ jsx(Text, {
    ...restProps,
    maxRows: 1,
    id,
    ref,
    styleAs: variant === "default" ? "h2" : "h4",
    className: clsx(withBaseName(), className),
    role: "heading",
    "aria-labelledby": `${id} ${secondaryId != null ? secondaryId : null} ${tertiaryId != null ? tertiaryId : null}`,
    "aria-level": ariaLevel,
    "data-testid": "primary",
    children: text
  });
});

export { ContactPrimaryInfo };
//# sourceMappingURL=ContactPrimaryInfo.js.map
