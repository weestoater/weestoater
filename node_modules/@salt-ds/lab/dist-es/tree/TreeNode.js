import { jsxs, jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { TriangleRightIcon } from '@salt-ds/icons';
import { makePrefixer } from '@salt-ds/core';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './TreeNode.css.js';

const withBaseName = makePrefixer("saltTreeNode");
const TreeNode = ({
  "aria-level": ariaLevel,
  children,
  className: classNameProp,
  description,
  highlighted,
  idx,
  isLeaf = false,
  label,
  onMouseEnter,
  selected,
  ...props
}) => {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-tree-node",
    css: css_248z,
    window: targetWindow
  });
  const className = clsx(withBaseName(), classNameProp, {
    [withBaseName("highlighted")]: highlighted
  });
  return /* @__PURE__ */ jsxs("li", {
    ...props,
    className,
    role: "presentation",
    children: [
      /* @__PURE__ */ jsxs("div", {
        "aria-level": ariaLevel,
        "aria-selected": selected || void 0,
        className: withBaseName("item"),
        onMouseEnter,
        role: "treeitem",
        children: [
          isLeaf === false ? /* @__PURE__ */ jsx("span", {
            className: withBaseName("toggle"),
            "data-toggle": true,
            children: /* @__PURE__ */ jsx(TriangleRightIcon, {})
          }) : null,
          /* @__PURE__ */ jsx("div", {
            className: withBaseName("label"),
            children: label
          }),
          description !== void 0 ? /* @__PURE__ */ jsx("div", {
            className: withBaseName("description"),
            children: description
          }) : null
        ]
      }),
      children
    ]
  });
};

export { TreeNode };
//# sourceMappingURL=TreeNode.js.map
