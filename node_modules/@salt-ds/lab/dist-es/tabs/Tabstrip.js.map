{"version":3,"file":"Tabstrip.js","sources":["../src/tabs/Tabstrip.tsx"],"sourcesContent":["import {\n  Button,\n  makePrefixer,\n  Tooltip,\n  useIdMemo,\n  useIsomorphicLayoutEffect,\n} from \"@salt-ds/core\";\nimport { AddIcon, OverflowMenuIcon } from \"@salt-ds/icons\";\nimport { clsx } from \"clsx\";\nimport React, {\n  ForwardedRef,\n  forwardRef,\n  KeyboardEvent,\n  MouseEvent,\n  RefObject,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { SelectionChangeHandler } from \"../common-hooks\";\n\nimport { Dropdown } from \"../dropdown\";\nimport {\n  InjectedSourceItem,\n  OverflowItem,\n  useOverflowLayout,\n} from \"../responsive\";\nimport { useOverflowCollectionItems } from \"../responsive/useOverflowCollectionItems\";\nimport { Tab } from \"./Tab\";\nimport { TabActivationIndicator } from \"./TabActivationIndicator\";\nimport {\n  FocusAPI,\n  responsiveDataAttributes,\n  TabDescriptor,\n  TabElement,\n  TabProps,\n  TabsSource,\n  TabstripProps,\n} from \"./TabsTypes\";\nimport { useTabstrip } from \"./useTabstrip\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport themeTabstripCss from \"./ThemeTabstrip.css\";\nimport tabstripCss from \"./Tabstrip.css\";\n\nconst withBaseName = makePrefixer(\"saltTabstrip\");\n\nconst ADD_TAB_LABEL = \"Create Tab\";\n\n// Simple strings for tab labels are accepted as input, convert to TabDescriptors internally\nconst tabDescriptors = (\n  tabs: TabsSource | undefined\n): TabDescriptor[] | undefined =>\n  tabs &&\n  tabs.map((tab: string | TabDescriptor) =>\n    typeof tab === \"string\" ? { label: tab } : tab\n  );\n\nexport const Tabstrip = forwardRef(function Tabstrip(\n  {\n    activeTabIndex: activeTabIndexProp,\n    allowDragDrop = false,\n    centered = false,\n    children,\n    className: classNameProp,\n    defaultSource,\n    defaultActiveTabIndex,\n    editing,\n    variant,\n    enableAddTab = false,\n    enableCloseTab,\n    enableRenameTab,\n    id: idProp,\n    keyBoardActivation = \"manual\",\n    onAddTab,\n    onActiveChange,\n    onCloseTab,\n    onEnterEditMode,\n    onExitEditMode,\n    onMouseDown,\n    onMoveTab,\n    orientation = \"horizontal\",\n    overflowMenu: overflowMenuProp = true,\n    promptForNewTabName = true,\n    showActivationIndicator = true,\n    source,\n    title,\n    ...htmlAttributes\n  }: TabstripProps,\n  forwardedRef: ForwardedRef<FocusAPI>\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-tab-strip\",\n    css: tabstripCss,\n    window: targetWindow,\n  });\n  useComponentCssInjection({\n    testId: \"salt-theme-tab-strip\",\n    css: themeTabstripCss,\n    window: targetWindow,\n  });\n\n  const root = useRef<HTMLDivElement>(null);\n  // can't use forwardedRef here, can we ?\n  // const setForkRef = useForkRef(root, forwardedRef);\n  const activeRef = useRef<number | null>(\n    activeTabIndexProp || defaultActiveTabIndex || 0\n  );\n\n  const overflowItemsRef = useRef<OverflowItem[]>([]);\n  const [showOverflowMenu, _setShowOverflowMenu] = useState(false);\n\n  const setShowOverflowMenu = useCallback((value: boolean) => {\n    _setShowOverflowMenu(value);\n  }, []);\n\n  const tabstripId = useIdMemo(idProp);\n\n  const injectedItems = enableAddTab\n    ? [\n        {\n          source: { label: \"Add Tab\", position: -1, priority: 1 },\n        } as InjectedSourceItem,\n      ]\n    : undefined;\n\n  const collectionHook = useOverflowCollectionItems({\n    children,\n    defaultSource: tabDescriptors(defaultSource),\n    id: tabstripId,\n    injectedItems,\n    label: \"Tabstrip\",\n    orientation,\n    source: tabDescriptors(source),\n    options: {\n      closeable: enableCloseTab,\n      editable: enableRenameTab,\n      getPriority: (item, index) => {\n        return index === activeRef.current ? 1 : undefined;\n      },\n    },\n  });\n\n  const childCount = useRef(React.Children.count(children));\n\n  const getChildren = (): TabElement[] | undefined => {\n    if (React.Children.count(children) === 0) {\n      return undefined;\n    } else {\n      return React.Children.toArray(children) as TabElement[];\n    }\n  };\n\n  const [innerContainerRef, switchOverflowPriorities] = useOverflowLayout({\n    collectionHook,\n    disableOverflow: overflowMenuProp === false,\n    id: tabstripId,\n    orientation,\n    label: \"Tabstrip\",\n  });\n  overflowItemsRef.current = collectionHook.data;\n  const overflowedItems = collectionHook.data.filter((item) => item.overflowed);\n\n  const tabMovedHandler = useCallback(\n    (fromIndex: number, toIndex: number) => {\n      onMoveTab?.(fromIndex, toIndex);\n      setTimeout(() => {\n        collectionHook.dispatch({\n          type: \"reset\",\n        });\n      }, 50);\n    },\n    [collectionHook, onMoveTab]\n  );\n\n  const handleTabSelectionChange = useCallback(\n    (tabIndex: number) => {\n      const selectedItem = collectionHook.data[tabIndex];\n      const prevSelectedItem = collectionHook.data.find(\n        (item) => item.priority === 1 && !item.isOverflowIndicator\n      );\n      if (selectedItem && prevSelectedItem && overflowMenuProp) {\n        switchOverflowPriorities(selectedItem, prevSelectedItem);\n      }\n      onActiveChange?.(tabIndex);\n      setShowOverflowMenu(false);\n    },\n    [\n      collectionHook.data,\n      onActiveChange,\n      overflowMenuProp,\n      setShowOverflowMenu,\n      switchOverflowPriorities,\n    ]\n  );\n\n  const {\n    activeTabIndex,\n    activateTab,\n    addTab,\n    onMouseDown: tabstripHookMouseDown,\n    ...tabstripHook\n  } = useTabstrip({\n    activeTabIndex: activeTabIndexProp,\n    allowDragDrop,\n    collectionHook,\n    defaultTabs: tabDescriptors(defaultSource),\n    defaultActiveTabIndex,\n    editing,\n    enableAddTab,\n    idRoot: tabstripId,\n    innerContainerRef,\n    keyBoardActivation,\n    onActiveChange: handleTabSelectionChange,\n    onCloseTab,\n    onEnterEditMode,\n    onExitEditMode,\n    onMoveTab: tabMovedHandler,\n    orientation,\n    promptForNewTabName,\n    tabs: tabDescriptors(source) ?? getChildren(),\n  });\n\n  activeRef.current = activeTabIndex;\n\n  useImperativeHandle(\n    forwardedRef,\n    () =>\n      ({\n        focus: () => {\n          const { current: tabstrip } = root;\n          if (tabstrip) {\n            const selectedTab = tabstrip.querySelector(\n              '.saltTab[aria-selected=\"true\"]'\n            ) as HTMLElement;\n            if (selectedTab) {\n              selectedTab.focus();\n            }\n          }\n        },\n      } as FocusAPI),\n    []\n  );\n\n  const handleAddTabClick = useCallback(() => {\n    if (!collectionHook.isControlled) {\n      addTab();\n    }\n    onAddTab?.();\n  }, [collectionHook.isControlled, onAddTab, addTab]);\n\n  const selectedIndex = useRef(activeTabIndex);\n  const focusedTabIndex = tabstripHook.highlightedIdx;\n  const handleOverflowSelectionChange: SelectionChangeHandler<OverflowItem> =\n    useCallback(\n      (e, tab) => {\n        if (tab !== null) {\n          activateTab(tab.index);\n        }\n      },\n      [activateTab]\n    );\n\n  const handleKeydownOverflowMenu = useCallback(\n    (e: KeyboardEvent<HTMLElement>) => {\n      tabstripHook.navigationProps?.onKeyDown?.(e);\n    },\n    [tabstripHook.navigationProps]\n  );\n\n  const handleOverflowMenuOpen = useCallback(\n    (open: boolean) => {\n      setShowOverflowMenu(open);\n    },\n    [setShowOverflowMenu]\n  );\n\n  const handleMouseDown = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      onMouseDown?.(evt);\n      tabstripHookMouseDown?.(evt);\n    },\n    [onMouseDown, tabstripHookMouseDown]\n  );\n\n  // shouldn't we use ref for this ?\n  useIsomorphicLayoutEffect(() => {\n    // We don't care about changes to overflowedItems here, the overflowObserver\n    // always does the right thing. We only care about changes to selected tab\n    if (selectedIndex.current !== activeTabIndex && overflowMenuProp) {\n      // We might want to do this only if the selected tab is overflowed ?\n      // TODO\n      // resetOverflow();\n      selectedIndex.current = activeTabIndex;\n    }\n  }, [overflowMenuProp, activeTabIndex]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (React.Children.count(children) !== childCount.current) {\n      childCount.current = React.Children.count(children);\n      // TODO\n      // resetOverflow();\n    }\n  }, [children]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      activeTabIndex !== null &&\n      focusedTabIndex !== activeTabIndex &&\n      focusedTabIndex !== -1\n    ) {\n      tabstripHook.focusTab(activeTabIndex);\n    }\n\n    // We only want the effect to run when value changes, not every time focusedTabIndex changes.\n    // It doesn't matter if focusedTabIndex is stale in between calls - it will be correct when\n    // value changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabIndex]);\n\n  const renderContent = () => {\n    const content = collectionHook.data\n      .filter((item) => !item.isOverflowIndicator && !item.isInjectedItem)\n      .map((item: OverflowItem, index: number) => {\n        // TODO sort out typoing\n        const tab = item.source as unknown as TabDescriptor;\n        const element = item.element as TabElement;\n\n        const selected = index === activeTabIndex;\n        const focusVisible = tabstripHook.focusVisible === index;\n        const overflowed =\n          overflowedItems.findIndex(\n            (item: OverflowItem) => item.index === index\n          ) !== -1;\n\n        const tabIsBeingEdited = tabstripHook.editing && selected;\n        const tabIndex = tabIsBeingEdited\n          ? undefined\n          : selected && !tabstripHook.focusIsWithinComponent\n          ? 0\n          : -1;\n\n        const baseProps: Partial<TabProps> &\n          responsiveDataAttributes & {\n            ref?: RefObject<HTMLDivElement>;\n            key: string | number;\n          } = {\n          \"data-index\": index,\n          \"data-priority\": item.priority,\n          \"data-overflowed\": overflowed ? true : undefined,\n          ...tabstripHook.navigationProps,\n          id: item.id,\n          key: index,\n          onMouseDown: handleMouseDown,\n          tabIndex,\n        };\n\n        const tabProps = {\n          ...tabstripHook.tabProps,\n          closeable: item.closeable,\n          dragging: tabstripHook.draggedItemIndex === index,\n          editable: item.editable,\n          editing: tabIsBeingEdited,\n          focusVisible,\n          index,\n          onClose: item.closeable ? tabstripHook.closeTab : undefined,\n          orientation,\n          selected,\n        } as Partial<TabProps>;\n\n        if (React.isValidElement(element)) {\n          if (element.type === Tab) {\n            return React.cloneElement(element, { ...baseProps, ...tabProps });\n          } else {\n            return React.cloneElement(element, baseProps);\n          }\n        } else {\n          //@ts-ignore tab can only be a TabDescriptor here, but TypeScript seems to think it can be a number\n          return React.createElement(Tab, {\n            ...baseProps,\n            ...tabProps,\n            label: tab.label,\n          });\n        }\n      });\n\n    const overflowCount = overflowedItems.length;\n    const draggingActiveTab = tabstripHook.draggedItemIndex === activeTabIndex;\n    const showOverflow =\n      (tabstripHook.revealOverflowedItems && !draggingActiveTab) ||\n      showOverflowMenu;\n    const showTooltip = tabstripHook.revealOverflowedItems && draggingActiveTab;\n    const overflowIndicator = collectionHook.data.find(\n      (i) => i.isOverflowIndicator\n    );\n    const [injectedItem] = collectionHook.data.filter((i) => i.isInjectedItem);\n\n    if (overflowIndicator) {\n      content.push(\n        <Tooltip\n          content=\"Active Tab cannot be moved into overflow list\"\n          open\n          disabled={!showTooltip}\n          status=\"warning\"\n          key=\"tooltip\"\n          hideArrow\n        >\n          <Dropdown<OverflowItem>\n            className={clsx(withBaseName(\"overflowMenu\"), {\n              [withBaseName(\"overflowMenu-open\")]: showOverflow,\n            })}\n            ListProps={{\n              className: clsx({\n                [withBaseName(\"overflowMenu-dropTarget\")]:\n                  tabstripHook.revealOverflowedItems,\n              }),\n            }}\n            data-overflow-indicator\n            data-priority={0}\n            id={overflowIndicator.id}\n            isOpen={showOverflow}\n            key=\"overflow\"\n            onOpenChange={handleOverflowMenuOpen}\n            onKeyDown={handleKeydownOverflowMenu}\n            onSelectionChange={handleOverflowSelectionChange}\n            placement=\"bottom-end\"\n            source={overflowedItems}\n            selected={null}\n            triggerComponent={\n              <Button\n                aria-label={`Tabs overflow menu ${overflowCount} item${\n                  overflowCount === 1 ? \"\" : \"s\"\n                }`}\n                variant=\"secondary\"\n                tabIndex={-1}\n              >\n                <OverflowMenuIcon />\n              </Button>\n            }\n            width=\"auto\"\n          />\n        </Tooltip>\n      );\n    }\n\n    if (injectedItem) {\n      content.push(\n        <Button\n          {...tabstripHook.navigationProps}\n          aria-label={ADD_TAB_LABEL}\n          data-priority={injectedItem.priority}\n          data-overflowed={injectedItem.overflowed}\n          id={injectedItem.id}\n          key=\"addButton\"\n          onClick={handleAddTabClick}\n          variant=\"secondary\"\n          tabIndex={-1}\n        >\n          <AddIcon />\n        </Button>\n      );\n    }\n\n    return content;\n  };\n\n  const selectedTabOverflowed = overflowedItems.some(\n    (item: OverflowItem) => item.index === activeTabIndex\n  );\n  const className = clsx(\n    withBaseName(),\n    withBaseName(orientation),\n    classNameProp,\n    {\n      [withBaseName(\"centered\")]: centered,\n      [withBaseName(\"draggingTab\")]: tabstripHook.isDragging,\n      [withBaseName(\"tertiary\")]: variant === \"tertiary\",\n    }\n  );\n\n  const selectedTabId =\n    activeTabIndex !== null ? collectionHook.data[activeTabIndex].id : null;\n\n  return (\n    <div\n      {...htmlAttributes}\n      {...tabstripHook.containerProps}\n      className={className}\n      id={tabstripId}\n      ref={root}\n      role=\"tablist\"\n    >\n      <div className={withBaseName(\"inner\")} ref={innerContainerRef}>\n        {renderContent()}\n      </div>\n      {showActivationIndicator ? (\n        <TabActivationIndicator\n          hideThumb={selectedTabOverflowed || tabstripHook.isDragging}\n          orientation={orientation}\n          tabId={selectedTabId}\n        />\n      ) : null}\n      {tabstripHook.draggable}\n    </div>\n  );\n});\n\nTabstrip.displayName = \"Tabstrip\";\n"],"names":["Tabstrip","tabstripCss","themeTabstripCss","_a","item"],"mappings":"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"}