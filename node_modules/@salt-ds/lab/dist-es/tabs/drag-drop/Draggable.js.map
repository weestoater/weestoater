{"version":3,"file":"Draggable.js","sources":["../src/tabs/drag-drop/Draggable.tsx"],"sourcesContent":["import { useForkRef } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { forwardRef, MutableRefObject, useCallback } from \"react\";\nimport { Rect } from \"./dragDropTypes\";\nimport { Portal } from \"../../portal\";\n\nimport draggableCss from \"./Draggable.css\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\n\nconst makeClassNames = (classNames: string) =>\n  classNames.split(\" \").map((className) => `saltDraggable-${className}`);\nexport const Draggable = forwardRef<\n  HTMLDivElement,\n  { wrapperClassName: string; element: HTMLElement; rect: Rect; scale?: number }\n>(function Draggable(\n  { wrapperClassName, element, rect, scale = 1 },\n  forwardedRef\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-draggable\",\n    css: draggableCss,\n    window: targetWindow,\n  });\n\n  const callbackRef = useCallback(\n    (el: HTMLDivElement) => {\n      if (el) {\n        el.innerHTML = \"\";\n        el.appendChild(element);\n        if (scale !== 1) {\n          el.style.transform = `scale(${scale},${scale})`;\n        }\n      }\n    },\n    [element, scale]\n  );\n  const forkedRef = useForkRef<HTMLDivElement>(forwardedRef, callbackRef);\n\n  const { left, top, width, height } = rect;\n\n  return (\n    <Portal>\n      <div\n        className={clsx(\"saltDraggable\", ...makeClassNames(wrapperClassName))}\n        ref={forkedRef}\n        style={{ left, top, width, height }}\n      />\n    </Portal>\n  );\n});\n\nexport const createDragSpacer = (\n  transitioning?: MutableRefObject<boolean>\n): HTMLElement => {\n  const spacer = document.createElement(\"div\");\n  spacer.className = \"saltDraggable-spacer\";\n  if (transitioning) {\n    spacer.addEventListener(\"transitionend\", () => {\n      transitioning.current = false;\n    });\n  }\n  return spacer;\n};\n"],"names":["Draggable","draggableCss"],"mappings":";;;;;;;;;AAUA,MAAM,cAAA,GAAiB,CAAC,UAAA,KACtB,UAAW,CAAA,KAAA,CAAM,GAAG,CAAA,CAAE,GAAI,CAAA,CAAC,SAAc,KAAA,CAAA,cAAA,EAAiB,SAAW,CAAA,CAAA,CAAA,CAAA;AAC1D,MAAA,SAAA,GAAY,UAGvB,CAAA,SAASA,UACT,CAAA,EAAE,gBAAkB,EAAA,OAAA,EAAS,IAAM,EAAA,KAAA,GAAQ,CAAE,EAAA,EAC7C,YACA,EAAA;AACA,EAAA,MAAM,eAAe,SAAU,EAAA,CAAA;AAC/B,EAAyB,wBAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,gBAAA;AAAA,IACR,GAAK,EAAAC,QAAA;AAAA,IACL,MAAQ,EAAA,YAAA;AAAA,GACT,CAAA,CAAA;AAED,EAAA,MAAM,WAAc,GAAA,WAAA;AAAA,IAClB,CAAC,EAAuB,KAAA;AACtB,MAAA,IAAI,EAAI,EAAA;AACN,QAAA,EAAA,CAAG,SAAY,GAAA,EAAA,CAAA;AACf,QAAA,EAAA,CAAG,YAAY,OAAO,CAAA,CAAA;AACtB,QAAA,IAAI,UAAU,CAAG,EAAA;AACf,UAAG,EAAA,CAAA,KAAA,CAAM,SAAY,GAAA,CAAA,MAAA,EAAS,KAAS,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAAA,SACzC;AAAA,OACF;AAAA,KACF;AAAA,IACA,CAAC,SAAS,KAAK,CAAA;AAAA,GACjB,CAAA;AACA,EAAM,MAAA,SAAA,GAAY,UAA2B,CAAA,YAAA,EAAc,WAAW,CAAA,CAAA;AAEtE,EAAA,MAAM,EAAE,IAAA,EAAM,GAAK,EAAA,KAAA,EAAO,QAAW,GAAA,IAAA,CAAA;AAErC,EAAA,uBACG,GAAA,CAAA,MAAA,EAAA;AAAA,IACC,QAAC,kBAAA,GAAA,CAAA,KAAA,EAAA;AAAA,MACC,WAAW,IAAK,CAAA,eAAA,EAAiB,GAAG,cAAA,CAAe,gBAAgB,CAAC,CAAA;AAAA,MACpE,GAAK,EAAA,SAAA;AAAA,MACL,KAAO,EAAA,EAAE,IAAM,EAAA,GAAA,EAAK,OAAO,MAAO,EAAA;AAAA,KACpC,CAAA;AAAA,GACF,CAAA,CAAA;AAEJ,CAAC,EAAA;AAEY,MAAA,gBAAA,GAAmB,CAC9B,aACgB,KAAA;AAChB,EAAM,MAAA,MAAA,GAAS,QAAS,CAAA,aAAA,CAAc,KAAK,CAAA,CAAA;AAC3C,EAAA,MAAA,CAAO,SAAY,GAAA,sBAAA,CAAA;AACnB,EAAA,IAAI,aAAe,EAAA;AACjB,IAAO,MAAA,CAAA,gBAAA,CAAiB,iBAAiB,MAAM;AAC7C,MAAA,aAAA,CAAc,OAAU,GAAA,KAAA,CAAA;AAAA,KACzB,CAAA,CAAA;AAAA,GACH;AACA,EAAO,OAAA,MAAA,CAAA;AACT;;;;"}