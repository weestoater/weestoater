{"version":3,"file":"useDragDropNaturalMovement.js","sources":["../src/tabs/drag-drop/useDragDropNaturalMovement.tsx"],"sourcesContent":["import { MouseEventHandler, useCallback, useRef, useState } from \"react\";\n\nimport { DragDropHook, Direction } from \"./dragDropTypes\";\nimport { useDragSpacers } from \"./useDragSpacers\";\n\nimport {\n  dimensions,\n  isDraggedElement,\n  MeasuredDropTarget,\n  measureDropTargets,\n  moveDragItem,\n  getDraggedItem,\n  getNextDropTarget,\n} from \"./drag-utils\";\n\nimport { Draggable } from \"./Draggable\";\n\nconst dragThreshold = 3;\n\nexport const useDragDropNaturalMovement: DragDropHook = ({\n  onDrop,\n  orientation = \"horizontal\",\n  containerRef,\n  itemQuery = \"*\",\n}) => {\n  const [showOverflow, setShowOverflow] = useState(false);\n  const overflowMenuShowingRef = useRef(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragPortal, setDragPortal] = useState<JSX.Element | null>(null);\n  const draggableRef = useRef<HTMLDivElement>(null);\n  const startPos = useRef(0);\n  const previousPos = useRef(0);\n  const mouseOffset = useRef(0);\n  const mouseDownTimer = useRef<number | null>(null);\n  const dragLimits = useRef({ start: 0, end: 0 });\n  const dragDirection = useRef<Direction | undefined>();\n  const dropTarget = useRef<MeasuredDropTarget | null>(null);\n  const measuredDropTargets = useRef<MeasuredDropTarget[]>([]);\n  const { clearSpacers, displaceItem, displaceLastItem } = useDragSpacers();\n\n  const dragMouseMoveHandler = useCallback(\n    (evt: MouseEvent) => {\n      const { POS } = dimensions(orientation);\n      const { [POS]: clientPos } = evt;\n      const { current: lastClientPos } = previousPos;\n      const { current: currentDropTarget } = dropTarget;\n      const { current: dropTargets } = measuredDropTargets;\n      const draggedItem = getDraggedItem(dropTargets);\n\n      if (Math.abs(lastClientPos - clientPos) > 0) {\n        previousPos.current = clientPos;\n\n        const moveDistance = clientPos - startPos.current;\n\n        const pos = startPos.current - mouseOffset.current + moveDistance;\n        const renderPos = Math.max(\n          dragLimits.current.start,\n          Math.min(dragLimits.current.end, pos)\n        );\n\n        if (draggableRef.current && containerRef.current) {\n          // Have to redefine the following here as we're using it as a style type not a DOMRect type\n          const START = orientation === \"horizontal\" ? \"left\" : \"top\";\n          draggableRef.current.style[START] = `${renderPos}px`;\n\n          const direction = lastClientPos < clientPos ? \"fwd\" : \"bwd\";\n          const offsetPos = clientPos - mouseOffset.current;\n          const leadingEdge =\n            direction === \"fwd\" ? offsetPos + draggedItem.size : offsetPos;\n\n          const nextDropTarget = getNextDropTarget(\n            measuredDropTargets.current,\n            leadingEdge,\n            direction\n          );\n\n          if (\n            nextDropTarget &&\n            (nextDropTarget.index !== currentDropTarget?.index ||\n              direction !== dragDirection.current)\n          ) {\n            if (nextDropTarget.isOverflowIndicator) {\n              // Does this belong in here or can we abstract it out\n              setShowOverflow((overflowMenuShowingRef.current = true));\n            } else {\n              const newDropTargets = moveDragItem(dropTargets, nextDropTarget);\n              const draggedItem = getDraggedItem(newDropTargets);\n\n              const nextDisplacedItem =\n                newDropTargets[draggedItem.currentIndex + 1];\n              if (nextDisplacedItem) {\n                displaceItem(\n                  nextDisplacedItem,\n                  draggedItem.size,\n                  true,\n                  direction\n                );\n              } else {\n                const displacedItem =\n                  newDropTargets[draggedItem.currentIndex - 1];\n                displaceLastItem(displacedItem, draggedItem.size, true);\n              }\n              measuredDropTargets.current = newDropTargets;\n              setShowOverflow((overflowMenuShowingRef.current = false));\n            }\n\n            dropTarget.current = nextDropTarget;\n            dragDirection.current = direction;\n          }\n        }\n      }\n    },\n    [containerRef, displaceItem, displaceLastItem, orientation]\n  );\n\n  const dragMouseUpHandler = useCallback(() => {\n    document.removeEventListener(\"mousemove\", dragMouseMoveHandler, false);\n    document.removeEventListener(\"mouseup\", dragMouseUpHandler, false);\n\n    clearSpacers();\n\n    const { current: dropTargets } = measuredDropTargets;\n    const draggedItem = getDraggedItem(dropTargets);\n    const { dataIndex = -1, index, currentIndex: toIndex } = draggedItem;\n\n    const fromIndex = dataIndex !== -1 ? dataIndex : index;\n    dropTarget.current = null;\n    dragDirection.current = undefined;\n\n    setDragPortal(null);\n\n    if (overflowMenuShowingRef.current) {\n      onDrop(fromIndex, -1);\n    } else if (fromIndex !== toIndex) {\n      onDrop(fromIndex, toIndex);\n    }\n    setShowOverflow(false);\n    setIsDragging(false);\n  }, [clearSpacers, dragMouseMoveHandler, onDrop]);\n\n  const enterDraggingState = useCallback(\n    (evt: MouseEvent) => {\n      const { POS, START } = dimensions(orientation);\n      const { [POS]: clientPos } = evt;\n\n      const evtTarget = evt.target as HTMLElement;\n      const dragElement = evtTarget.closest(itemQuery) as HTMLElement;\n      if (dragElement) {\n        // TODO this is very specific to responsive Container\n        const query = `:is(${itemQuery}:not([data-overflowed=\"true\"]),[data-overflow-indicator])`;\n        const dropTargets = measureDropTargets(\n          containerRef.current as HTMLElement,\n          orientation,\n          dragElement,\n          query\n        );\n\n        const draggedItem = dropTargets.find(isDraggedElement);\n        if (draggedItem && containerRef.current) {\n          measuredDropTargets.current = dropTargets;\n          dropTarget.current = draggedItem;\n\n          const containerRect = containerRef.current.getBoundingClientRect();\n          const draggableRect = draggedItem.element.getBoundingClientRect();\n          mouseOffset.current = clientPos - draggedItem.start;\n          const [lastItem] = dropTargets.slice(-1);\n          const lastChildEnd = lastItem.end;\n\n          console.log({ lastItem });\n\n          dragLimits.current.start = containerRect[START];\n          dragLimits.current.end = lastItem.isOverflowIndicator\n            ? Math.max(lastItem.start, containerRect.right - draggedItem.size)\n            : lastChildEnd - draggedItem.size;\n\n          setDragPortal(\n            <Draggable\n              wrapperClassName={`tabstrip-${orientation}`}\n              ref={draggableRef}\n              rect={draggableRect}\n              element={dragElement.cloneNode(true) as HTMLElement}\n            />\n          );\n\n          if (draggedItem !== lastItem) {\n            const nextItem = dropTargets[draggedItem.index + 1];\n            displaceItem(nextItem, draggedItem.size, false);\n          } else {\n            const displacedItem = dropTargets[draggedItem.index];\n            displaceLastItem(displacedItem, draggedItem.size, false);\n          }\n\n          setIsDragging(true);\n        }\n\n        document.addEventListener(\"mousemove\", dragMouseMoveHandler, false);\n        document.addEventListener(\"mouseup\", dragMouseUpHandler, false);\n      }\n    },\n    [\n      containerRef,\n      displaceItem,\n      displaceLastItem,\n      dragMouseMoveHandler,\n      dragMouseUpHandler,\n      itemQuery,\n      orientation,\n      setIsDragging,\n    ]\n  );\n\n  const preDragMouseMoveHandler = useCallback(\n    (evt: MouseEvent) => {\n      const { POS } = dimensions(orientation);\n      const { [POS]: clientPos } = evt;\n      const mouseMoveDistance = Math.abs(clientPos - startPos.current);\n      if (mouseMoveDistance > dragThreshold && containerRef.current) {\n        if (mouseDownTimer.current) {\n          window.clearTimeout(mouseDownTimer.current);\n          mouseDownTimer.current = null;\n        }\n        document.removeEventListener(\n          \"mousemove\",\n          preDragMouseMoveHandler,\n          false\n        );\n        document.removeEventListener(\"mouseup\", preDragMouseUpHandler, false);\n\n        enterDraggingState(evt);\n      }\n    },\n    [containerRef, enterDraggingState, orientation]\n  );\n\n  const preDragMouseUpHandler = useCallback(() => {\n    if (mouseDownTimer.current) {\n      window.clearTimeout(mouseDownTimer.current);\n      mouseDownTimer.current = null;\n    }\n    document.removeEventListener(\"mousemove\", preDragMouseMoveHandler, false);\n    document.removeEventListener(\"mouseup\", preDragMouseUpHandler, false);\n  }, [preDragMouseMoveHandler]);\n\n  const mouseDownHandler: MouseEventHandler = useCallback(\n    (evt) => {\n      if (containerRef.current && !evt.defaultPrevented) {\n        const { POS } = dimensions(orientation);\n        const { [POS]: clientPos } = evt;\n        startPos.current = clientPos;\n        previousPos.current = clientPos;\n\n        document.addEventListener(\"mousemove\", preDragMouseMoveHandler, false);\n        document.addEventListener(\"mouseup\", preDragMouseUpHandler, false);\n\n        evt.persist();\n\n        mouseDownTimer.current = window.setTimeout(() => {\n          document.removeEventListener(\n            \"mousemove\",\n            preDragMouseMoveHandler,\n            false\n          );\n          document.removeEventListener(\"mouseup\", preDragMouseUpHandler, false);\n\n          enterDraggingState(evt.nativeEvent);\n        }, 500);\n      }\n    },\n    [\n      containerRef,\n      enterDraggingState,\n      orientation,\n      preDragMouseMoveHandler,\n      preDragMouseUpHandler,\n    ]\n  );\n\n  const draggedItemIndex = isDragging\n    ? getDraggedItem(measuredDropTargets.current).dataIndex\n    : -1;\n\n  return {\n    draggable: dragPortal,\n    dropIndicator: null,\n    draggedItemIndex,\n    isDragging,\n    onMouseDown: mouseDownHandler,\n    revealOverflowedItems: showOverflow,\n  };\n};\n"],"names":["draggedItem"],"mappings":"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"}