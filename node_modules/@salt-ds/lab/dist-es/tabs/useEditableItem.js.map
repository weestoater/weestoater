{"version":3,"file":"useEditableItem.js","sources":["../src/tabs/useEditableItem.ts"],"sourcesContent":["import { useControlled } from \"@salt-ds/core\";\nimport { useCallback, KeyboardEvent } from \"react\";\nimport { OverflowItem } from \"../responsive\";\n\nconst editKeys = new Set([\"Enter\", \" \"]);\nconst isEditKey = (key: string) => editKeys.has(key);\n\nexport type ExitEditModeHandler = (\n  originalValue: string,\n  editedValue: string,\n  allowDeactivation: boolean,\n  tabIndex: number\n) => void;\n\nexport interface Editable {\n  editing: boolean;\n  onEnterEditMode: () => void;\n  onExitEditMode: ExitEditModeHandler;\n  setEditing: (value: boolean) => void;\n}\nexport interface EditableItemHookProps extends Partial<Editable> {\n  highlightedIdx: number;\n  indexPositions: OverflowItem[];\n}\n\nexport interface EditableItemHookResult extends Editable {\n  onKeyDown: (evt: KeyboardEvent) => void;\n}\n\nexport const useEditableItem = ({\n  editing: editingProp,\n  highlightedIdx,\n  indexPositions,\n  onEnterEditMode: onEnterEditModeProp,\n  onExitEditMode: onExitEditModeProp,\n}: EditableItemHookProps): EditableItemHookResult => {\n  const [editing, setEditing] = useControlled({\n    controlled: editingProp,\n    default: false,\n    name: \"useEditableItem\",\n    state: \"editing\",\n  });\n\n  const onEnterEditMode = useCallback(() => {\n    setEditing(true);\n    onEnterEditModeProp?.();\n  }, [onEnterEditModeProp, setEditing]);\n\n  const onExitEditMode = (\n    originalValue: string,\n    editedValue: string,\n    allowDeactivation: boolean,\n    tabIndex: number\n  ) => {\n    setEditing(false);\n    console.log(\"exit edit mode\");\n    onExitEditModeProp?.(\n      originalValue,\n      editedValue,\n      allowDeactivation,\n      tabIndex\n    );\n  };\n\n  const onKeyDown = useCallback(\n    (evt: KeyboardEvent) => {\n      console.log(`useEditableItem onKeyDown ${highlightedIdx}`, {\n        editable: indexPositions[highlightedIdx]?.editable,\n      });\n      if (isEditKey(evt.key) && indexPositions[highlightedIdx]?.editable) {\n        onEnterEditMode();\n      }\n    },\n    [onEnterEditMode, highlightedIdx, indexPositions]\n  );\n\n  return {\n    editing,\n    onKeyDown,\n    onEnterEditMode,\n    onExitEditMode,\n    setEditing,\n  };\n};\n"],"names":[],"mappings":";;;AAIA,MAAM,2BAAe,IAAA,GAAA,CAAI,CAAC,OAAA,EAAS,GAAG,CAAC,CAAA,CAAA;AACvC,MAAM,SAAY,GAAA,CAAC,GAAgB,KAAA,QAAA,CAAS,IAAI,GAAG,CAAA,CAAA;AAwB5C,MAAM,kBAAkB,CAAC;AAAA,EAC9B,OAAS,EAAA,WAAA;AAAA,EACT,cAAA;AAAA,EACA,cAAA;AAAA,EACA,eAAiB,EAAA,mBAAA;AAAA,EACjB,cAAgB,EAAA,kBAAA;AAClB,CAAqD,KAAA;AACnD,EAAA,MAAM,CAAC,OAAA,EAAS,UAAU,CAAA,GAAI,aAAc,CAAA;AAAA,IAC1C,UAAY,EAAA,WAAA;AAAA,IACZ,OAAS,EAAA,KAAA;AAAA,IACT,IAAM,EAAA,iBAAA;AAAA,IACN,KAAO,EAAA,SAAA;AAAA,GACR,CAAA,CAAA;AAED,EAAM,MAAA,eAAA,GAAkB,YAAY,MAAM;AACxC,IAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AACf,IAAA,mBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,mBAAA,EAAA,CAAA;AAAA,GACC,EAAA,CAAC,mBAAqB,EAAA,UAAU,CAAC,CAAA,CAAA;AAEpC,EAAA,MAAM,cAAiB,GAAA,CACrB,aACA,EAAA,WAAA,EACA,mBACA,QACG,KAAA;AACH,IAAA,UAAA,CAAW,KAAK,CAAA,CAAA;AAChB,IAAA,OAAA,CAAQ,IAAI,gBAAgB,CAAA,CAAA;AAC5B,IAAA,kBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,kBAAA;AAAA,MACE,aAAA;AAAA,MACA,WAAA;AAAA,MACA,iBAAA;AAAA,MACA,QAAA;AAAA,KAAA,CAAA;AAAA,GAEJ,CAAA;AAEA,EAAA,MAAM,SAAY,GAAA,WAAA;AAAA,IAChB,CAAC,GAAuB,KAAA;AAjE5B,MAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAkEM,MAAQ,OAAA,CAAA,GAAA,CAAI,6BAA6B,cAAkB,CAAA,CAAA,EAAA;AAAA,QACzD,QAAA,EAAA,CAAU,EAAe,GAAA,cAAA,CAAA,cAAA,CAAA,KAAf,IAAgC,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA;AAAA,OAC3C,CAAA,CAAA;AACD,MAAA,IAAI,UAAU,GAAI,CAAA,GAAG,OAAK,EAAe,GAAA,cAAA,CAAA,cAAA,CAAA,KAAf,mBAAgC,QAAU,CAAA,EAAA;AAClE,QAAgB,eAAA,EAAA,CAAA;AAAA,OAClB;AAAA,KACF;AAAA,IACA,CAAC,eAAiB,EAAA,cAAA,EAAgB,cAAc,CAAA;AAAA,GAClD,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,OAAA;AAAA,IACA,SAAA;AAAA,IACA,eAAA;AAAA,IACA,cAAA;AAAA,IACA,UAAA;AAAA,GACF,CAAA;AACF;;;;"}