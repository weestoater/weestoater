import { useControlled } from '@salt-ds/core';
import { useCallback } from 'react';

const defaultSelectionKeys = ["Enter", " "];
const isTabElement = (el) => el && el.matches('[class*="saltTab "]');
const useSelection = ({
  defaultSelected,
  highlightedIdx,
  onSelectionChange,
  selected: selectedProp
}) => {
  const [selected, setSelected, isControlled] = useControlled({
    controlled: selectedProp,
    default: defaultSelected != null ? defaultSelected : 0,
    name: "Tabstrip",
    state: "value"
  });
  const isSelectionEvent = useCallback(
    (evt) => defaultSelectionKeys.includes(evt.key),
    []
  );
  const selectItem = useCallback(
    (tabIndex) => {
      setSelected(tabIndex);
      onSelectionChange == null ? void 0 : onSelectionChange(tabIndex);
    },
    [onSelectionChange, setSelected]
  );
  const handleKeyDown = useCallback(
    (e) => {
      const targetElement = e.target;
      if (isSelectionEvent(e) && highlightedIdx !== selected && isTabElement(targetElement)) {
        e.stopPropagation();
        e.preventDefault();
        selectItem(highlightedIdx);
      }
    },
    [isSelectionEvent, highlightedIdx, selected, selectItem]
  );
  const onClick = useCallback(
    (e, tabIndex) => {
      if (tabIndex !== selected) {
        selectItem(tabIndex);
      }
    },
    [selectItem, selected]
  );
  return {
    activateTab: selectItem,
    isControlled,
    onClick,
    onKeyDown: handleKeyDown,
    selected
  };
};

export { isTabElement, useSelection };
//# sourceMappingURL=useSelection.js.map
