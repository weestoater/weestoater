import { jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { makePrefixer, useIdMemo } from '@salt-ds/core';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './ListItemNext.css.js';
import { useListItem } from './ListNextContext.js';

const withBaseName = makePrefixer("saltListItemNext");
const ListItemNext = forwardRef(
  function ListItemNext2({
    children,
    className,
    disabled: disabledProp,
    id: idProp,
    value,
    onClick,
    ...props
  }, ref) {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-list-item-next",
      css: css_248z,
      window: targetWindow
    });
    const id = useIdMemo(idProp);
    const listContext = useListItem();
    if (!listContext)
      return null;
    const {
      id: contextId,
      disabled: contextDisabled,
      select,
      isSelected,
      isFocused,
      highlight,
      isHighlighted
    } = listContext;
    const itemId = `${contextId || "listNext"}--${id}`;
    const disabled = disabledProp || contextDisabled;
    const selected = isSelected(value);
    const focused = isFocused(value);
    const highlighted = isHighlighted(value);
    const handleClick = (event) => {
      if (!disabled) {
        select(event);
        onClick == null ? void 0 : onClick(event);
      }
    };
    const handleMouseMove = (event) => {
      if (!highlighted) {
        highlight(event);
      }
    };
    return /* @__PURE__ */ jsx("li", {
      ref,
      className: clsx(
        withBaseName(),
        {
          [withBaseName("disabled")]: disabled,
          [withBaseName("highlighted")]: highlighted,
          [withBaseName("focused")]: focused
        },
        className
      ),
      role: "option",
      "aria-disabled": disabled || void 0,
      "aria-selected": selected || void 0,
      id: itemId,
      "data-value": value,
      onClick: handleClick,
      onMouseMove: handleMouseMove,
      ...props,
      children
    });
  }
);

export { ListItemNext };
//# sourceMappingURL=ListItemNext.js.map
