{"version":3,"file":"ListItemBase.js","sources":["../src/list-deprecated/ListItemBase.tsx"],"sourcesContent":["import { makePrefixer, Tooltip, useForkRef } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport { ForwardedRef, forwardRef, HTMLAttributes, memo, useRef } from \"react\";\n\nimport { useOverflowDetection } from \"../utils\";\nimport { Highlighter } from \"./internal/Highlighter\";\n\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport listItemCss from \"./ListItem.css\";\n\n//TODO does this need to be generic <Item?\nexport interface ListItemBaseProps extends HTMLAttributes<HTMLDivElement> {\n  disabled?: boolean;\n  deselectable?: boolean;\n  focusVisible?: boolean;\n  highlighted?: boolean;\n  itemTextHighlightPattern?: RegExp | string;\n  selected?: boolean;\n  tooltipText?: string;\n}\n\nconst withBaseName = makePrefixer(\"saltListItemDeprecated\");\n\n// just to keep line number parity\n//\nexport const ListItemBase = memo(\n  forwardRef(function ListItemBase(\n    props: ListItemBaseProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) {\n    const {\n      className,\n      deselectable,\n      selected,\n      highlighted = false,\n      focusVisible,\n      tooltipText,\n      disabled,\n      children,\n      itemTextHighlightPattern,\n      ...restProps\n    } = props;\n\n    const targetWindow = useWindow();\n    useComponentCssInjection({\n      testId: \"salt-list-item-deprecated\",\n      css: listItemCss,\n      window: targetWindow,\n    });\n\n    const { current: detectTruncation } = useRef(typeof children === \"string\");\n\n    const [overflowRef, isOverflowed] = useOverflowDetection<HTMLDivElement>();\n    const setItemRef = useForkRef(overflowRef, ref);\n\n    return (\n      <Tooltip disabled={!isOverflowed} content={tooltipText}>\n        <div\n          aria-label={typeof children === \"string\" ? children : undefined}\n          ref={detectTruncation ? ref : setItemRef}\n          {...restProps}\n          className={clsx(\n            withBaseName(),\n            {\n              [withBaseName(\"deselectable\")]: deselectable,\n              [withBaseName(\"highlighted\")]: highlighted,\n              [withBaseName(\"selected\")]: selected,\n              [withBaseName(\"focusVisible\")]: focusVisible,\n              [withBaseName(\"disabled\")]: disabled,\n            },\n            className\n          )}\n        >\n          {detectTruncation ? (\n            <span className={withBaseName(\"textWrapper\")} ref={overflowRef}>\n              {itemTextHighlightPattern == null ? (\n                children\n              ) : (\n                <Highlighter\n                  matchPattern={itemTextHighlightPattern}\n                  text={children}\n                />\n              )}\n            </span>\n          ) : (\n            children\n          )}\n        </div>\n      </Tooltip>\n    );\n  })\n);\n"],"names":["ListItemBase","listItemCss"],"mappings":";;;;;;;;;;AAuBA,MAAM,YAAA,GAAe,aAAa,wBAAwB,CAAA,CAAA;AAInD,MAAM,YAAe,GAAA,IAAA;AAAA,EAC1B,UAAW,CAAA,SAASA,aAClB,CAAA,KAAA,EACA,GACA,EAAA;AACA,IAAM,MAAA;AAAA,MACJ,SAAA;AAAA,MACA,YAAA;AAAA,MACA,QAAA;AAAA,MACA,WAAc,GAAA,KAAA;AAAA,MACd,YAAA;AAAA,MACA,WAAA;AAAA,MACA,QAAA;AAAA,MACA,QAAA;AAAA,MACA,wBAAA;AAAA,MACG,GAAA,SAAA;AAAA,KACD,GAAA,KAAA,CAAA;AAEJ,IAAA,MAAM,eAAe,SAAU,EAAA,CAAA;AAC/B,IAAyB,wBAAA,CAAA;AAAA,MACvB,MAAQ,EAAA,2BAAA;AAAA,MACR,GAAK,EAAAC,QAAA;AAAA,MACL,MAAQ,EAAA,YAAA;AAAA,KACT,CAAA,CAAA;AAED,IAAA,MAAM,EAAE,OAAS,EAAA,gBAAA,KAAqB,MAAO,CAAA,OAAO,aAAa,QAAQ,CAAA,CAAA;AAEzE,IAAA,MAAM,CAAC,WAAA,EAAa,YAAY,CAAA,GAAI,oBAAqC,EAAA,CAAA;AACzE,IAAM,MAAA,UAAA,GAAa,UAAW,CAAA,WAAA,EAAa,GAAG,CAAA,CAAA;AAE9C,IAAA,uBACG,GAAA,CAAA,OAAA,EAAA;AAAA,MAAQ,UAAU,CAAC,YAAA;AAAA,MAAc,OAAS,EAAA,WAAA;AAAA,MACzC,QAAC,kBAAA,GAAA,CAAA,KAAA,EAAA;AAAA,QACC,YAAY,EAAA,OAAO,QAAa,KAAA,QAAA,GAAW,QAAW,GAAA,KAAA,CAAA;AAAA,QACtD,GAAA,EAAK,mBAAmB,GAAM,GAAA,UAAA;AAAA,QAC7B,GAAG,SAAA;AAAA,QACJ,SAAW,EAAA,IAAA;AAAA,UACT,YAAa,EAAA;AAAA,UACb;AAAA,YACE,CAAC,YAAa,CAAA,cAAc,CAAI,GAAA,YAAA;AAAA,YAChC,CAAC,YAAa,CAAA,aAAa,CAAI,GAAA,WAAA;AAAA,YAC/B,CAAC,YAAa,CAAA,UAAU,CAAI,GAAA,QAAA;AAAA,YAC5B,CAAC,YAAa,CAAA,cAAc,CAAI,GAAA,YAAA;AAAA,YAChC,CAAC,YAAa,CAAA,UAAU,CAAI,GAAA,QAAA;AAAA,WAC9B;AAAA,UACA,SAAA;AAAA,SACF;AAAA,QAEC,6CACE,GAAA,CAAA,MAAA,EAAA;AAAA,UAAK,SAAA,EAAW,aAAa,aAAa,CAAA;AAAA,UAAG,GAAK,EAAA,WAAA;AAAA,UAChD,QAAA,EAAA,wBAAA,IAA4B,IAC3B,GAAA,QAAA,mBAEC,GAAA,CAAA,WAAA,EAAA;AAAA,YACC,YAAc,EAAA,wBAAA;AAAA,YACd,IAAM,EAAA,QAAA;AAAA,WACR,CAAA;AAAA,SAEJ,CAEA,GAAA,QAAA;AAAA,OAEJ,CAAA;AAAA,KACF,CAAA,CAAA;AAAA,GAEH,CAAA;AACH;;;;"}