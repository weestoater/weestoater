{"version":3,"file":"calcPreferredListHeight.js","sources":["../src/list-deprecated/internal/calcPreferredListHeight.js"],"sourcesContent":["export const calcPreferredListHeight = (props = {}) => {\n  const {\n    borderless,\n    displayedItemCount = 0,\n    itemCount = 0,\n    itemHeight = 0,\n    getItemHeight,\n    gapSize = 1,\n  } = props;\n\n  let preferredHeight = borderless ? 0 : 2;\n\n  // if there is no item we render with the preferred count\n  const preferredItemCount =\n    itemCount === 0\n      ? displayedItemCount\n      : Math.min(displayedItemCount, itemCount);\n\n  if (typeof getItemHeight === \"function\") {\n    preferredHeight +=\n      Array.from({ length: preferredItemCount }).reduce(\n        (total, _, index) => total + Number(getItemHeight(index)) + gapSize,\n        0\n      ) -\n      // We don't want gap after the last item\n      gapSize;\n  } else {\n    preferredHeight +=\n      preferredItemCount * Number(itemHeight) +\n      (preferredItemCount - 1) * gapSize;\n  }\n\n  // list height will be undefined if the item height can not be\n  // converted to a number, for example rem or a percentage string\n  return isNaN(preferredHeight) ? undefined : preferredHeight;\n};\n"],"names":[],"mappings":"AAAO,MAAM,uBAA0B,GAAA,CAAC,KAAQ,GAAA,EAAO,KAAA;AACrD,EAAM,MAAA;AAAA,IACJ,UAAA;AAAA,IACA,kBAAqB,GAAA,CAAA;AAAA,IACrB,SAAY,GAAA,CAAA;AAAA,IACZ,UAAa,GAAA,CAAA;AAAA,IACb,aAAA;AAAA,IACA,OAAU,GAAA,CAAA;AAAA,GACR,GAAA,KAAA,CAAA;AAEJ,EAAI,IAAA,eAAA,GAAkB,aAAa,CAAI,GAAA,CAAA,CAAA;AAGvC,EAAA,MAAM,qBACJ,SAAc,KAAA,CAAA,GACV,qBACA,IAAK,CAAA,GAAA,CAAI,oBAAoB,SAAS,CAAA,CAAA;AAE5C,EAAI,IAAA,OAAO,kBAAkB,UAAY,EAAA;AACvC,IAAA,eAAA,IACE,MAAM,IAAK,CAAA,EAAE,MAAQ,EAAA,kBAAA,EAAoB,CAAE,CAAA,MAAA;AAAA,MACzC,CAAC,OAAO,CAAG,EAAA,KAAA,KAAU,QAAQ,MAAO,CAAA,aAAA,CAAc,KAAK,CAAC,CAAI,GAAA,OAAA;AAAA,MAC5D,CAAA;AAAA,KAGF,GAAA,OAAA,CAAA;AAAA,GACG,MAAA;AACL,IAAA,eAAA,IACE,kBAAqB,GAAA,MAAA,CAAO,UAAU,CAAA,GAAA,CACrC,qBAAqB,CAAK,IAAA,OAAA,CAAA;AAAA,GAC/B;AAIA,EAAO,OAAA,KAAA,CAAM,eAAe,CAAA,GAAI,KAAY,CAAA,GAAA,eAAA,CAAA;AAC9C;;;;"}