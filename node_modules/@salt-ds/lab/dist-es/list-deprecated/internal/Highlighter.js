import { jsx, Fragment } from 'react/jsx-runtime';
import 'react';
import { escapeRegExp } from '../../utils/escapeRegExp.js';
import '@salt-ds/core';
import css_248z from './Highlighter.css.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';

const baseName = "saltHighlighter";
const Highlighter = (props) => {
  const { matchPattern, text = "" } = props;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-highligher-deprecated",
    css: css_248z,
    window: targetWindow
  });
  const matchRegex = typeof matchPattern === "string" ? new RegExp(`(${escapeRegExp(matchPattern)})`, "gi") : matchPattern;
  return /* @__PURE__ */ jsx(Fragment, {
    children: text.split(matchRegex).map(
      (part, index) => part.match(matchRegex) ? /* @__PURE__ */ jsx("strong", {
        className: `${baseName}-highlight`,
        children: part
      }, `${index}-${part}`) : part
    )
  });
};

export { Highlighter };
//# sourceMappingURL=Highlighter.js.map
