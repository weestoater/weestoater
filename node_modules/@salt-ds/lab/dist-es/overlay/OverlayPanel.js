import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { makePrefixer, useFloatingComponent, useForkRef } from '@salt-ds/core';
import { clsx } from 'clsx';
import { useOverlayContext } from './OverlayContext.js';
import { FloatingArrow } from '@floating-ui/react';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './OverlayPanel.css.js';

const withBaseName = makePrefixer("saltOverlayPanel");
const OverlayPanel = forwardRef(
  function OverlayPanel2(props, ref) {
    const {
      className,
      ["aria-labelledby"]: ariaLabelledby,
      children,
      ...rest
    } = props;
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-overlay-panel",
      css: css_248z,
      window: targetWindow
    });
    const { Component: FloatingComponent } = useFloatingComponent();
    const {
      openState,
      floatingStyles,
      context,
      getFloatingProps,
      floating,
      arrowProps
    } = useOverlayContext();
    const handleRef = useForkRef(floating, ref);
    const { top, left, width, height, position } = floatingStyles;
    return /* @__PURE__ */ jsxs(FloatingComponent, {
      open: openState,
      className: clsx(withBaseName(), className),
      "aria-modal": "true",
      ...getFloatingProps(),
      ref: handleRef,
      width,
      height,
      top,
      left,
      position,
      focusManagerProps: {
        context
      },
      "aria-labelledby": ariaLabelledby,
      children: [
        /* @__PURE__ */ jsxs("div", {
          ...rest,
          children: [
            " ",
            children,
            " "
          ]
        }),
        /* @__PURE__ */ jsx(FloatingArrow, {
          ...arrowProps,
          strokeWidth: 1,
          fill: "var(--overlay-background)",
          stroke: "var(--overlay-borderColor)",
          height: 5,
          width: 10
        })
      ]
    });
  }
);

export { OverlayPanel };
//# sourceMappingURL=OverlayPanel.js.map
