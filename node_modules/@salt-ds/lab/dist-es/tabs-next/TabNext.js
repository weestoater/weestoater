import { jsx } from 'react/jsx-runtime';
import { makePrefixer } from '@salt-ds/core';
import { forwardRef, useEffect } from 'react';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import css_248z from './TabNext.css.js';
import clsx from 'clsx';
import { OverflowItem } from '@fluentui/react-overflow';
import { useTabs } from './TabNextContext.js';

const withBaseName = makePrefixer("saltTabNext");
const TabNext = forwardRef(function Tab(props, ref) {
  const {
    children,
    className,
    disabled: disabledProp,
    onClick,
    onFocus,
    value,
    ...rest
  } = props;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-tab-next",
    css: css_248z,
    window: targetWindow
  });
  const {
    activeColor,
    isActive,
    activate,
    isFocusable,
    setFocusable,
    disabled: tabstripDisabled,
    unregisterTab,
    registerTab,
    variant
  } = useTabs();
  const active = isActive(value);
  const focusable = isFocusable(value);
  const disabled = tabstripDisabled || disabledProp;
  const handleClick = (event) => {
    activate(event);
    onClick == null ? void 0 : onClick(event);
  };
  const handleFocus = (event) => {
    setFocusable(value);
    onFocus == null ? void 0 : onFocus(event);
  };
  useEffect(() => {
    registerTab({ value, label: children });
    return () => unregisterTab(value);
  }, [children, registerTab, unregisterTab, value]);
  return /* @__PURE__ */ jsx(OverflowItem, {
    id: value,
    priority: active ? 2 : 1,
    children: /* @__PURE__ */ jsx("div", {
      className: withBaseName("wrapper"),
      children: /* @__PURE__ */ jsx("button", {
        className: clsx(
          withBaseName(),
          withBaseName(variant),
          withBaseName(activeColor),
          className
        ),
        "data-value": value,
        "aria-selected": active,
        disabled,
        value,
        ref,
        role: "tab",
        onClick: handleClick,
        onFocus: handleFocus,
        tabIndex: focusable && !disabled ? 0 : -1,
        ...rest,
        children
      })
    })
  });
});

export { TabNext };
//# sourceMappingURL=TabNext.js.map
