import { ElementType, ReactElement } from "react";
import { ResponsiveProp, PolymorphicComponentPropWithRef } from "../utils";
export declare type LayoutSeparator = "start" | "center" | "end";
export declare type LayoutDirection = "row" | "column";
export declare const FLEX_ALIGNMENT_BASE: readonly ["start", "end", "center"];
export declare const FLEX_CONTENT_ALIGNMENT_BASE: readonly ["start", "end", "center", "space-between", "space-around", "space-evenly"];
export declare type FlexAlignment = (typeof FLEX_ALIGNMENT_BASE)[number];
export declare type FlexContentAlignment = (typeof FLEX_CONTENT_ALIGNMENT_BASE)[number];
export declare type FlexLayoutProps<T extends ElementType> = PolymorphicComponentPropWithRef<T, {
    /**
     * Defines the default behavior for how flex items are laid out along the cross axis on the current line, default is "stretch".
     */
    align?: FlexAlignment | "stretch" | "baseline";
    /**
     * Establishes the main-axis, defining the direction children are placed. Default is "row".
     */
    direction?: ResponsiveProp<LayoutDirection>;
    /**
     * Controls the space between items, default is 3.
     */
    gap?: ResponsiveProp<number>;
    /**
     * Defines the alignment along the main axis, default is "start".
     */
    justify?: FlexContentAlignment;
    /**
     * **Deprecated:** For separators see `StackLayout` component instead.
     *
     * Adds a separator between elements if wrap is not active, default is false.
     */
    separators?: LayoutSeparator | true;
    /**
     * Allow the items to wrap as needed, default is false.
     */
    wrap?: ResponsiveProp<boolean>;
}>;
declare type FlexLayoutComponent = <T extends ElementType = "div">(props: FlexLayoutProps<T>) => ReactElement | null;
export declare const FlexLayout: FlexLayoutComponent;
export {};
