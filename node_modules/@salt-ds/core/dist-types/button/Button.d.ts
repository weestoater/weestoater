import { ComponentPropsWithoutRef } from "react";
export declare const ButtonVariantValues: readonly ["primary", "secondary", "cta"];
export declare type ButtonVariant = (typeof ButtonVariantValues)[number];
export interface ButtonProps extends ComponentPropsWithoutRef<"button"> {
    /**
     * If `true`, the button will be disabled.
     */
    disabled?: boolean;
    /**
     * If `true`, the button will be focusable when disabled.
     */
    focusableWhenDisabled?: boolean;
    /**
     * The variant to use. Options are 'primary', 'secondary' and 'cta'.
     * 'primary' is the default value.
     */
    variant?: ButtonVariant;
}
export declare const Button: import("react").ForwardRefExoticComponent<ButtonProps & import("react").RefAttributes<HTMLButtonElement>>;
