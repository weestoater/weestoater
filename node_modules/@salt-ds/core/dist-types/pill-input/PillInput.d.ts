import { SyntheticEvent, ComponentPropsWithoutRef, InputHTMLAttributes, ReactNode, Ref } from "react";
export interface PillInputProps extends Omit<ComponentPropsWithoutRef<"div">, "defaultValue">, Pick<ComponentPropsWithoutRef<"input">, "disabled" | "value" | "defaultValue" | "placeholder"> {
    /**
     * The marker to use in an empty read only Input.
     * Use `''` to disable this feature. Defaults to 'â€”'.
     */
    emptyReadOnlyMarker?: string;
    /**
     * End adornment component
     */
    endAdornment?: ReactNode;
    /**
     * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
     */
    inputProps?: InputHTMLAttributes<HTMLInputElement>;
    /**
     * Optional ref for the input component
     */
    inputRef?: Ref<HTMLInputElement>;
    /**
     * If `true`, the component is read only.
     */
    readOnly?: boolean;
    /**
     * The tokens to display in the input.
     */
    pills?: string[];
    onPillRemove?: (event: SyntheticEvent, index: number) => void;
    /**
     * Start adornment component
     */
    startAdornment?: ReactNode;
    /**
     * Alignment of text within container. Defaults to "left"
     */
    textAlign?: "left" | "center" | "right";
    /**
     * Validation status.
     */
    validationStatus?: "error" | "warning" | "success";
    /**
     * Styling variant. Defaults to "primary".
     */
    variant?: "primary" | "secondary";
    hidePillClose?: boolean;
    truncate?: boolean;
}
export declare const PillInput: import("react").ForwardRefExoticComponent<PillInputProps & import("react").RefAttributes<HTMLDivElement>>;
