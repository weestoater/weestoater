import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import clsx from 'clsx';
import { StatusIndicator } from '../status-indicator/StatusIndicator.js';
import { Text } from '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import { H2 } from '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import '../accordion/AccordionGroup.js';
import '../accordion/AccordionPanel.js';
import '../accordion/Accordion.js';
import '../accordion/AccordionHeader.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../button/Button.js';
import '../card/Card.js';
import '../card/InteractableCard.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import '@salt-ds/icons';
import '../combo-box/ComboBox.js';
import './Dialog.js';
import './DialogActions.js';
import './DialogContent.js';
import { useDialogContext } from './DialogContext.js';
import './DialogCloseButton.js';
import '../drawer/Drawer.js';
import '../drawer/DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import '../file-drop-zone/FileDropZone.js';
import '../file-drop-zone/FileDropZoneIcon.js';
import '../file-drop-zone/FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../form-field-context/FormFieldContext.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../input/Input.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-control/ListControlContext.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import '../pagination/Pagination.js';
import '../pagination/Paginator.js';
import '../pagination/CompactInput.js';
import '../pagination/CompactPaginator.js';
import '../pagination/GoToInput.js';
import '../panel/Panel.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import '../scrim/Scrim.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../switch/Switch.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import '@floating-ui/react';
import css_248z from './DialogHeader.css.js';

const withBaseName = makePrefixer("saltDialogHeader");
const DialogHeader = forwardRef(
  function DialogHeader2(props, ref) {
    const {
      className,
      header,
      preheader,
      disableAccent,
      status: statusProp,
      ...rest
    } = props;
    const { status: statusContext, id } = useDialogContext();
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-dialog-header",
      css: css_248z,
      window: targetWindow
    });
    const status = statusProp != null ? statusProp : statusContext;
    return /* @__PURE__ */ jsxs("div", {
      id,
      className: clsx(
        withBaseName(),
        {
          [withBaseName("withAccent")]: !disableAccent && !status,
          [withBaseName(status != null ? status : "")]: !!status
        },
        className
      ),
      ref,
      ...rest,
      children: [
        status && /* @__PURE__ */ jsx(StatusIndicator, {
          status
        }),
        /* @__PURE__ */ jsxs(H2, {
          className: withBaseName("header"),
          children: [
            preheader && /* @__PURE__ */ jsx(Text, {
              variant: "secondary",
              className: withBaseName("preheader"),
              children: preheader
            }),
            /* @__PURE__ */ jsx("div", {
              children: header
            })
          ]
        })
      ]
    });
  }
);

export { DialogHeader };
//# sourceMappingURL=DialogHeader.js.map
