import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import { forwardRef, useState, useEffect } from 'react';
import { clsx } from 'clsx';
import { useInteractions, useClick, useDismiss } from '@floating-ui/react';
import { makePrefixer } from '../utils/makePrefixer.js';
import { useFloatingComponent, useFloatingUI } from '../utils/useFloatingUI/useFloatingUI.js';
import { useForkRef } from '../utils/useForkRef.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import '../accordion/AccordionGroup.js';
import '../accordion/AccordionPanel.js';
import '../accordion/Accordion.js';
import '../accordion/AccordionHeader.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../button/Button.js';
import '../card/Card.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import '@salt-ds/icons';
import '../combo-box/ComboBox.js';
import '../dialog/Dialog.js';
import '../dialog/DialogHeader.js';
import '../dialog/DialogActions.js';
import '../dialog/DialogContent.js';
import '../dialog/DialogContext.js';
import '../dialog/DialogCloseButton.js';
import './DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import '../file-drop-zone/FileDropZone.js';
import '../file-drop-zone/FileDropZoneIcon.js';
import '../file-drop-zone/FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../status-indicator/StatusIndicator.js';
import '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import '../form-field-context/FormFieldContext.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../input/Input.js';
import '../interactable-card/InteractableCard.js';
import '../interactable-card/InteractableCardGroup.js';
import '../interactable-card/InteractableCardGroupContext.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-control/ListControlContext.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import '../pagination/Pagination.js';
import '../pagination/Paginator.js';
import '../pagination/CompactInput.js';
import '../pagination/CompactPaginator.js';
import '../pagination/GoToInput.js';
import '../panel/Panel.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import { Scrim } from '../scrim/Scrim.js';
import '../segmented-button-group/SegmentedButtonGroup.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../switch/Switch.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import css_248z from './Drawer.css.js';

const ConditionalScrimWrapper = ({
  condition,
  children
}) => {
  return condition ? /* @__PURE__ */ jsxs(Scrim, {
    fixed: true,
    children: [
      " ",
      children,
      " "
    ]
  }) : /* @__PURE__ */ jsxs(Fragment, {
    children: [
      children,
      " "
    ]
  });
};
const withBaseName = makePrefixer("saltDrawer");
const Drawer = forwardRef(function Drawer2(props, ref) {
  var _a, _b;
  const {
    children,
    className,
    position = "left",
    open = false,
    onOpenChange,
    variant = "primary",
    disableDismiss,
    disableScrim,
    ...rest
  } = props;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-drawer",
    css: css_248z,
    window: targetWindow
  });
  const [showComponent, setShowComponent] = useState(false);
  const { Component: FloatingComponent } = useFloatingComponent();
  const { context, floating, elements } = useFloatingUI({
    open: showComponent,
    onOpenChange
  });
  const { getFloatingProps } = useInteractions([
    useClick(context),
    useDismiss(context, { enabled: !disableDismiss })
  ]);
  const handleRef = useForkRef(floating, ref);
  useEffect(() => {
    if (open && !showComponent) {
      setShowComponent(true);
    }
    if (!open && showComponent) {
      const animate = setTimeout(() => {
        setShowComponent(false);
      }, 300);
      return () => clearTimeout(animate);
    }
  }, [open, showComponent, setShowComponent]);
  return /* @__PURE__ */ jsx(ConditionalScrimWrapper, {
    condition: showComponent && !disableScrim,
    children: /* @__PURE__ */ jsx(FloatingComponent, {
      open: showComponent,
      ref: handleRef,
      role: "dialog",
      width: (_a = elements.floating) == null ? void 0 : _a.offsetWidth,
      height: (_b = elements.floating) == null ? void 0 : _b.offsetHeight,
      "aria-modal": "true",
      focusManagerProps: {
        context
      },
      className: clsx(
        withBaseName(),
        withBaseName(position),
        {
          [withBaseName("enterAnimation")]: open,
          [withBaseName("exitAnimation")]: !open,
          [withBaseName(variant)]: variant
        },
        className
      ),
      ...getFloatingProps(),
      ...rest,
      children
    })
  });
});

export { Drawer };
//# sourceMappingURL=Drawer.js.map
