import { jsxs, jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import '../form-field-context/FormFieldContext.js';
import { useFormFieldProps } from '../form-field-context/useFormFieldProps.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import { useControlled } from '../utils/useControlled.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import { useDensity } from '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import '../accordion/AccordionGroup.js';
import '../accordion/AccordionPanel.js';
import '../accordion/Accordion.js';
import '../accordion/AccordionHeader.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../button/Button.js';
import '../card/Card.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { SuccessSmallSolidIcon, SuccessSolidIcon } from '@salt-ds/icons';
import '../combo-box/ComboBox.js';
import '../dialog/Dialog.js';
import '../dialog/DialogHeader.js';
import '../dialog/DialogActions.js';
import '../dialog/DialogContent.js';
import '../dialog/DialogContext.js';
import '../dialog/DialogCloseButton.js';
import '../drawer/Drawer.js';
import '../drawer/DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import '../file-drop-zone/FileDropZone.js';
import '../file-drop-zone/FileDropZoneIcon.js';
import '../file-drop-zone/FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../status-indicator/StatusIndicator.js';
import '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../input/Input.js';
import '../interactable-card/InteractableCard.js';
import '../interactable-card/InteractableCardGroup.js';
import '../interactable-card/InteractableCardGroupContext.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-control/ListControlContext.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import '../pagination/Pagination.js';
import '../pagination/Paginator.js';
import '../pagination/CompactInput.js';
import '../pagination/CompactPaginator.js';
import '../pagination/GoToInput.js';
import '../panel/Panel.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import '../scrim/Scrim.js';
import '../segmented-button-group/SegmentedButtonGroup.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import '@floating-ui/react';
import css_248z from './Switch.css.js';

const withBaseName = makePrefixer("saltSwitch");
function CheckedIcon(props) {
  const density = useDensity();
  return density === "high" ? /* @__PURE__ */ jsx(SuccessSmallSolidIcon, {
    ...props
  }) : /* @__PURE__ */ jsx(SuccessSolidIcon, {
    ...props
  });
}
const Switch = forwardRef(function Switch2(props, ref) {
  const {
    checked: checkedProp,
    className,
    defaultChecked,
    disabled: disabledProp,
    inputProps = {},
    label,
    name,
    onBlur,
    onChange,
    onFocus,
    value,
    ...rest
  } = props;
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-switch",
    css: css_248z,
    window: targetWindow
  });
  const {
    "aria-describedby": inputDescribedBy,
    "aria-labelledby": inputLabelledBy,
    className: inputClassName,
    onChange: inputOnChange,
    ...restInputProps
  } = inputProps;
  const [checked, setChecked] = useControlled({
    controlled: checkedProp,
    default: Boolean(defaultChecked),
    name: "Switch",
    state: "checked"
  });
  const { a11yProps: formFieldA11yProps, disabled: formFieldDisabled } = useFormFieldProps();
  const disabled = formFieldDisabled || disabledProp;
  const handleChange = (event) => {
    if (event.nativeEvent.defaultPrevented) {
      return;
    }
    const value2 = event.target.checked;
    setChecked(value2);
    onChange == null ? void 0 : onChange(event);
    inputOnChange == null ? void 0 : inputOnChange(event);
  };
  return /* @__PURE__ */ jsxs("label", {
    className: clsx(
      withBaseName(),
      {
        [withBaseName("disabled")]: disabled,
        [withBaseName("checked")]: checked
      },
      className
    ),
    ref,
    ...rest,
    children: [
      /* @__PURE__ */ jsx("input", {
        "aria-describedby": clsx(
          formFieldA11yProps == null ? void 0 : formFieldA11yProps["aria-describedby"],
          inputDescribedBy
        ),
        "aria-labelledby": clsx(
          formFieldA11yProps == null ? void 0 : formFieldA11yProps["aria-labelledby"],
          inputLabelledBy
        ),
        name,
        value,
        checked,
        className: clsx(withBaseName("input"), inputClassName),
        defaultChecked,
        disabled,
        onBlur,
        onChange: handleChange,
        onFocus,
        type: "checkbox",
        role: "switch",
        ...restInputProps
      }),
      /* @__PURE__ */ jsx("span", {
        className: withBaseName("track"),
        children: /* @__PURE__ */ jsx("span", {
          className: withBaseName("thumb"),
          children: checked && /* @__PURE__ */ jsx(CheckedIcon, {
            "aria-hidden": true,
            className: withBaseName("icon")
          })
        })
      }),
      /* @__PURE__ */ jsx("span", {
        className: withBaseName("label"),
        children: label
      })
    ]
  });
});

export { Switch };
//# sourceMappingURL=Switch.js.map
