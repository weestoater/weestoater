import { jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { forwardRef, useState, useEffect } from 'react';
import { Input } from '../input/Input.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import '../accordion/AccordionGroup.js';
import '../accordion/AccordionPanel.js';
import '../accordion/Accordion.js';
import '../accordion/AccordionHeader.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../button/Button.js';
import '../card/Card.js';
import '../card/InteractableCard.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import '@salt-ds/icons';
import '../combo-box/ComboBox.js';
import '../dialog/Dialog.js';
import '../dialog/DialogHeader.js';
import '../dialog/DialogActions.js';
import '../dialog/DialogContent.js';
import '../dialog/DialogContext.js';
import '../dialog/DialogCloseButton.js';
import '../drawer/Drawer.js';
import '../drawer/DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import '../file-drop-zone/FileDropZone.js';
import '../file-drop-zone/FileDropZoneIcon.js';
import '../file-drop-zone/FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../status-indicator/StatusIndicator.js';
import '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import '../form-field-context/FormFieldContext.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-control/ListControlContext.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import './Pagination.js';
import './Paginator.js';
import './CompactPaginator.js';
import './GoToInput.js';
import '../panel/Panel.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import '../scrim/Scrim.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../switch/Switch.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import '@floating-ui/react';
import { usePaginationContext } from './usePaginationContext.js';
import css_248z from './CompactInput.css.js';

const withBaseName = makePrefixer("saltCompactInput");
const CompactInput = forwardRef(function CompactInput2(props, ref) {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-compact-input",
    css: css_248z,
    window: targetWindow
  });
  const { count, page, onPageChange } = usePaginationContext();
  const [inputValue, setInputValue] = useState(`${page}`);
  useEffect(() => {
    setInputValue(`${page}`);
  }, [page]);
  const handleChange = (event) => {
    setInputValue(event.target.value);
  };
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      const pageValue = Number(inputValue);
      if (!isNaN(pageValue) && pageValue <= count && pageValue > 0) {
        onPageChange(event, pageValue);
      } else {
        setInputValue(`${page}`);
      }
    }
  };
  const handleBlur = () => {
    setInputValue(`${page}`);
  };
  return /* @__PURE__ */ jsx(Input, {
    className: clsx(withBaseName(), {
      [withBaseName("defaultSize")]: count < 100
    }),
    inputProps: {
      "aria-label": `Go to page, ${count} total`,
      style: { width: `${`${count}`.length}ch` }
    },
    onBlur: handleBlur,
    onChange: handleChange,
    onKeyDown: handleKeyDown,
    value: inputValue,
    textAlign: "center",
    ref,
    ...props
  });
});

export { CompactInput };
//# sourceMappingURL=CompactInput.js.map
