import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from 'clsx';
import { Button } from '../button/Button.js';
import { Text } from '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import '../accordion/AccordionGroup.js';
import '../accordion/AccordionPanel.js';
import '../accordion/Accordion.js';
import '../accordion/AccordionHeader.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../card/Card.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { ChevronLeftIcon, ChevronRightIcon } from '@salt-ds/icons';
import '../combo-box/ComboBox.js';
import '../dialog/Dialog.js';
import '../dialog/DialogHeader.js';
import '../dialog/DialogActions.js';
import '../dialog/DialogContent.js';
import '../dialog/DialogContext.js';
import '../dialog/DialogCloseButton.js';
import '../drawer/Drawer.js';
import '../drawer/DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import '../file-drop-zone/FileDropZone.js';
import '../file-drop-zone/FileDropZoneIcon.js';
import '../file-drop-zone/FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../status-indicator/StatusIndicator.js';
import '../form-field-context/FormFieldContext.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../input/Input.js';
import '../interactable-card/InteractableCard.js';
import '../interactable-card/InteractableCardGroup.js';
import '../interactable-card/InteractableCardGroupContext.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-control/ListControlContext.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import './Pagination.js';
import './Paginator.js';
import './CompactInput.js';
import './GoToInput.js';
import '../panel/Panel.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import '../scrim/Scrim.js';
import '../segmented-button-group/SegmentedButtonGroup.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../switch/Switch.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import '@floating-ui/react';
import { PageButton } from './PageButton.js';
import { usePaginationContext } from './usePaginationContext.js';
import css_248z from './CompactPaginator.css.js';

const withBaseName = makePrefixer("saltCompactPaginator");
const CompactPaginator = forwardRef(function CompactPaginator2({ children, className, ...restProps }, ref) {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-compact-paginator",
    css: css_248z,
    window: targetWindow
  });
  const { count, page, onPageChange } = usePaginationContext();
  const onPreviousPage = (event) => {
    onPageChange(event, Math.max(1, page - 1));
  };
  const onNextPage = (event) => {
    onPageChange(event, Math.min(page + 1, count));
  };
  const isOnFirstPage = page === 1;
  const isOnLastPage = page === count;
  return /* @__PURE__ */ jsxs("div", {
    className: clsx(withBaseName(), className),
    ...restProps,
    ref,
    children: [
      /* @__PURE__ */ jsx(Button, {
        variant: "secondary",
        "aria-label": "Previous Page",
        onClick: onPreviousPage,
        disabled: isOnFirstPage,
        className: withBaseName("arrowButton"),
        children: /* @__PURE__ */ jsx(ChevronLeftIcon, {
          "aria-hidden": true
        })
      }),
      children ? children : /* @__PURE__ */ jsx(PageButton, {
        page,
        disabled: true
      }),
      /* @__PURE__ */ jsx(Text, {
        as: "span",
        variant: "secondary",
        children: "of"
      }),
      /* @__PURE__ */ jsx(PageButton, {
        page: count,
        disabled: isOnLastPage
      }),
      /* @__PURE__ */ jsx(Button, {
        variant: "secondary",
        "aria-label": "Next Page",
        onClick: onNextPage,
        disabled: isOnLastPage,
        className: withBaseName("arrowButton"),
        children: /* @__PURE__ */ jsx(ChevronRightIcon, {
          "aria-hidden": true
        })
      })
    ]
  });
});

export { CompactPaginator };
//# sourceMappingURL=CompactPaginator.js.map
