import * as React from 'react';

const maybeReactUseId = React["useId".toString()];
let globalId = BigInt(0);
function useIdLegacy(idOverride) {
  const [defaultId, setDefaultId] = React.useState(idOverride);
  const id = idOverride || defaultId;
  React.useEffect(() => {
    if (defaultId == null) {
      setDefaultId(`salt-${++globalId}`);
    }
  }, [defaultId]);
  return id;
}
function useId(idOverride) {
  if (maybeReactUseId !== void 0) {
    const reactId = maybeReactUseId();
    return idOverride != null ? idOverride : reactId;
  }
  return useIdLegacy(idOverride);
}
function useIdMemo(idOverride) {
  const id = React.useMemo(() => {
    return idOverride != null ? idOverride : `salt-${++globalId}`;
  }, [idOverride]);
  return id;
}

export { useId, useIdMemo };
//# sourceMappingURL=useId.js.map
