import { clsx } from 'clsx';
import { createChainedFunction } from './createChainedFunction.js';

function mergeProps(propsA, propsB) {
  const props = { ...propsA };
  Object.keys(propsB).forEach((key) => {
    const a = props[key];
    const b = propsB[key];
    if (typeof a === "function" && typeof b === "function" && key.indexOf("on") === 0) {
      props[key] = createChainedFunction(a, b);
    } else if (typeof a === "string" && typeof b === "string" && key === "className") {
      props[key] = clsx(a, b);
    } else {
      props[key] = b !== void 0 ? b : a;
    }
  });
  return props;
}

export { mergeProps };
//# sourceMappingURL=mergeProps.js.map
