import { jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { forwardRef, useState, useRef } from 'react';
import { containsFiles, extractFiles } from './internal/utils.js';
import { useWindow } from '@salt-ds/window';
import { useComponentCssInjection } from '@salt-ds/styles';
import css_248z from './FileDropZone.css.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import { useForkRef } from '../utils/useForkRef.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import '../accordion/AccordionGroup.js';
import '../accordion/AccordionPanel.js';
import '../accordion/Accordion.js';
import '../accordion/AccordionHeader.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../button/Button.js';
import '../card/Card.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import '@salt-ds/icons';
import '../combo-box/ComboBox.js';
import '../dialog/Dialog.js';
import '../dialog/DialogHeader.js';
import '../dialog/DialogActions.js';
import '../dialog/DialogContent.js';
import '../dialog/DialogContext.js';
import '../dialog/DialogCloseButton.js';
import '../drawer/Drawer.js';
import '../drawer/DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import './FileDropZoneIcon.js';
import './FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../status-indicator/StatusIndicator.js';
import '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import '../form-field-context/FormFieldContext.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../input/Input.js';
import '../interactable-card/InteractableCard.js';
import '../interactable-card/InteractableCardGroup.js';
import '../interactable-card/InteractableCardGroupContext.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-control/ListControlContext.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import '../pagination/Pagination.js';
import '../pagination/Paginator.js';
import '../pagination/CompactInput.js';
import '../pagination/CompactPaginator.js';
import '../pagination/GoToInput.js';
import '../panel/Panel.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import '../scrim/Scrim.js';
import '../segmented-button-group/SegmentedButtonGroup.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../switch/Switch.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import '@floating-ui/react';

const withBaseName = makePrefixer("saltFileDropZone");
const FileDropZone = forwardRef(
  function FileDropZone2({
    status,
    className,
    children,
    disabled,
    onDragOver,
    onDragLeave,
    onDrop,
    ...restProps
  }, ref) {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-file-drop-zone",
      css: css_248z,
      window: targetWindow
    });
    const [isActive, setActive] = useState(false);
    const regionRef = useRef(null);
    const handleRef = useForkRef(ref, regionRef);
    const handleDragOver = (event) => {
      event.preventDefault();
      event.stopPropagation();
      if (disabled) {
        if (event.dataTransfer) {
          event.dataTransfer.dropEffect = "none";
        }
        return;
      }
      if (event.dataTransfer) {
        event.dataTransfer.dropEffect = "copy";
      }
      if (!isActive && containsFiles(event)) {
        setActive(true);
      }
      onDragOver == null ? void 0 : onDragOver(event);
    };
    const handleDragLeave = (event) => {
      if (disabled) {
        return;
      }
      const region = regionRef == null ? void 0 : regionRef.current;
      const eventTarget = event.relatedTarget;
      if (eventTarget !== region && !(region == null ? void 0 : region.contains(eventTarget))) {
        setActive(false);
      }
      onDragLeave == null ? void 0 : onDragLeave(event);
    };
    const handleDrop = (event) => {
      if (disabled) {
        return;
      }
      event.preventDefault();
      const files = extractFiles(event);
      setActive(false);
      onDrop == null ? void 0 : onDrop(event, files);
    };
    return /* @__PURE__ */ jsx("div", {
      className: clsx(
        withBaseName(),
        {
          [withBaseName(status)]: status,
          [withBaseName("active")]: isActive,
          [withBaseName("disabled")]: disabled
        },
        className
      ),
      "aria-disabled": disabled,
      onDragLeave: handleDragLeave,
      onDragOver: handleDragOver,
      onDrop: handleDrop,
      ref: handleRef,
      ...restProps,
      children
    });
  }
);

export { FileDropZone };
//# sourceMappingURL=FileDropZone.js.map
