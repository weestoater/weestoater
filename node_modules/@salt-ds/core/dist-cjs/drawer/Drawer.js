'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var react = require('@floating-ui/react');
var makePrefixer = require('../utils/makePrefixer.js');
var useFloatingUI = require('../utils/useFloatingUI/useFloatingUI.js');
var useForkRef = require('../utils/useForkRef.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../button/Button.js');
require('../card/Card.js');
require('../card/InteractableCard.js');
require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
require('@salt-ds/icons');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('./DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../status-indicator/StatusIndicator.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../form-field-context/FormFieldContext.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../input/Input.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
require('../list-control/ListControlContext.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('../option/Option.js');
require('../option/OptionGroup.js');
require('../pagination/Pagination.js');
require('../pagination/Paginator.js');
require('../pagination/CompactInput.js');
require('../pagination/CompactPaginator.js');
require('../pagination/GoToInput.js');
require('../panel/Panel.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
var Scrim = require('../scrim/Scrim.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
require('../tooltip/Tooltip.js');
var Drawer$1 = require('./Drawer.css.js');

const ConditionalScrimWrapper = ({
  condition,
  children
}) => {
  return condition ? /* @__PURE__ */ jsxRuntime.jsxs(Scrim.Scrim, {
    fixed: true,
    children: [
      " ",
      children,
      " "
    ]
  }) : /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      children,
      " "
    ]
  });
};
const withBaseName = makePrefixer.makePrefixer("saltDrawer");
const Drawer = React.forwardRef(function Drawer2(props, ref) {
  var _a, _b;
  const {
    children,
    className,
    position = "left",
    open = false,
    onOpenChange,
    variant = "primary",
    disableDismiss,
    disableScrim,
    ...rest
  } = props;
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-drawer",
    css: Drawer$1,
    window: targetWindow
  });
  const [showComponent, setShowComponent] = React.useState(false);
  const { Component: FloatingComponent } = useFloatingUI.useFloatingComponent();
  const { context, floating, elements } = useFloatingUI.useFloatingUI({
    open: showComponent,
    onOpenChange
  });
  const { getFloatingProps } = react.useInteractions([
    react.useClick(context),
    react.useDismiss(context, { enabled: !disableDismiss })
  ]);
  const handleRef = useForkRef.useForkRef(floating, ref);
  React.useEffect(() => {
    if (open && !showComponent) {
      setShowComponent(true);
    }
    if (!open && showComponent) {
      const animate = setTimeout(() => {
        setShowComponent(false);
      }, 300);
      return () => clearTimeout(animate);
    }
  }, [open, showComponent, setShowComponent]);
  return /* @__PURE__ */ jsxRuntime.jsx(ConditionalScrimWrapper, {
    condition: showComponent && !disableScrim,
    children: /* @__PURE__ */ jsxRuntime.jsx(FloatingComponent, {
      open: showComponent,
      ref: handleRef,
      role: "dialog",
      width: (_a = elements.floating) == null ? void 0 : _a.offsetWidth,
      height: (_b = elements.floating) == null ? void 0 : _b.offsetHeight,
      "aria-modal": "true",
      focusManagerProps: {
        context
      },
      className: clsx.clsx(
        withBaseName(),
        withBaseName(position),
        {
          [withBaseName("enterAnimation")]: open,
          [withBaseName("exitAnimation")]: !open,
          [withBaseName(variant)]: variant
        },
        className
      ),
      ...getFloatingProps(),
      ...rest,
      children
    })
  });
});

exports.Drawer = Drawer;
//# sourceMappingURL=Drawer.js.map
