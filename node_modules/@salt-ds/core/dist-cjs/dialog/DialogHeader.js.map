{"version":3,"file":"DialogHeader.js","sources":["../src/dialog/DialogHeader.tsx"],"sourcesContent":["import { ReactNode, ComponentPropsWithoutRef, forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport { ValidationStatus, StatusIndicator } from \"../status-indicator\";\nimport { H2, Text } from \"../text\";\nimport { makePrefixer } from \"../utils\";\nimport { useDialogContext } from \"./DialogContext\";\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport dialogHeaderCss from \"./DialogHeader.css\";\n\nconst withBaseName = makePrefixer(\"saltDialogHeader\");\n\nexport interface DialogHeaderProps extends ComponentPropsWithoutRef<\"div\"> {\n  /**\n   * The status of the Dialog\n   */\n  status?: ValidationStatus | undefined;\n  /**\n   * Displays the accent bar in the Dialog Title */\n  disableAccent?: boolean;\n  /**\n   * Displays the header at the top of the Dialog\n   */\n  header: ReactNode;\n  /**\n   * Displays the preheader just above the header\n   **/\n  preheader?: ReactNode;\n}\n\nexport const DialogHeader = forwardRef<HTMLDivElement, DialogHeaderProps>(\n  function DialogHeader(props, ref) {\n    const {\n      className,\n      header,\n      preheader,\n      disableAccent,\n      status: statusProp,\n      ...rest\n    } = props;\n    const { status: statusContext, id } = useDialogContext();\n\n    const targetWindow = useWindow();\n    useComponentCssInjection({\n      testId: \"salt-dialog-header\",\n      css: dialogHeaderCss,\n      window: targetWindow,\n    });\n\n    const status = statusProp ?? statusContext;\n\n    return (\n      <div\n        id={id}\n        className={clsx(\n          withBaseName(),\n          {\n            [withBaseName(\"withAccent\")]: !disableAccent && !status,\n            [withBaseName(status ?? \"\")]: !!status,\n          },\n          className\n        )}\n        ref={ref}\n        {...rest}\n      >\n        {status && <StatusIndicator status={status} />}\n        <H2 className={withBaseName(\"header\")}>\n          {preheader && (\n            <Text variant=\"secondary\" className={withBaseName(\"preheader\")}>\n              {preheader}\n            </Text>\n          )}\n          <div>{header}</div>\n        </H2>\n      </div>\n    );\n  }\n);\n"],"names":["makePrefixer","forwardRef","DialogHeader","useDialogContext","useWindow","useComponentCssInjection","dialogHeaderCss","jsxs","clsx","jsx","StatusIndicator","H2","Text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,MAAM,YAAA,GAAeA,0BAAa,kBAAkB,CAAA,CAAA;AAoB7C,MAAM,YAAe,GAAAC,gBAAA;AAAA,EAC1B,SAASC,aAAa,CAAA,KAAA,EAAO,GAAK,EAAA;AAChC,IAAM,MAAA;AAAA,MACJ,SAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAA;AAAA,MACA,aAAA;AAAA,MACA,MAAQ,EAAA,UAAA;AAAA,MACL,GAAA,IAAA;AAAA,KACD,GAAA,KAAA,CAAA;AACJ,IAAA,MAAM,EAAE,MAAA,EAAQ,aAAe,EAAA,EAAA,KAAOC,8BAAiB,EAAA,CAAA;AAEvD,IAAA,MAAM,eAAeC,gBAAU,EAAA,CAAA;AAC/B,IAAyBC,+BAAA,CAAA;AAAA,MACvB,MAAQ,EAAA,oBAAA;AAAA,MACR,GAAK,EAAAC,cAAA;AAAA,MACL,MAAQ,EAAA,YAAA;AAAA,KACT,CAAA,CAAA;AAED,IAAA,MAAM,SAAS,UAAc,IAAA,IAAA,GAAA,UAAA,GAAA,aAAA,CAAA;AAE7B,IAAA,uBACGC,eAAA,CAAA,KAAA,EAAA;AAAA,MACC,EAAA;AAAA,MACA,SAAW,EAAAC,wBAAA;AAAA,QACT,YAAa,EAAA;AAAA,QACb;AAAA,UACE,CAAC,YAAa,CAAA,YAAY,CAAI,GAAA,CAAC,iBAAiB,CAAC,MAAA;AAAA,UACjD,CAAC,YAAa,CAAA,MAAA,IAAA,IAAA,GAAA,MAAA,GAAU,EAAE,CAAA,GAAI,CAAC,CAAC,MAAA;AAAA,SAClC;AAAA,QACA,SAAA;AAAA,OACF;AAAA,MACA,GAAA;AAAA,MACC,GAAG,IAAA;AAAA,MAEH,QAAA,EAAA;AAAA,QAAA,MAAA,oBAAWC,cAAA,CAAAC,+BAAA,EAAA;AAAA,UAAgB,MAAA;AAAA,SAAgB,CAAA;AAAA,wBAC3CH,eAAA,CAAAI,WAAA,EAAA;AAAA,UAAG,SAAA,EAAW,aAAa,QAAQ,CAAA;AAAA,UACjC,QAAA,EAAA;AAAA,YAAA,SAAA,oBACEF,cAAA,CAAAG,SAAA,EAAA;AAAA,cAAK,OAAQ,EAAA,WAAA;AAAA,cAAY,SAAA,EAAW,aAAa,WAAW,CAAA;AAAA,cAC1D,QAAA,EAAA,SAAA;AAAA,aACH,CAAA;AAAA,4BAEDH,cAAA,CAAA,KAAA,EAAA;AAAA,cAAK,QAAA,EAAA,MAAA;AAAA,aAAO,CAAA;AAAA,WAAA;AAAA,SACf,CAAA;AAAA,OAAA;AAAA,KACF,CAAA,CAAA;AAAA,GAEJ;AACF;;;;"}