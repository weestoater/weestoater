'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

const useButton = ({
  disabled,
  focusableWhenDisabled,
  onKeyUp,
  onKeyDown,
  onClick,
  onBlur
}) => {
  const [keyIsDown, setkeyIsDown] = React.useState("");
  const [active, setActive] = React.useState(false);
  const enter = "Enter";
  const space = " ";
  React.useEffect(() => {
    const t = setTimeout(() => {
      if (keyIsDown !== enter && keyIsDown !== space) {
        setActive(false);
      }
    }, 0);
    return () => {
      clearTimeout(t);
    };
  }, [active, keyIsDown]);
  const handleKeyUp = (event) => {
    setkeyIsDown("");
    setActive(false);
    onKeyUp == null ? void 0 : onKeyUp(event);
  };
  const handleClick = (event) => {
    setActive(true);
    onClick == null ? void 0 : onClick(event);
  };
  const handleBlur = (event) => {
    setActive(false);
    onBlur == null ? void 0 : onBlur(event);
  };
  const handleKeyDown = (event) => {
    if (event.key === enter || event.key === space) {
      setkeyIsDown(event.key);
      setActive(true);
    }
    onKeyDown == null ? void 0 : onKeyDown(event);
  };
  const buttonProps = {
    "aria-disabled": disabled && focusableWhenDisabled ? true : void 0,
    disabled: disabled && !focusableWhenDisabled,
    tabIndex: disabled && !focusableWhenDisabled ? -1 : 0,
    onBlur: handleBlur,
    onClick: !disabled ? handleClick : void 0,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp
  };
  return {
    active,
    buttonProps
  };
};

exports.useButton = useButton;
//# sourceMappingURL=useButton.js.map
