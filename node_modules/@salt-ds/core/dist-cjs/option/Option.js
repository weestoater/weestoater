'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var window = require('@salt-ds/window');
var styles = require('@salt-ds/styles');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
var useForkRef = require('../utils/useForkRef.js');
var useId = require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../button/Button.js');
require('../card/Card.js');
require('../card/InteractableCard.js');
var Checkbox = require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
require('@salt-ds/icons');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('../drawer/Drawer.js');
require('../drawer/DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../status-indicator/StatusIndicator.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../form-field-context/FormFieldContext.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../input/Input.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
var ListControlContext = require('../list-control/ListControlContext.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('./OptionGroup.js');
require('../pagination/Pagination.js');
require('../pagination/Paginator.js');
require('../pagination/CompactInput.js');
require('../pagination/CompactPaginator.js');
require('../pagination/GoToInput.js');
require('../panel/Panel.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
require('../scrim/Scrim.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
require('../tooltip/Tooltip.js');
require('@floating-ui/react');
var Option$1 = require('./Option.css.js');

const withBaseName = makePrefixer.makePrefixer("saltOption");
const Option = React.forwardRef(function Option2(props, ref) {
  const {
    className,
    children,
    disabled,
    onClick,
    id: idProp,
    value,
    ...rest
  } = props;
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-option",
    css: Option$1,
    window: targetWindow
  });
  const optionRef = React.useRef(null);
  const id = useId.useId(idProp);
  const {
    setActive,
    activeState,
    multiselect,
    select,
    register,
    selectedState,
    focusVisibleState,
    valueToString
  } = ListControlContext.useListControlContext();
  const selected = selectedState.includes(value);
  const active = (activeState == null ? void 0 : activeState.id) === id;
  const optionValue = React.useMemo(
    () => ({
      id: String(id),
      disabled: Boolean(disabled),
      value
    }),
    [id, disabled, value]
  );
  const handleClick = (event) => {
    if (disabled || id == void 0) {
      return;
    }
    setActive(optionValue);
    select(event, optionValue);
    onClick == null ? void 0 : onClick(event);
  };
  const handleMouseOver = () => {
    setActive(optionValue);
  };
  React.useEffect(() => {
    if (id && optionRef.current) {
      return register(optionValue, optionRef.current);
    }
  }, [optionValue, id, register]);
  const handleRef = useForkRef.useForkRef(optionRef, ref);
  return /* @__PURE__ */ jsxRuntime.jsxs("div", {
    "aria-disabled": disabled ? "true" : void 0,
    "aria-selected": selected,
    className: clsx.clsx(
      withBaseName(),
      {
        [withBaseName("active")]: active,
        [withBaseName("focusVisible")]: focusVisibleState && active
      },
      className
    ),
    ref: handleRef,
    role: "option",
    id,
    onClick: handleClick,
    onMouseOver: handleMouseOver,
    ...rest,
    children: [
      multiselect && /* @__PURE__ */ jsxRuntime.jsx(Checkbox.Checkbox, {
        checked: selected,
        "aria-hidden": "true",
        inputProps: { tabIndex: -1 }
      }),
      children != null ? children : valueToString(value)
    ]
  });
});

exports.Option = Option;
//# sourceMappingURL=Option.js.map
