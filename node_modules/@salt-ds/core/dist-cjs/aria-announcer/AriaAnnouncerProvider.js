'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var AriaAnnouncerContext = require('./AriaAnnouncerContext.js');

const ARIA_ANNOUNCE_DELAY = 150;
function AriaAnnouncerProvider({
  children,
  style
}) {
  const [currentAnnouncement, setCurrentAnnouncement] = React.useState("");
  const announcementsRef = React.useRef([]);
  const isAnnouncingRef = React.useRef(false);
  const mountedRef = React.useRef(true);
  const announceAll = React.useCallback(() => {
    isAnnouncingRef.current = true;
    if (mountedRef.current) {
      setCurrentAnnouncement("");
      requestAnimationFrame(() => {
        if (mountedRef.current && announcementsRef.current.length) {
          const announcement = announcementsRef.current.shift();
          setCurrentAnnouncement(announcement);
          setTimeout(() => {
            announceAll();
          }, ARIA_ANNOUNCE_DELAY);
        } else {
          isAnnouncingRef.current = false;
        }
      });
    }
  }, []);
  const announce = React.useCallback(
    (announcement) => {
      announcementsRef.current.push(announcement);
      if (!isAnnouncingRef.current) {
        announceAll();
      }
    },
    [announceAll]
  );
  React.useEffect(() => {
    mountedRef.current = true;
    return () => {
      mountedRef.current = false;
    };
  }, []);
  const value = React.useMemo(() => ({ announce }), [announce]);
  return /* @__PURE__ */ jsxRuntime.jsxs(AriaAnnouncerContext.AriaAnnouncerContext.Provider, {
    value,
    children: [
      children,
      /* @__PURE__ */ jsxRuntime.jsx("div", {
        "aria-atomic": "true",
        "aria-live": "assertive",
        style: {
          position: "absolute",
          height: 1,
          width: 1,
          padding: 0,
          margin: -1,
          overflow: "hidden",
          clip: "rect(0, 0, 0, 0)",
          whiteSpace: "nowrap",
          borderWidth: 0,
          ...style
        },
        children: currentAnnouncement
      })
    ]
  });
}

exports.ARIA_ANNOUNCE_DELAY = ARIA_ANNOUNCE_DELAY;
exports.AriaAnnouncerProvider = AriaAnnouncerProvider;
//# sourceMappingURL=AriaAnnouncerProvider.js.map
