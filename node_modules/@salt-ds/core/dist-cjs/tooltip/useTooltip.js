'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('@floating-ui/react');
var React = require('react');
var useControlled = require('../utils/useControlled.js');
var useFloatingUI = require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('clsx');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('react/jsx-runtime');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../button/Button.js');
require('../card/Card.js');
require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
require('@salt-ds/styles');
require('@salt-ds/window');
require('@salt-ds/icons');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('../drawer/Drawer.js');
require('../drawer/DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../status-indicator/StatusIndicator.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../form-field-context/FormFieldContext.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../input/Input.js');
require('../interactable-card/InteractableCard.js');
require('../interactable-card/InteractableCardGroup.js');
require('../interactable-card/InteractableCardGroupContext.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
require('../list-control/ListControlContext.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('../option/Option.js');
require('../option/OptionGroup.js');
require('../pagination/Pagination.js');
require('../pagination/Paginator.js');
require('../pagination/CompactInput.js');
require('../pagination/CompactPaginator.js');
require('../pagination/GoToInput.js');
require('../panel/Panel.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
require('../scrim/Scrim.js');
require('../segmented-button-group/SegmentedButtonGroup.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
require('./Tooltip.js');
var useAriaAnnounce = require('./useAriaAnnounce.js');

function useTooltip(props) {
  const {
    enterDelay,
    leaveDelay,
    open: openProp,
    onOpenChange,
    placement: placementProp,
    disableHoverListener,
    disableFocusListener
  } = props != null ? props : {};
  const arrowRef = React.useRef(null);
  const [open, setOpen] = useControlled.useControlled({
    controlled: openProp,
    default: false,
    name: "Tooltip",
    state: "open"
  });
  const handleOpenChange = (open2) => {
    setOpen(open2);
    onOpenChange == null ? void 0 : onOpenChange(open2);
  };
  const { floating, reference, x, y, strategy, placement, context, elements } = useFloatingUI.useFloatingUI({
    open,
    onOpenChange: handleOpenChange,
    placement: placementProp,
    middleware: [
      react.offset(8),
      react.shift({ limiter: react.limitShift() }),
      react.flip({
        fallbackAxisSideDirection: "end",
        fallbackStrategy: "initialPlacement"
      }),
      react.arrow({ element: arrowRef })
    ]
  });
  const { getReferenceProps, getFloatingProps } = react.useInteractions([
    react.useHover(context, {
      delay: {
        open: enterDelay,
        close: leaveDelay
      },
      enabled: !disableHoverListener,
      handleClose: react.safePolygon()
    }),
    react.useFocus(context, { enabled: !disableFocusListener }),
    react.useRole(context, { role: "tooltip" }),
    react.useDismiss(context),
    useAriaAnnounce.useAriaAnnounce(context, {
      delay: {
        open: enterDelay,
        close: leaveDelay
      }
    })
  ]);
  const arrowProps = {
    ref: arrowRef,
    context
  };
  const getTooltipProps = () => {
    const { tabIndex, ...tooltipProps } = getFloatingProps({
      "data-placement": placement,
      ref: floating
    });
    return tooltipProps;
  };
  const getTriggerProps = () => getReferenceProps({
    ref: reference
  });
  const getTooltipPosition = () => {
    var _a, _b;
    return {
      top: y != null ? y : 0,
      left: x != null ? x : 0,
      position: strategy,
      width: (_a = elements.floating) == null ? void 0 : _a.offsetWidth,
      height: (_b = elements.floating) == null ? void 0 : _b.offsetHeight
    };
  };
  return {
    arrowProps,
    open,
    floating,
    reference,
    getTooltipProps,
    getTriggerProps,
    getTooltipPosition
  };
}

exports.useTooltip = useTooltip;
//# sourceMappingURL=useTooltip.js.map
