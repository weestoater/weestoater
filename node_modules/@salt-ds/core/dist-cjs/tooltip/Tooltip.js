'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var React = require('react');
require('../status-indicator/StatusIndicator.js');
var ValidationStatus = require('../status-indicator/ValidationStatus.js');
var makePrefixer = require('../utils/makePrefixer.js');
var useFloatingUI = require('../utils/useFloatingUI/useFloatingUI.js');
var useForkRef = require('../utils/useForkRef.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var mergeProps = require('../utils/mergeProps.js');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../button/Button.js');
require('../card/Card.js');
require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
require('@salt-ds/styles');
require('@salt-ds/window');
require('@salt-ds/icons');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('../drawer/Drawer.js');
require('../drawer/DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../form-field-context/FormFieldContext.js');
var useFormFieldProps = require('../form-field-context/useFormFieldProps.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../input/Input.js');
require('../interactable-card/InteractableCard.js');
require('../interactable-card/InteractableCardGroup.js');
require('../interactable-card/InteractableCardGroupContext.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
require('../list-control/ListControlContext.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('../option/Option.js');
require('../option/OptionGroup.js');
require('../pagination/Pagination.js');
require('../pagination/Paginator.js');
require('../pagination/CompactInput.js');
require('../pagination/CompactPaginator.js');
require('../pagination/GoToInput.js');
require('../panel/Panel.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
require('../scrim/Scrim.js');
require('../segmented-button-group/SegmentedButtonGroup.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
var useTooltip = require('./useTooltip.js');
var TooltipBase = require('./TooltipBase.js');

const withBaseName = makePrefixer.makePrefixer("saltTooltip");
const Tooltip = React.forwardRef(
  function Tooltip2(props, ref) {
    const {
      children,
      className,
      disabled: disabledProp = false,
      hideArrow = false,
      hideIcon = false,
      open: openProp,
      content,
      status: statusProp = "info",
      placement = "right",
      enterDelay = 300,
      leaveDelay = 0,
      ...rest
    } = props;
    const {
      disabled: formFieldDisabled,
      validationStatus: formFieldValidationStatus
    } = useFormFieldProps.useFormFieldProps();
    const disabled = disabledProp || formFieldDisabled;
    const status = formFieldValidationStatus !== void 0 && ValidationStatus.VALIDATION_NAMED_STATUS.includes(formFieldValidationStatus) ? formFieldValidationStatus : statusProp;
    const { Component: FloatingComponent } = useFloatingUI.useFloatingComponent();
    const hookProps = {
      open: openProp,
      placement,
      enterDelay,
      leaveDelay,
      ...rest
    };
    const {
      arrowProps,
      open,
      floating,
      reference,
      getTriggerProps,
      getTooltipProps,
      getTooltipPosition
    } = useTooltip.useTooltip(hookProps);
    const triggerRef = useForkRef.useForkRef(
      React.isValidElement(children) ? children.ref : null,
      reference
    );
    const floatingRef = useForkRef.useForkRef(floating, ref);
    const hasContent = !!content;
    return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        React.isValidElement(children) && React.cloneElement(children, {
          ...mergeProps.mergeProps(getTriggerProps(), children.props),
          ref: triggerRef
        }),
        /* @__PURE__ */ jsxRuntime.jsx(FloatingComponent, {
          className: clsx.clsx(withBaseName(), withBaseName(status), className),
          open: open && !disabled && hasContent,
          ...getTooltipProps(),
          ref: floatingRef,
          ...getTooltipPosition(),
          children: /* @__PURE__ */ jsxRuntime.jsx(TooltipBase.TooltipBase, {
            hideIcon,
            status,
            content,
            hideArrow,
            arrowProps
          })
        })
      ]
    });
  }
);

exports.Tooltip = Tooltip;
//# sourceMappingURL=Tooltip.js.map
