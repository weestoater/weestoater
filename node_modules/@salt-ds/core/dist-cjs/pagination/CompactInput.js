'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var React = require('react');
var Input = require('../input/Input.js');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../button/Button.js');
require('../card/Card.js');
require('../card/InteractableCard.js');
require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
require('@salt-ds/icons');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('../drawer/Drawer.js');
require('../drawer/DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../status-indicator/StatusIndicator.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../form-field-context/FormFieldContext.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
require('../list-control/ListControlContext.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('../option/Option.js');
require('../option/OptionGroup.js');
require('./Pagination.js');
require('./Paginator.js');
require('./CompactPaginator.js');
require('./GoToInput.js');
require('../panel/Panel.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
require('../scrim/Scrim.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
require('../tooltip/Tooltip.js');
require('@floating-ui/react');
var usePaginationContext = require('./usePaginationContext.js');
var CompactInput$1 = require('./CompactInput.css.js');

const withBaseName = makePrefixer.makePrefixer("saltCompactInput");
const CompactInput = React.forwardRef(function CompactInput2(props, ref) {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-compact-input",
    css: CompactInput$1,
    window: targetWindow
  });
  const { count, page, onPageChange } = usePaginationContext.usePaginationContext();
  const [inputValue, setInputValue] = React.useState(`${page}`);
  React.useEffect(() => {
    setInputValue(`${page}`);
  }, [page]);
  const handleChange = (event) => {
    setInputValue(event.target.value);
  };
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      const pageValue = Number(inputValue);
      if (!isNaN(pageValue) && pageValue <= count && pageValue > 0) {
        onPageChange(event, pageValue);
      } else {
        setInputValue(`${page}`);
      }
    }
  };
  const handleBlur = () => {
    setInputValue(`${page}`);
  };
  return /* @__PURE__ */ jsxRuntime.jsx(Input.Input, {
    className: clsx.clsx(withBaseName(), {
      [withBaseName("defaultSize")]: count < 100
    }),
    inputProps: {
      "aria-label": `Go to page, ${count} total`,
      style: { width: `${`${count}`.length}ch` }
    },
    onBlur: handleBlur,
    onChange: handleChange,
    onKeyDown: handleKeyDown,
    value: inputValue,
    textAlign: "center",
    ref,
    ...props
  });
});

exports.CompactInput = CompactInput;
//# sourceMappingURL=CompactInput.js.map
