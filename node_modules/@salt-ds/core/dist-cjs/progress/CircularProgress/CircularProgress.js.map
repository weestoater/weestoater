{"version":3,"file":"CircularProgress.js","sources":["../src/progress/CircularProgress/CircularProgress.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef, CSSProperties, forwardRef } from \"react\";\nimport { clsx } from \"clsx\";\nimport { makePrefixer } from \"../../utils\";\nimport { Text } from \"../../text\";\nimport { useWindow } from \"@salt-ds/window\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\n\nimport circularProgressCSS from \"./CircularProgress.css\";\n\nconst withBaseName = makePrefixer(\"saltCircularProgress\");\n\nconst getRotationAngle = (bar: number, shift = 0) => {\n  return -180 + ((bar - shift) / 50) * 180;\n};\n\nexport interface CircularProgressProps extends ComponentPropsWithoutRef<\"div\"> {\n  /**\n   * The value of the buffer indicator.\n   * Value between 0 and max.\n   */\n  bufferValue?: number;\n  /**\n   * Whether to hide the text label within the progress. Defaults to `false`.\n   */\n  hideLabel?: boolean;\n  /**\n   * The value of the max progress indicator.\n   * Default value is 100.\n   */\n  max?: number;\n  /**\n   * The value of the min progress indicator.\n   * Default value is 0.\n   */\n  min?: number;\n  /**\n   * The value of the progress indicator.\n   * Value between 0 and max.\n   */\n  value?: number;\n}\n\nexport const CircularProgress = forwardRef<\n  HTMLDivElement,\n  CircularProgressProps\n>(function CircularProgress(\n  {\n    className,\n    hideLabel = false,\n    max = 100,\n    min = 0,\n    value = 0,\n    bufferValue = 0,\n    ...rest\n  },\n  ref\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-circular-progress\",\n    css: circularProgressCSS,\n    window: targetWindow,\n  });\n\n  const bufferSubOverlayRightStyle: CSSProperties = {};\n  const bufferSubOverlayLeftStyle: CSSProperties = {};\n  const barSubOverlayRightStyle: CSSProperties = {};\n  const barSubOverlayLeftStyle: CSSProperties = {};\n\n  const buffer = ((bufferValue - min) / (max - min)) * 100;\n  const progress = ((value - min) / (max - min)) * 100;\n\n  if (progress <= 50) {\n    const rotationAngle = getRotationAngle(progress);\n    barSubOverlayRightStyle.transform = `rotate(${rotationAngle}deg)`;\n    barSubOverlayLeftStyle.transform = \"rotate(-180deg)\";\n  } else {\n    const rotationAngle = getRotationAngle(progress, 50);\n    barSubOverlayRightStyle.transform = \"rotate(0deg)\";\n    barSubOverlayLeftStyle.transform = `rotate(${rotationAngle}deg)`;\n  }\n  if (buffer <= 50) {\n    const rotationAngle = getRotationAngle(buffer);\n    bufferSubOverlayRightStyle.transform = `rotate(${rotationAngle}deg)`;\n    bufferSubOverlayLeftStyle.transform = \"rotate(-180deg)\";\n  } else {\n    const rotationAngle = getRotationAngle(buffer, 50);\n    bufferSubOverlayRightStyle.transform = \"rotate(0deg)\";\n    bufferSubOverlayLeftStyle.transform = `rotate(${rotationAngle}deg)`;\n  }\n\n  return (\n    <div\n      className={clsx(withBaseName(), className)}\n      ref={ref}\n      role=\"progressbar\"\n      aria-valuemax={max}\n      aria-valuemin={min}\n      aria-valuenow={Math.round(value)}\n      {...rest}\n    >\n      <div className={withBaseName(\"track\")} />\n      <div className={withBaseName(\"bars\")}>\n        {buffer > 0 && (\n          <div className={withBaseName(\"bufferOverlayRight\")}>\n            <div\n              className={clsx(withBaseName(\"bufferSubOverlayRight\"), {\n                [withBaseName(\"bufferSubOverlay\")]: buffer <= 50,\n              })}\n              style={bufferSubOverlayRightStyle}\n            >\n              <div className={withBaseName(\"bufferBackground\")} />\n              <div className={withBaseName(\"bufferBorder\")} />\n            </div>\n          </div>\n        )}\n        <div className={withBaseName(\"barOverlayRight\")}>\n          <div\n            className={withBaseName(\"barSubOverlayRight\")}\n            style={barSubOverlayRightStyle}\n          >\n            <div className={withBaseName(\"bar\")} />\n          </div>\n        </div>\n        {buffer > 0 && (\n          <div className={withBaseName(\"bufferOverlayLeft\")}>\n            <div\n              className={clsx(\n                withBaseName(\"bufferSubOverlay\"),\n                withBaseName(\"bufferSubOverlayLeft\")\n              )}\n              style={bufferSubOverlayLeftStyle}\n            >\n              <div className={withBaseName(\"bufferBorder\")} />\n              <div className={withBaseName(\"bufferBackground\")} />\n            </div>\n          </div>\n        )}\n        <div className={withBaseName(\"barOverlayLeft\")}>\n          <div\n            className={withBaseName(\"barSubOverlayLeft\")}\n            style={barSubOverlayLeftStyle}\n          >\n            <div className={withBaseName(\"bar\")} />\n          </div>\n        </div>\n      </div>\n      {!hideLabel && (\n        <Text styleAs=\"h2\" className={withBaseName(\"progressLabel\")}>\n          {`${Math.round(progress)} %`}\n        </Text>\n      )}\n    </div>\n  );\n});\n"],"names":["makePrefixer","forwardRef","CircularProgress","useWindow","useComponentCssInjection","circularProgressCSS","jsxs","clsx","jsx","Text"],"mappings":"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"}