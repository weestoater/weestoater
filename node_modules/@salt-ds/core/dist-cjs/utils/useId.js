'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return n;
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

const maybeReactUseId = React__namespace["useId".toString()];
let globalId = BigInt(0);
function useIdLegacy(idOverride) {
  const [defaultId, setDefaultId] = React__namespace.useState(idOverride);
  const id = idOverride || defaultId;
  React__namespace.useEffect(() => {
    if (defaultId == null) {
      setDefaultId(`salt-${++globalId}`);
    }
  }, [defaultId]);
  return id;
}
function useId(idOverride) {
  if (maybeReactUseId !== void 0) {
    const reactId = maybeReactUseId();
    return idOverride != null ? idOverride : reactId;
  }
  return useIdLegacy(idOverride);
}
function useIdMemo(idOverride) {
  const id = React__namespace.useMemo(() => {
    return idOverride != null ? idOverride : `salt-${++globalId}`;
  }, [idOverride]);
  return id;
}

exports.useId = useId;
exports.useIdMemo = useIdMemo;
//# sourceMappingURL=useId.js.map
